{"ast":null,"code":"const MS_PER_MINUTE = 60000;\nconst MS_PER_HOUR = 3600000;\nconst MS_PER_DAY = 86400000;\nconst MS_PER_MONTH = 2592000000;\nconst MS_PER_YEAR = 31536000000;\nexport default function getTimeBetweenTwoDates(date, t) {\n  const currentDate = new Date(); // if date is past the current date;\n\n  if (currentDate < date) return t(\"common.undefined\"); // convert to seconds\n\n  const timeDiff = currentDate.getTime() - date.getTime(); // use increasing denominations based on how recent the comparison between dates are\n  // e.g. x mins (< 1 hour), x hours (< 1 day), x days(< 1 month), x months(< 1 year), x years(> 1 year)\n\n  if (timeDiff < MS_PER_HOUR) {\n    // if time difference is less than 1 hour\n    const minutes = Math.floor(timeDiff % MS_PER_HOUR / MS_PER_MINUTE);\n    return minutes > 1 ? t(\"wallet.minuteAgo_other\", {\n      count: minutes\n    }) : t(\"wallet.minuteAgo_one\", {\n      count: minutes\n    });\n  } else if (timeDiff < MS_PER_DAY) {\n    // if time difference is less than 1 day\n    const hours = Math.floor(timeDiff / MS_PER_HOUR);\n    return hours > 1 ? t(\"wallet.hourAgo_other\", {\n      count: hours\n    }) : t(\"wallet.hourAgo_one\", {\n      count: hours\n    });\n  } else if (timeDiff < MS_PER_MONTH) {\n    // if time difference is less than 1 month\n    const days = Math.floor(timeDiff / MS_PER_DAY);\n    return days > 1 ? t(\"wallet.dayAgo_other\", {\n      count: days\n    }) : t(\"wallet.dayAgo_one\", {\n      count: days\n    });\n  } else if (timeDiff < MS_PER_YEAR) {\n    // if time difference is less than 1 year\n    const months = Math.floor(timeDiff / MS_PER_MONTH);\n    return months > 1 ? t(\"wallet.monthAgo_other\", {\n      count: months\n    }) : t(\"wallet.monthAgo_one\", {\n      count: months\n    });\n  } else {\n    const years = Math.floor(timeDiff / MS_PER_YEAR);\n    return years > 1 ? t(\"wallet.yearAgo_other\", {\n      count: years\n    }) : t(\"wallet.yearAgo_one\", {\n      count: years\n    });\n  }\n}","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/helpers/getTimeBetweenTwoDates.ts"],"names":["MS_PER_MINUTE","MS_PER_HOUR","MS_PER_DAY","MS_PER_MONTH","MS_PER_YEAR","getTimeBetweenTwoDates","date","t","currentDate","Date","timeDiff","getTime","minutes","Math","floor","count","hours","days","months","years"],"mappings":"AAAA,MAAMA,aAAa,GAAG,KAAtB;AACA,MAAMC,WAAW,GAAG,OAApB;AACA,MAAMC,UAAU,GAAG,QAAnB;AACA,MAAMC,YAAY,GAAG,UAArB;AACA,MAAMC,WAAW,GAAG,WAApB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,IAAhC,EAA4CC,CAA5C,EAA4D;AACzE,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB,CADyE,CAGzE;;AACA,MAAID,WAAW,GAAGF,IAAlB,EAAwB,OAAOC,CAAC,CAAC,kBAAD,CAAR,CAJiD,CAMzE;;AACA,QAAMG,QAAQ,GAAGF,WAAW,CAACG,OAAZ,KAAwBL,IAAI,CAACK,OAAL,EAAzC,CAPyE,CASzE;AACA;;AACA,MAAID,QAAQ,GAAGT,WAAf,EAA4B;AAC1B;AACA,UAAMW,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYJ,QAAQ,GAAGT,WAAZ,GAA2BD,aAAtC,CAAhB;AACA,WAAOY,OAAO,GAAG,CAAV,GACHL,CAAC,CAAC,wBAAD,EAA2B;AAAEQ,MAAAA,KAAK,EAAEH;AAAT,KAA3B,CADE,GAEHL,CAAC,CAAC,sBAAD,EAAyB;AAAEQ,MAAAA,KAAK,EAAEH;AAAT,KAAzB,CAFL;AAGD,GAND,MAMO,IAAIF,QAAQ,GAAGR,UAAf,EAA2B;AAChC;AACA,UAAMc,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAGT,WAAtB,CAAd;AACA,WAAOe,KAAK,GAAG,CAAR,GACHT,CAAC,CAAC,sBAAD,EAAyB;AAAEQ,MAAAA,KAAK,EAAEC;AAAT,KAAzB,CADE,GAEHT,CAAC,CAAC,oBAAD,EAAuB;AAAEQ,MAAAA,KAAK,EAAEC;AAAT,KAAvB,CAFL;AAGD,GANM,MAMA,IAAIN,QAAQ,GAAGP,YAAf,EAA6B;AAClC;AACA,UAAMc,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAGR,UAAtB,CAAb;AACA,WAAOe,IAAI,GAAG,CAAP,GACHV,CAAC,CAAC,qBAAD,EAAwB;AAAEQ,MAAAA,KAAK,EAAEE;AAAT,KAAxB,CADE,GAEHV,CAAC,CAAC,mBAAD,EAAsB;AAAEQ,MAAAA,KAAK,EAAEE;AAAT,KAAtB,CAFL;AAGD,GANM,MAMA,IAAIP,QAAQ,GAAGN,WAAf,EAA4B;AACjC;AACA,UAAMc,MAAM,GAAGL,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAGP,YAAtB,CAAf;AACA,WAAOe,MAAM,GAAG,CAAT,GACHX,CAAC,CAAC,uBAAD,EAA0B;AAAEQ,MAAAA,KAAK,EAAEG;AAAT,KAA1B,CADE,GAEHX,CAAC,CAAC,qBAAD,EAAwB;AAAEQ,MAAAA,KAAK,EAAEG;AAAT,KAAxB,CAFL;AAGD,GANM,MAMA;AACL,UAAMC,KAAK,GAAGN,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAGN,WAAtB,CAAd;AACA,WAAOe,KAAK,GAAG,CAAR,GACHZ,CAAC,CAAC,sBAAD,EAAyB;AAAEQ,MAAAA,KAAK,EAAEI;AAAT,KAAzB,CADE,GAEHZ,CAAC,CAAC,oBAAD,EAAuB;AAAEQ,MAAAA,KAAK,EAAEI;AAAT,KAAvB,CAFL;AAGD;AACF","sourcesContent":["const MS_PER_MINUTE = 60000;\nconst MS_PER_HOUR = 3600000;\nconst MS_PER_DAY = 86400000;\nconst MS_PER_MONTH = 2592000000;\nconst MS_PER_YEAR = 31536000000;\n\nexport default function getTimeBetweenTwoDates(date: Date, t: any): string {\n  const currentDate = new Date();\n\n  // if date is past the current date;\n  if (currentDate < date) return t(\"common.undefined\");\n\n  // convert to seconds\n  const timeDiff = currentDate.getTime() - date.getTime();\n\n  // use increasing denominations based on how recent the comparison between dates are\n  // e.g. x mins (< 1 hour), x hours (< 1 day), x days(< 1 month), x months(< 1 year), x years(> 1 year)\n  if (timeDiff < MS_PER_HOUR) {\n    // if time difference is less than 1 hour\n    const minutes = Math.floor((timeDiff % MS_PER_HOUR) / MS_PER_MINUTE);\n    return minutes > 1\n      ? t(\"wallet.minuteAgo_other\", { count: minutes })\n      : t(\"wallet.minuteAgo_one\", { count: minutes });\n  } else if (timeDiff < MS_PER_DAY) {\n    // if time difference is less than 1 day\n    const hours = Math.floor(timeDiff / MS_PER_HOUR);\n    return hours > 1\n      ? t(\"wallet.hourAgo_other\", { count: hours })\n      : t(\"wallet.hourAgo_one\", { count: hours });\n  } else if (timeDiff < MS_PER_MONTH) {\n    // if time difference is less than 1 month\n    const days = Math.floor(timeDiff / MS_PER_DAY);\n    return days > 1\n      ? t(\"wallet.dayAgo_other\", { count: days })\n      : t(\"wallet.dayAgo_one\", { count: days });\n  } else if (timeDiff < MS_PER_YEAR) {\n    // if time difference is less than 1 year\n    const months = Math.floor(timeDiff / MS_PER_MONTH);\n    return months > 1\n      ? t(\"wallet.monthAgo_other\", { count: months })\n      : t(\"wallet.monthAgo_one\", { count: months });\n  } else {\n    const years = Math.floor(timeDiff / MS_PER_YEAR);\n    return years > 1\n      ? t(\"wallet.yearAgo_other\", { count: years })\n      : t(\"wallet.yearAgo_one\", { count: years });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}