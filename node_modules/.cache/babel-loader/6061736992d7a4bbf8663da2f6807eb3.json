{"ast":null,"code":"'use strict';\n\nconst compact = require('lodash/compact');\n\nconst extend = require('lodash/extend');\n\nconst isFunction = require('lodash/isFunction');\n\nconst once = require('lodash/once');\n\nconst partial = require('lodash/partial');\n\nconst JSONStream = require('JSONStream');\n\nconst JSONstringify = require('json-stringify-safe');\n\nconst uuid = require('uuid/v4');\n\nconst generateRequest = require('./generateRequest');\n/** * @namespace */\n\n\nconst Utils = module.exports; // same reference as other files use, for tidyness\n\nconst utils = Utils;\nUtils.request = generateRequest;\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 response\n *  @param {Object} error Error member\n *  @param {Object} result Result member\n *  @param {String|Number|null} id Id of request\n *  @param {Number} version JSON-RPC version to use\n *  @return {Object} A JSON-RPC 1.0 or 2.0 response\n */\n\nUtils.response = function (error, result, id, version) {\n  id = typeof id === 'undefined' || id === null ? null : id;\n  error = typeof error === 'undefined' || error === null ? null : error;\n  version = typeof version === 'undefined' || version === null ? 2 : version;\n  result = typeof result === 'undefined' || result === null ? null : result;\n  const response = version === 2 ? {\n    jsonrpc: \"2.0\",\n    id: id\n  } : {\n    id: id\n  }; // errors are always included in version 1\n\n  if (version === 1) {\n    response.error = error;\n  } // one or the other with precedence for errors\n\n\n  if (error) {\n    response.error = error;\n  } else {\n    response.result = result;\n  }\n\n  return response;\n};\n/**\n *  Generates a random UUID\n *  @return {String}\n */\n\n\nUtils.generateId = function () {\n  return uuid();\n};\n/**\n *  Merges properties of object b into object a\n *  @param {...Object} Objects to be merged\n *  @return {Object}\n *  @private\n */\n\n\nUtils.merge = function () {\n  return extend.apply(null, arguments);\n};\n/**\n * Parses an incoming stream for requests using JSONStream\n * @param {Stream} stream\n * @param {Object} options\n * @param {Function} onRequest - Called once for stream errors and an unlimited amount of times for valid requests\n */\n\n\nUtils.parseStream = function (stream, options, onRequest) {\n  const onError = once(onRequest);\n  const onSuccess = partial(onRequest, null);\n  const result = JSONStream.parse();\n  result.on('data', function (data) {\n    // apply reviver walk function to prevent stringify/parse again\n    if (isFunction(options.reviver)) {\n      data = Utils.walk({\n        '': data\n      }, '', options.reviver);\n    }\n\n    onSuccess(data);\n  });\n  result.on('error', onError);\n  stream.on('error', onError);\n  stream.pipe(result);\n};\n/**\n *  Helper to parse a stream and interpret it as JSON\n *  @param {Stream} stream Stream instance\n *  @param {Function} [options] Optional options for JSON.parse\n *  @param {Function} callback\n */\n\n\nUtils.parseBody = function (stream, options, callback) {\n  callback = once(callback);\n  let data = '';\n  stream.setEncoding('utf8');\n  stream.on('data', function (str) {\n    data += str;\n  });\n  stream.on('error', function (err) {\n    callback(err);\n  });\n  stream.on('end', function () {\n    utils.JSON.parse(data, options, function (err, request) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, request);\n    });\n  });\n};\n/**\n *  Returns a HTTP request listener bound to the server in the argument.\n *  @param {http.Server} self Instance of a HTTP server\n *  @param {JaysonServer} server Instance of JaysonServer (typically jayson.Server)\n *  @return {Function}\n *  @private\n */\n\n\nUtils.getHttpListener = function (self, server) {\n  return function (req, res) {\n    const options = self.options || {};\n    server.emit('http request', req); //  405 method not allowed if not POST\n\n    if (!Utils.isMethod(req, 'POST')) {\n      return respond('Method Not Allowed', 405, {\n        'allow': 'POST'\n      });\n    } // 415 unsupported media type if Content-Type is not correct\n\n\n    if (!Utils.isContentType(req, 'application/json')) {\n      return respond('Unsupported Media Type', 415);\n    }\n\n    Utils.parseBody(req, options, function (err, request) {\n      if (err) {\n        return respond(err, 400);\n      }\n\n      server.call(request, function (error, success) {\n        const response = error || success;\n\n        if (!response) {\n          // no response received at all, must be a notification\n          return respond('', 204);\n        }\n\n        utils.JSON.stringify(response, options, function (err, body) {\n          if (err) {\n            return respond(err, 500);\n          }\n\n          const headers = {\n            'content-length': Buffer.byteLength(body, options.encoding),\n            'content-type': 'application/json; charset=utf-8'\n          };\n          respond(body, 200, headers);\n        });\n      });\n    });\n\n    function respond(response, code, headers) {\n      const body = response instanceof Error ? response.toString() : response;\n      server.emit('http response', res, req);\n      res.writeHead(code, headers || {});\n      res.end(body);\n    }\n  };\n};\n/**\n *  Determines if a HTTP Request comes with a specific Content-Type\n *  @param {ServerRequest} request\n *  @param {String} type\n *  @return {Boolean}\n *  @private\n */\n\n\nUtils.isContentType = function (request, type) {\n  request = request || {\n    headers: {}\n  };\n  const contentType = request.headers['content-type'] || '';\n  return RegExp(type, 'i').test(contentType);\n};\n/**\n *  Determines if a HTTP Request is of a specific method\n *  @param {ServerRequest} request\n *  @param {String} method\n *  @return {Boolean}\n *  @private\n */\n\n\nUtils.isMethod = function (request, method) {\n  method = (method || '').toUpperCase();\n  return (request.method || '') === method;\n};\n/**\n * Recursively walk an object and apply a function on its members\n * @param {Object} holder The object to walk\n * @param {String} key The key to look at\n * @param {Function} fn The function to apply to members\n * @return {Object}\n */\n\n\nUtils.walk = function (holder, key, fn) {\n  let k,\n      v,\n      value = holder[key];\n\n  if (value && typeof value === 'object') {\n    for (k in value) {\n      if (Object.prototype.hasOwnProperty.call(value, k)) {\n        v = Utils.walk(value, k, fn);\n\n        if (v !== undefined) {\n          value[k] = v;\n        } else {\n          delete value[k];\n        }\n      }\n    }\n  }\n\n  return fn.call(holder, key, value);\n};\n/** * @namespace */\n\n\nUtils.JSON = {};\n/**\n * Parses a JSON string and then invokes the given callback\n * @param {String} str The string to parse\n * @param {Object} options Object with options, possibly holding a \"reviver\" function\n * @param {Function} callback\n */\n\nUtils.JSON.parse = function (str, options, callback) {\n  let reviver = null;\n  let obj = null;\n  options = options || {};\n\n  if (isFunction(options.reviver)) {\n    reviver = options.reviver;\n  }\n\n  try {\n    obj = JSON.parse.apply(JSON, compact([str, reviver]));\n  } catch (err) {\n    return callback(err);\n  }\n\n  callback(null, obj);\n};\n/**\n * Stringifies JSON and then invokes the given callback\n * @param {Object} obj The object to stringify\n * @param {Object} options Object with options, possibly holding a \"replacer\" function\n * @param {Function} callback\n */\n\n\nUtils.JSON.stringify = function (obj, options, callback) {\n  let replacer = null;\n  let str = null;\n  options = options || {};\n\n  if (isFunction(options.replacer)) {\n    replacer = options.replacer;\n  }\n\n  try {\n    str = JSONstringify.apply(JSON, compact([obj, replacer]));\n  } catch (err) {\n    return callback(err);\n  }\n\n  callback(null, str);\n};\n/** * @namespace */\n\n\nUtils.Request = {};\n/**\n * Determines if the passed request is a batch request\n * @param {Object} request The request\n * @return {Boolean}\n */\n\nUtils.Request.isBatch = function (request) {\n  return Array.isArray(request);\n};\n/**\n * Determines if the passed request is a notification request\n * @param {Object} request The request\n * @return {Boolean}\n */\n\n\nUtils.Request.isNotification = function (request) {\n  return Boolean(request && !Utils.Request.isBatch(request) && (typeof request.id === 'undefined' || request.id === null));\n};\n/**\n * Determines if the passed request is a valid JSON-RPC 2.0 Request\n * @param {Object} request The request\n * @return {Boolean}\n */\n\n\nUtils.Request.isValidVersionTwoRequest = function (request) {\n  return Boolean(request && typeof request === 'object' && request.jsonrpc === '2.0' && typeof request.method === 'string' && (typeof request.params === 'undefined' || Array.isArray(request.params) || request.params && typeof request.params === 'object') && (typeof request.id === 'undefined' || typeof request.id === 'string' || typeof request.id === 'number' || request.id === null));\n};\n/**\n * Determines if the passed request is a valid JSON-RPC 1.0 Request\n * @param {Object} request The request\n * @return {Boolean}\n */\n\n\nUtils.Request.isValidVersionOneRequest = function (request) {\n  return Boolean(request && typeof request === 'object' && typeof request.method === 'string' && Array.isArray(request.params) && typeof request.id !== 'undefined');\n};\n/**\n * Determines if the passed request is a valid JSON-RPC Request\n * @param {Object} request The request\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\n\n\nUtils.Request.isValidRequest = function (request, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(request && (version === 1 && Utils.Request.isValidVersionOneRequest(request) || version === 2 && Utils.Request.isValidVersionTwoRequest(request)));\n};\n/** * @namespace */\n\n\nUtils.Response = {};\n/**\n * Determines if the passed error is a valid JSON-RPC error response\n * @param {Object} error The error\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\n\nUtils.Response.isValidError = function (error, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(version === 1 && typeof error !== 'undefined' && error !== null || version === 2 && error && typeof error.code === 'number' && parseInt(error.code, 10) === error.code && typeof error.message === 'string');\n};\n/**\n * Determines if the passed object is a valid JSON-RPC response\n * @param {Object} response The response\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\n\n\nUtils.Response.isValidResponse = function (response, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(response !== null && typeof response === 'object' && (version === 2 && // check version\n  response.jsonrpc === '2.0' && ( // check id\n  response.id === null || typeof response.id === 'string' || typeof response.id === 'number') && ( // result and error do not exist at the same time\n  typeof response.result === 'undefined' && typeof response.error !== 'undefined' || typeof response.result !== 'undefined' && typeof response.error === 'undefined') && ( // check result\n  typeof response.result !== 'undefined' // check error object\n  || response.error !== null && typeof response.error === 'object' && typeof response.error.code === 'number' // check error.code is integer\n  && (response.error.code | 0) === response.error.code && typeof response.error.message === 'string') || version === 1 && typeof response.id !== 'undefined' && ( // result and error relation (the other null if one is not)\n  typeof response.result !== 'undefined' && response.error === null || typeof response.error !== 'undefined' && response.result === null)));\n};","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/node_modules/jayson/lib/utils.js"],"names":["compact","require","extend","isFunction","once","partial","JSONStream","JSONstringify","uuid","generateRequest","Utils","module","exports","utils","request","response","error","result","id","version","jsonrpc","generateId","merge","apply","arguments","parseStream","stream","options","onRequest","onError","onSuccess","parse","on","data","reviver","walk","pipe","parseBody","callback","setEncoding","str","err","JSON","getHttpListener","self","server","req","res","emit","isMethod","respond","isContentType","call","success","stringify","body","headers","Buffer","byteLength","encoding","code","Error","toString","writeHead","end","type","contentType","RegExp","test","method","toUpperCase","holder","key","fn","k","v","value","Object","prototype","hasOwnProperty","undefined","obj","replacer","Request","isBatch","Array","isArray","isNotification","Boolean","isValidVersionTwoRequest","params","isValidVersionOneRequest","isValidRequest","Response","isValidError","parseInt","message","isValidResponse"],"mappings":"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","sourcesContent":["'use strict';\n\nconst compact = require('lodash/compact');\nconst extend = require('lodash/extend');\nconst isFunction = require('lodash/isFunction');\nconst once = require('lodash/once');\nconst partial = require('lodash/partial');\nconst JSONStream = require('JSONStream');\nconst JSONstringify = require('json-stringify-safe');\nconst uuid = require('uuid/v4');\n\nconst generateRequest = require('./generateRequest');\n\n/** * @namespace */\nconst Utils = module.exports;\n\n// same reference as other files use, for tidyness\nconst utils = Utils;\n\nUtils.request = generateRequest;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 response\n *  @param {Object} error Error member\n *  @param {Object} result Result member\n *  @param {String|Number|null} id Id of request\n *  @param {Number} version JSON-RPC version to use\n *  @return {Object} A JSON-RPC 1.0 or 2.0 response\n */\nUtils.response = function(error, result, id, version) {\n  id = typeof(id) === 'undefined' || id === null ? null : id;\n  error = typeof(error) === 'undefined' || error === null ? null : error;\n  version = typeof(version) === 'undefined' || version === null ? 2 : version;\n  result = typeof(result) === 'undefined' || result === null ? null : result;\n  const response = (version === 2) ? { jsonrpc: \"2.0\", id: id } : { id: id };\n\n  // errors are always included in version 1\n  if(version === 1) {\n    response.error = error;\n  }\n\n  // one or the other with precedence for errors\n  if(error) {\n    response.error = error;\n  } else {\n    response.result = result;\n  }\n  return response;\n};\n\n/**\n *  Generates a random UUID\n *  @return {String}\n */\nUtils.generateId = function() {\n  return uuid();\n};\n\n/**\n *  Merges properties of object b into object a\n *  @param {...Object} Objects to be merged\n *  @return {Object}\n *  @private\n */\nUtils.merge = function() {\n  return extend.apply(null, arguments);\n};\n\n/**\n * Parses an incoming stream for requests using JSONStream\n * @param {Stream} stream\n * @param {Object} options\n * @param {Function} onRequest - Called once for stream errors and an unlimited amount of times for valid requests\n */\nUtils.parseStream = function(stream, options, onRequest) {\n\n  const onError = once(onRequest);\n  const onSuccess = partial(onRequest, null);\n\n  const result = JSONStream.parse();\n\n  result.on('data', function(data) {\n\n    // apply reviver walk function to prevent stringify/parse again\n    if(isFunction(options.reviver)) {\n      data = Utils.walk({'': data}, '', options.reviver);\n    }\n\n    onSuccess(data);\n  });\n\n  result.on('error', onError);\n  stream.on('error', onError);\n\n  stream.pipe(result);\n\n};\n\n/**\n *  Helper to parse a stream and interpret it as JSON\n *  @param {Stream} stream Stream instance\n *  @param {Function} [options] Optional options for JSON.parse\n *  @param {Function} callback\n */\nUtils.parseBody = function(stream, options, callback) {\n\n  callback = once(callback);\n  let data = '';\n\n  stream.setEncoding('utf8');\n\n  stream.on('data', function(str) {\n    data += str;\n  });\n\n  stream.on('error', function(err) {\n    callback(err);\n  });\n\n  stream.on('end', function() {\n    utils.JSON.parse(data, options, function(err, request) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, request);\n    });\n  });\n\n};\n\n/**\n *  Returns a HTTP request listener bound to the server in the argument.\n *  @param {http.Server} self Instance of a HTTP server\n *  @param {JaysonServer} server Instance of JaysonServer (typically jayson.Server)\n *  @return {Function}\n *  @private\n */\nUtils.getHttpListener = function(self, server) {\n  return function(req, res) {\n    const options = self.options || {};\n\n    server.emit('http request', req);\n\n    //  405 method not allowed if not POST\n    if(!Utils.isMethod(req, 'POST')) {\n      return respond('Method Not Allowed', 405, {'allow': 'POST'});\n    }\n\n    // 415 unsupported media type if Content-Type is not correct\n    if(!Utils.isContentType(req, 'application/json')) {\n      return respond('Unsupported Media Type', 415);\n    }\n\n    Utils.parseBody(req, options, function(err, request) {\n      if(err) {\n        return respond(err, 400);\n      }\n\n      server.call(request, function(error, success) {\n        const response = error || success;\n        if(!response) {\n          // no response received at all, must be a notification\n          return respond('', 204);\n        }\n\n        utils.JSON.stringify(response, options, function(err, body) {\n          if(err) {\n            return respond(err, 500);\n          }\n\n          const headers = {\n            'content-length': Buffer.byteLength(body, options.encoding),\n            'content-type': 'application/json; charset=utf-8'\n          };\n\n          respond(body, 200, headers);\n        });\n\n      });\n\n    });\n\n    function respond(response, code, headers) {\n      const body = response instanceof Error ? response.toString() : response;\n      server.emit('http response', res, req);\n      res.writeHead(code, headers || {});\n      res.end(body);\n    }\n\n  };\n};\n\n/**\n *  Determines if a HTTP Request comes with a specific Content-Type\n *  @param {ServerRequest} request\n *  @param {String} type\n *  @return {Boolean}\n *  @private\n */\nUtils.isContentType = function(request, type) {\n  request = request || {headers: {}};\n  const contentType = request.headers['content-type'] || '';\n  return RegExp(type, 'i').test(contentType);\n};\n\n/**\n *  Determines if a HTTP Request is of a specific method\n *  @param {ServerRequest} request\n *  @param {String} method\n *  @return {Boolean}\n *  @private\n */\nUtils.isMethod = function(request, method) {\n  method = (method || '').toUpperCase();\n  return (request.method || '') === method;\n};\n\n/**\n * Recursively walk an object and apply a function on its members\n * @param {Object} holder The object to walk\n * @param {String} key The key to look at\n * @param {Function} fn The function to apply to members\n * @return {Object}\n */\nUtils.walk = function(holder, key, fn) {\n  let k, v, value = holder[key];\n  if (value && typeof value === 'object') {\n    for (k in value) {\n      if (Object.prototype.hasOwnProperty.call(value, k)) {\n        v = Utils.walk(value, k, fn);\n        if (v !== undefined) {\n          value[k] = v;\n        } else {\n          delete value[k];\n        }\n      }\n    }\n  }\n  return fn.call(holder, key, value);\n};\n\n/** * @namespace */\nUtils.JSON = {};\n\n/**\n * Parses a JSON string and then invokes the given callback\n * @param {String} str The string to parse\n * @param {Object} options Object with options, possibly holding a \"reviver\" function\n * @param {Function} callback\n */\nUtils.JSON.parse = function(str, options, callback) {\n  let reviver = null;\n  let obj = null;\n  options = options || {};\n\n  if(isFunction(options.reviver)) {\n    reviver = options.reviver;\n  }\n\n  try {\n    obj = JSON.parse.apply(JSON, compact([str, reviver]));\n  } catch(err) {\n    return callback(err);\n  }\n\n  callback(null, obj);\n};\n\n/**\n * Stringifies JSON and then invokes the given callback\n * @param {Object} obj The object to stringify\n * @param {Object} options Object with options, possibly holding a \"replacer\" function\n * @param {Function} callback\n */\nUtils.JSON.stringify = function(obj, options, callback) {\n  let replacer = null;\n  let str = null;\n  options = options || {};\n\n  if(isFunction(options.replacer)) {\n    replacer = options.replacer;\n  }\n\n  try {\n    str = JSONstringify.apply(JSON, compact([obj, replacer]));\n  } catch(err) {\n    return callback(err);\n  }\n\n  callback(null, str);\n};\n\n/** * @namespace */\nUtils.Request = {};\n\n/**\n * Determines if the passed request is a batch request\n * @param {Object} request The request\n * @return {Boolean}\n */\nUtils.Request.isBatch = function(request) {\n  return Array.isArray(request);\n};\n\n/**\n * Determines if the passed request is a notification request\n * @param {Object} request The request\n * @return {Boolean}\n */\nUtils.Request.isNotification = function(request) {\n  return Boolean(\n    request\n    && !Utils.Request.isBatch(request)\n    && (typeof(request.id) === 'undefined'\n         || request.id === null)\n  );\n};\n\n/**\n * Determines if the passed request is a valid JSON-RPC 2.0 Request\n * @param {Object} request The request\n * @return {Boolean}\n */\nUtils.Request.isValidVersionTwoRequest = function(request) {\n  return Boolean(\n    request\n    && typeof(request) === 'object'\n    && request.jsonrpc === '2.0'\n    && typeof(request.method) === 'string'\n    && (\n      typeof(request.params) === 'undefined'\n      || Array.isArray(request.params)\n      || (request.params && typeof(request.params) === 'object')\n    )\n    && (\n      typeof(request.id) === 'undefined'\n      || typeof(request.id) === 'string'\n      || typeof(request.id) === 'number'\n      || request.id === null\n    )\n  );\n};\n\n/**\n * Determines if the passed request is a valid JSON-RPC 1.0 Request\n * @param {Object} request The request\n * @return {Boolean}\n */\nUtils.Request.isValidVersionOneRequest = function(request) {\n  return Boolean(\n    request\n    && typeof(request) === 'object'\n    && typeof(request.method) === 'string'\n    && Array.isArray(request.params)\n    && typeof(request.id) !== 'undefined'\n  );\n};\n\n/**\n * Determines if the passed request is a valid JSON-RPC Request\n * @param {Object} request The request\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\nUtils.Request.isValidRequest = function(request, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(\n    request\n    && (\n      (version === 1 && Utils.Request.isValidVersionOneRequest(request)) ||\n      (version === 2 && Utils.Request.isValidVersionTwoRequest(request))\n    )\n  );\n};\n\n/** * @namespace */\nUtils.Response = {};\n\n/**\n * Determines if the passed error is a valid JSON-RPC error response\n * @param {Object} error The error\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\nUtils.Response.isValidError = function(error, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(\n    version === 1 && (\n      typeof(error) !== 'undefined'\n      && error !== null\n    )\n    || version === 2 && (\n      error\n      && typeof(error.code) === 'number'\n      && parseInt(error.code, 10) === error.code\n      && typeof(error.message) === 'string'\n    )\n  );\n};\n\n/**\n * Determines if the passed object is a valid JSON-RPC response\n * @param {Object} response The response\n * @param {Number} [version=2] JSON-RPC version 1 or 2\n * @return {Boolean}\n */\nUtils.Response.isValidResponse = function(response, version) {\n  version = version === 1 ? 1 : 2;\n  return Boolean(\n    response !== null\n    && typeof response === 'object'\n    && (version === 2 && (\n      // check version\n      response.jsonrpc === '2.0'\n      && (\n        // check id\n        response.id === null\n        || typeof response.id === 'string'\n        || typeof response.id === 'number'\n      )\n      && (\n        // result and error do not exist at the same time\n        (typeof response.result === 'undefined' && typeof response.error !== 'undefined')\n        || (typeof response.result !== 'undefined' && typeof response.error === 'undefined')\n      )\n      && (\n        // check result\n        (typeof response.result !== 'undefined')\n        // check error object\n        || (\n          response.error !== null\n          && typeof response.error === 'object'\n          && typeof response.error.code === 'number'\n          // check error.code is integer\n          && ((response.error.code | 0) === response.error.code)\n          && typeof response.error.message === 'string'\n        )\n      )\n    )\n      || version === 1 && (\n        typeof response.id !== 'undefined'\n        && (\n          // result and error relation (the other null if one is not)\n          (typeof response.result !== 'undefined' && response.error === null)\n          || (typeof response.error !== 'undefined' && response.result === null)\n        )\n      ))\n  );\n};\n"]},"metadata":{},"sourceType":"script"}