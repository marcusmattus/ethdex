{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/airswap-web/src/components/SwapWidget/InfoSection.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { BigNumber } from \"bignumber.js\";\nimport stringToSignificantDecimals from \"../../helpers/stringToSignificantDecimals\";\nimport { InfoSubHeading } from \"../Typography/Typography\";\nimport { StyledInfoHeading, RevertPriceButton, FeeText, InfoButton, FeeTextContainer, ApprovalText } from \"./InfoSection.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InfoSection = ({\n  isConnected,\n  isPairUnavailable,\n  orderSubmitted,\n  isApproving,\n  isSwapping,\n  failedToFetchAllowances,\n  bestTradeOption,\n  isWrapping,\n  isFetchingOrders,\n  requiresApproval,\n  baseTokenInfo,\n  baseAmount,\n  quoteTokenInfo,\n  onFeeButtonClick\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [invertPrice, setInvertPrice] = useState(false); // Wallet not connected.\n\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"marketing.welcomeHeading\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"marketing.welcomeMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isConnected && failedToFetchAllowances && (!!bestTradeOption || isWrapping)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"balances.failedToFetchAllowances\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"balances.failedToFetchAllowancesCta\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isConnected && failedToFetchAllowances && (!!bestTradeOption || isWrapping)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"balances.failedToFetchAllowances\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"balances.failedToFetchAllowancesCta\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isFetchingOrders) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"orders.findingBestPrice\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.scanningPeers\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isPairUnavailable) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"orders.tokenPairUnavailable\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.retryOrCancel\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (orderSubmitted) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"orders.submitted\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.trackTransaction\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isApproving) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"orders.approvePending\", {\n          symbol: baseTokenInfo.symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.approveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isSwapping) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: t(\"orders.swapPending\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.swapMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (isWrapping) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n        children: [\"1 \", invertPrice ? quoteTokenInfo.symbol : baseTokenInfo.symbol, \" = 1\", \" \", invertPrice ? baseTokenInfo.symbol : quoteTokenInfo.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n        children: t(\"orders.wrapMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (!!bestTradeOption) {\n    let price = new BigNumber(bestTradeOption.quoteAmount).dividedBy(baseAmount);\n\n    if (invertPrice) {\n      price = new BigNumber(1).dividedBy(price);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n          children: [\"1 \", invertPrice ? quoteTokenInfo.symbol : baseTokenInfo.symbol, \" =\", \" \", stringToSignificantDecimals(price.toString()), \" \", invertPrice ? baseTokenInfo.symbol : quoteTokenInfo.symbol, /*#__PURE__*/_jsxDEV(RevertPriceButton, {\n            icon: \"swap\",\n            ariaLabel: t(\"orders.revertPrice\"),\n            iconSize: 1,\n            onClick: () => setInvertPrice(p => !p)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeeTextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FeeText, {\n            children: t(\"marketing.includesFee\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoButton, {\n            onClick: onFeeButtonClick,\n            ariaLabel: t(\"orders.moreInformation\"),\n            icon: \"information-circle-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), requiresApproval && /*#__PURE__*/_jsxDEV(ApprovalText, {\n        children: t(\"orders.approvalRequired\", {\n          symbol: baseTokenInfo.symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  } // No order & not fetching, but wallet connected.\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInfoHeading, {\n      children: t(\"marketing.welcomeHeading\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoSubHeading, {\n      children: t(\"marketing.welcomeMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InfoSection, \"zL+XyXE3GB34pxrKJzXj/BYphFE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = InfoSection;\nexport default InfoSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoSection\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/components/SwapWidget/InfoSection.tsx"],"names":["useState","useTranslation","BigNumber","stringToSignificantDecimals","InfoSubHeading","StyledInfoHeading","RevertPriceButton","FeeText","InfoButton","FeeTextContainer","ApprovalText","InfoSection","isConnected","isPairUnavailable","orderSubmitted","isApproving","isSwapping","failedToFetchAllowances","bestTradeOption","isWrapping","isFetchingOrders","requiresApproval","baseTokenInfo","baseAmount","quoteTokenInfo","onFeeButtonClick","t","invertPrice","setInvertPrice","symbol","price","quoteAmount","dividedBy","toString","p"],"mappings":"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","sourcesContent":["import { FC, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\nimport { Levels } from \"@airswap/types\";\nimport { LightOrder } from \"@airswap/types\";\n\nimport { BigNumber } from \"bignumber.js\";\n\nimport stringToSignificantDecimals from \"../../helpers/stringToSignificantDecimals\";\nimport { InfoSubHeading } from \"../Typography/Typography\";\nimport {\n  StyledInfoHeading,\n  RevertPriceButton,\n  FeeText,\n  InfoButton,\n  FeeTextContainer,\n  ApprovalText,\n} from \"./InfoSection.styles\";\n\nexport type InfoSectionProps = {\n  isConnected: boolean;\n  isPairUnavailable: boolean;\n  orderSubmitted: boolean;\n  isFetchingOrders: boolean;\n  isApproving: boolean;\n  isSwapping: boolean;\n  failedToFetchAllowances: boolean;\n  bestTradeOption:\n    | {\n        protocol: \"last-look\";\n        quoteAmount: string;\n        pricing: Levels;\n      }\n    | {\n        protocol: \"request-for-quote\";\n        quoteAmount: string;\n        order: LightOrder;\n      }\n    | null;\n  isWrapping: boolean;\n  requiresApproval: boolean;\n  quoteTokenInfo: TokenInfo | null;\n  baseTokenInfo: TokenInfo | null;\n  baseAmount: string;\n  onFeeButtonClick: () => void;\n};\n\nconst InfoSection: FC<InfoSectionProps> = ({\n  isConnected,\n  isPairUnavailable,\n  orderSubmitted,\n  isApproving,\n  isSwapping,\n  failedToFetchAllowances,\n  bestTradeOption,\n  isWrapping,\n  isFetchingOrders,\n  requiresApproval,\n  baseTokenInfo,\n  baseAmount,\n  quoteTokenInfo,\n  onFeeButtonClick,\n}) => {\n  const { t } = useTranslation();\n  const [invertPrice, setInvertPrice] = useState<boolean>(false);\n  // Wallet not connected.\n  if (!isConnected) {\n    return (\n      <>\n        <StyledInfoHeading>{t(\"marketing.welcomeHeading\")}</StyledInfoHeading>\n        <InfoSubHeading>{t(\"marketing.welcomeMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (\n    isConnected &&\n    failedToFetchAllowances &&\n    (!!bestTradeOption || isWrapping)\n  ) {\n    return (\n      <>\n        <StyledInfoHeading>\n          {t(\"balances.failedToFetchAllowances\")}\n        </StyledInfoHeading>\n        <InfoSubHeading>\n          {t(\"balances.failedToFetchAllowancesCta\")}\n        </InfoSubHeading>\n      </>\n    );\n  }\n\n  if (\n    isConnected &&\n    failedToFetchAllowances &&\n    (!!bestTradeOption || isWrapping)\n  ) {\n    return (\n      <>\n        <StyledInfoHeading>\n          {t(\"balances.failedToFetchAllowances\")}\n        </StyledInfoHeading>\n        <InfoSubHeading>\n          {t(\"balances.failedToFetchAllowancesCta\")}\n        </InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isFetchingOrders) {\n    return (\n      <>\n        <StyledInfoHeading>{t(\"orders.findingBestPrice\")}</StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.scanningPeers\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isPairUnavailable) {\n    return (\n      <>\n        <StyledInfoHeading>\n          {t(\"orders.tokenPairUnavailable\")}\n        </StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.retryOrCancel\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (orderSubmitted) {\n    return (\n      <>\n        <StyledInfoHeading>{t(\"orders.submitted\")}</StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.trackTransaction\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isApproving) {\n    return (\n      <>\n        <StyledInfoHeading>\n          {t(\"orders.approvePending\", { symbol: baseTokenInfo!.symbol })}\n        </StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.approveMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isSwapping) {\n    return (\n      <>\n        <StyledInfoHeading>{t(\"orders.swapPending\")}</StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.swapMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (isWrapping) {\n    return (\n      <>\n        <StyledInfoHeading>\n          1 {invertPrice ? quoteTokenInfo!.symbol : baseTokenInfo!.symbol} = 1{\" \"}\n          {invertPrice ? baseTokenInfo!.symbol : quoteTokenInfo!.symbol}\n        </StyledInfoHeading>\n        <InfoSubHeading>{t(\"orders.wrapMessage\")}</InfoSubHeading>\n      </>\n    );\n  }\n\n  if (!!bestTradeOption) {\n    let price = new BigNumber(bestTradeOption.quoteAmount).dividedBy(\n      baseAmount\n    );\n\n    if (invertPrice) {\n      price = new BigNumber(1).dividedBy(price);\n    }\n\n    return (\n      <>\n        <>\n          <StyledInfoHeading>\n            1 {invertPrice ? quoteTokenInfo!.symbol : baseTokenInfo!.symbol} ={\" \"}\n            {stringToSignificantDecimals(price.toString())}{\" \"}\n            {invertPrice ? baseTokenInfo!.symbol : quoteTokenInfo!.symbol}\n            <RevertPriceButton\n              icon=\"swap\"\n              ariaLabel={t(\"orders.revertPrice\")}\n              iconSize={1}\n              onClick={() => setInvertPrice((p) => !p)}\n            />\n          </StyledInfoHeading>\n          <FeeTextContainer>\n            <FeeText>{t(\"marketing.includesFee\")}</FeeText>\n            <InfoButton\n              onClick={onFeeButtonClick}\n              ariaLabel={t(\"orders.moreInformation\")}\n              icon=\"information-circle-outline\"\n            />\n          </FeeTextContainer>\n        </>\n        {requiresApproval && (\n          <ApprovalText>\n            {t(\"orders.approvalRequired\", { symbol: baseTokenInfo!.symbol })}\n          </ApprovalText>\n        )}\n      </>\n    );\n  }\n\n  // No order & not fetching, but wallet connected.\n  return (\n    <>\n      <StyledInfoHeading>{t(\"marketing.welcomeHeading\")}</StyledInfoHeading>\n      <InfoSubHeading>{t(\"marketing.welcomeMessage\")}</InfoSubHeading>\n    </>\n  );\n};\n\nexport default InfoSection;\n"]},"metadata":{},"sourceType":"module"}