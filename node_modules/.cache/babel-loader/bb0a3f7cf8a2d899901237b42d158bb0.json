{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/TransactionsTab/TransactionsTab.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { getEtherscanWalletURL } from \"@airswap/utils\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { AnimatePresence, useReducedMotion } from \"framer-motion\";\nimport useMediaQuery from \"../../helpers/useMediaQuery\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport useAddressOrEnsName from \"../../hooks/useAddressOrEnsName\";\nimport breakPoints from \"../../style/breakpoints\";\nimport Icon from \"../Icon/Icon\";\nimport { Container, WalletHeader, Legend, LegendLine, TransactionContainer, TransactionsContainer, BottomButtonContainer, DisconnectButton, NoTransactions, IconContainer, BackButton, NetworkInfoContainer, NetworkName, Balances, LegendContainer, MobileBackButton, DesktopWalletInfoButton, MobileWalletInfoButton, StyledWalletMobileMenu, BackdropFilter } from \"./TransactionsTab.styles\";\nimport AnimatedWalletTransaction from \"./subcomponents/AnimatedWalletTransaction/AnimatedWalletTransaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addressMapping = {\n  1: \"Mainnet\",\n  4: \"Rinkeby\"\n};\n\nconst TransactionsTab = ({\n  address = \"\",\n  chainId,\n  open,\n  setTransactionsTabOpen,\n  onDisconnectWalletClicked,\n  transactions = [],\n  tokens = [],\n  balances,\n  isUnsupportedNetwork = false\n}) => {\n  _s();\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const shouldReduceMotion = useReducedMotion();\n  const isMobile = useMediaQuery(breakPoints.phoneOnly);\n  const {\n    t\n  } = useTranslation();\n  const [overflow, setOverflow] = useState(false);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const containerRef = useRef(null);\n  const transactionsScrollRef = useRef(null);\n  const buttonRef = useRef(null);\n  const addressOrName = useAddressOrEnsName(address);\n  const walletInfoText = useMemo(() => {\n    return isUnsupportedNetwork ? t(\"wallet.unsupported\") : addressOrName ? addressOrName : t(\"wallet.notConnected\");\n  }, [addressOrName, isUnsupportedNetwork, t]);\n  const walletUrl = useMemo(() => getEtherscanWalletURL(chainId, address), [chainId, address]);\n  const handleEscKey = useCallback(e => {\n    if (e.keyCode === 27) {\n      setTransactionsTabOpen(false);\n    }\n  }, [setTransactionsTabOpen]);\n\n  const toggleWalletMobileMenu = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscKey, false);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleEscKey]);\n  useEffect(() => {\n    if (!open) {\n      setShowMobileMenu(false);\n    }\n  }, [open]);\n  useEffect(() => {\n    if (containerRef.current && transactionsScrollRef.current && buttonRef.current) {\n      const {\n        offsetTop,\n        scrollHeight\n      } = transactionsScrollRef.current;\n      const containerHeight = containerRef.current.getBoundingClientRect().height;\n      const buttonHeight = buttonRef.current.getBoundingClientRect().height;\n      setOverflow(scrollHeight + offsetTop > containerHeight - buttonHeight);\n    }\n  }, [containerRef, transactionsScrollRef, buttonRef, width, height, open, transactions]); // Every time a new transactions is added, scroll to top.\n\n  useEffect(() => {\n    if (transactionsScrollRef && transactionsScrollRef.current) {\n      transactionsScrollRef.current.scrollTo({\n        top: 0\n      });\n    }\n  }, [transactionsScrollRef, transactions]);\n  const pendingTransactions = useMemo(() => {\n    return transactions.filter(transaction => transaction.status === \"processing\");\n  }, [transactions]);\n  const completedTransactions = useMemo(() => {\n    return transactions.filter(transaction => transaction.status !== \"processing\");\n  }, [transactions]);\n  const balance = balances.values[\"0x0000000000000000000000000000000000000000\"] || \"0\";\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: open && /*#__PURE__*/_jsxDEV(Container, {\n      ref: containerRef,\n      animate: {\n        x: 0\n      },\n      transition: {\n        duration: shouldReduceMotion ? 0 : 0.3\n      },\n      initial: {\n        x: isMobile ? \"100%\" : \"24rem\"\n      },\n      exit: {\n        x: isMobile ? \"100%\" : \"24rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        \"aria-label\": t(\"common.back\"),\n        animate: {\n          y: 0\n        },\n        transition: {\n          duration: shouldReduceMotion ? 0 : 0.5\n        },\n        initial: {\n          y: \"-5rem\"\n        },\n        exit: {\n          opacity: 0\n        },\n        onClick: () => setTransactionsTabOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"chevron-right\",\n          iconSize: 1.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WalletHeader, {\n        children: [/*#__PURE__*/_jsxDEV(NetworkInfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NetworkName, {\n            children: addressMapping[chainId] || t(\"wallet.unsupported\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Balances, {\n            children: [formatUnits(balance).substring(0, 5), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DesktopWalletInfoButton, {\n          onClick: setTransactionsTabOpen.bind(null, false),\n          children: walletInfoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileWalletInfoButton, {\n          onClick: toggleWalletMobileMenu,\n          children: walletInfoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), showMobileMenu && /*#__PURE__*/_jsxDEV(StyledWalletMobileMenu, {\n          walletUrl: walletUrl,\n          address: address,\n          onDisconnectButtonClick: onDisconnectWalletClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsContainer, {\n        ref: transactionsScrollRef,\n        $overflow: overflow,\n        children: [/*#__PURE__*/_jsxDEV(LegendContainer, {\n          $isVisible: !!pendingTransactions.length,\n          children: /*#__PURE__*/_jsxDEV(Legend, {\n            children: /*#__PURE__*/_jsxDEV(LegendLine, {\n              children: t(\"wallet.activeTransactions\").toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionContainer, {\n          $isEmpty: !pendingTransactions.length,\n          children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            initial: false,\n            children: pendingTransactions.map(transaction => /*#__PURE__*/_jsxDEV(AnimatedWalletTransaction, {\n              transaction: transaction,\n              tokens: tokens,\n              chainId: chainId\n            }, `${transaction.hash}-${transaction.nonce}-${transaction.expiry}-pending`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LegendContainer, {\n          $isVisible: true,\n          children: /*#__PURE__*/_jsxDEV(Legend, {\n            children: /*#__PURE__*/_jsxDEV(LegendLine, {\n              children: t(\"wallet.completedTransactions\").toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionContainer, {\n          children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n            initial: false,\n            children: completedTransactions.slice(0, 10).map(transaction => /*#__PURE__*/_jsxDEV(AnimatedWalletTransaction, {\n              transaction: transaction,\n              tokens: tokens,\n              chainId: chainId\n            }, `${transaction.hash}-${transaction.nonce}-${transaction.expiry}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), !completedTransactions.length && /*#__PURE__*/_jsxDEV(NoTransactions, {\n            children: [/*#__PURE__*/_jsxDEV(IconContainer, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), t(\"wallet.noCompletedTransactions\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BottomButtonContainer, {\n        ref: buttonRef,\n        children: [/*#__PURE__*/_jsxDEV(DisconnectButton, {\n          \"aria-label\": t(\"wallet.disconnectWallet\"),\n          onClick: onDisconnectWalletClicked,\n          children: t(\"wallet.disconnectWallet\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileBackButton, {\n          \"aria-label\": t(\"common.back\"),\n          onClick: () => setTransactionsTabOpen(false),\n          children: t(\"common.back\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), showMobileMenu && /*#__PURE__*/_jsxDEV(BackdropFilter, {\n        onClick: toggleWalletMobileMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsTab, \"9/sJbAlcLydFAyLjiNVME7WG4sI=\", false, function () {\n  return [useWindowSize, useReducedMotion, useMediaQuery, useTranslation, useAddressOrEnsName];\n});\n\n_c = TransactionsTab;\nexport default TransactionsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsTab\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/TransactionsTab/TransactionsTab.tsx"],"names":["useCallback","useEffect","useRef","useMemo","useState","useTranslation","getEtherscanWalletURL","formatUnits","AnimatePresence","useReducedMotion","useMediaQuery","useWindowSize","useAddressOrEnsName","breakPoints","Icon","Container","WalletHeader","Legend","LegendLine","TransactionContainer","TransactionsContainer","BottomButtonContainer","DisconnectButton","NoTransactions","IconContainer","BackButton","NetworkInfoContainer","NetworkName","Balances","LegendContainer","MobileBackButton","DesktopWalletInfoButton","MobileWalletInfoButton","StyledWalletMobileMenu","BackdropFilter","AnimatedWalletTransaction","addressMapping","TransactionsTab","address","chainId","open","setTransactionsTabOpen","onDisconnectWalletClicked","transactions","tokens","balances","isUnsupportedNetwork","width","height","shouldReduceMotion","isMobile","phoneOnly","t","overflow","setOverflow","showMobileMenu","setShowMobileMenu","containerRef","transactionsScrollRef","buttonRef","addressOrName","walletInfoText","walletUrl","handleEscKey","e","keyCode","toggleWalletMobileMenu","document","addEventListener","removeEventListener","current","offsetTop","scrollHeight","containerHeight","getBoundingClientRect","buttonHeight","scrollTo","top","pendingTransactions","filter","transaction","status","completedTransactions","balance","values","x","duration","y","opacity","substring","bind","length","toUpperCase","map","hash","nonce","expiry","slice"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\nimport { getEtherscanWalletURL } from \"@airswap/utils\";\n\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { AnimatePresence, useReducedMotion } from \"framer-motion\";\n\nimport { BalancesState } from \"../../features/balances/balancesSlice\";\nimport { SubmittedTransaction } from \"../../features/transactions/transactionsSlice\";\nimport useMediaQuery from \"../../helpers/useMediaQuery\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport useAddressOrEnsName from \"../../hooks/useAddressOrEnsName\";\nimport breakPoints from \"../../style/breakpoints\";\nimport Icon from \"../Icon/Icon\";\nimport {\n  Container,\n  WalletHeader,\n  Legend,\n  LegendLine,\n  TransactionContainer,\n  TransactionsContainer,\n  BottomButtonContainer,\n  DisconnectButton,\n  NoTransactions,\n  IconContainer,\n  BackButton,\n  NetworkInfoContainer,\n  NetworkName,\n  Balances,\n  LegendContainer,\n  MobileBackButton,\n  DesktopWalletInfoButton,\n  MobileWalletInfoButton,\n  StyledWalletMobileMenu,\n  BackdropFilter,\n} from \"./TransactionsTab.styles\";\nimport AnimatedWalletTransaction from \"./subcomponents/AnimatedWalletTransaction/AnimatedWalletTransaction\";\n\nconst addressMapping: Record<number, string> = {\n  1: \"Mainnet\",\n  4: \"Rinkeby\",\n};\n\ntype TransactionsTabType = {\n  address: string;\n  chainId: number;\n  open: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n  /**\n   * Callback function for when disconnect button is clicked\n   */\n  onDisconnectWalletClicked: () => void;\n  transactions: SubmittedTransaction[];\n  tokens: TokenInfo[];\n  balances: BalancesState;\n  isUnsupportedNetwork?: boolean;\n};\n\nconst TransactionsTab = ({\n  address = \"\",\n  chainId,\n  open,\n  setTransactionsTabOpen,\n  onDisconnectWalletClicked,\n  transactions = [],\n  tokens = [],\n  balances,\n  isUnsupportedNetwork = false,\n}: TransactionsTabType) => {\n  const { width, height } = useWindowSize();\n  const shouldReduceMotion = useReducedMotion();\n  const isMobile = useMediaQuery(breakPoints.phoneOnly);\n  const { t } = useTranslation();\n\n  const [overflow, setOverflow] = useState<boolean>(false);\n  const [showMobileMenu, setShowMobileMenu] = useState<boolean>(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const transactionsScrollRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const addressOrName = useAddressOrEnsName(address);\n  const walletInfoText = useMemo(() => {\n    return isUnsupportedNetwork\n      ? t(\"wallet.unsupported\")\n      : addressOrName\n      ? addressOrName\n      : t(\"wallet.notConnected\");\n  }, [addressOrName, isUnsupportedNetwork, t]);\n  const walletUrl = useMemo(() => getEtherscanWalletURL(chainId, address), [\n    chainId,\n    address,\n  ]);\n  const handleEscKey = useCallback(\n    (e) => {\n      if (e.keyCode === 27) {\n        setTransactionsTabOpen(false);\n      }\n    },\n    [setTransactionsTabOpen]\n  );\n\n  const toggleWalletMobileMenu = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscKey, false);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleEscKey]);\n\n  useEffect(() => {\n    if (!open) {\n      setShowMobileMenu(false);\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (\n      containerRef.current &&\n      transactionsScrollRef.current &&\n      buttonRef.current\n    ) {\n      const { offsetTop, scrollHeight } = transactionsScrollRef.current;\n      const containerHeight = containerRef.current.getBoundingClientRect()\n        .height;\n      const buttonHeight = buttonRef.current.getBoundingClientRect().height;\n      setOverflow(scrollHeight + offsetTop > containerHeight - buttonHeight);\n    }\n  }, [\n    containerRef,\n    transactionsScrollRef,\n    buttonRef,\n    width,\n    height,\n    open,\n    transactions,\n  ]);\n\n  // Every time a new transactions is added, scroll to top.\n  useEffect(() => {\n    if (transactionsScrollRef && transactionsScrollRef.current) {\n      transactionsScrollRef.current.scrollTo({ top: 0 });\n    }\n  }, [transactionsScrollRef, transactions]);\n\n  const pendingTransactions = useMemo(() => {\n    return transactions.filter(\n      (transaction) => transaction.status === \"processing\"\n    );\n  }, [transactions]);\n\n  const completedTransactions = useMemo(() => {\n    return transactions.filter(\n      (transaction) => transaction.status !== \"processing\"\n    );\n  }, [transactions]);\n\n  const balance =\n    balances.values[\"0x0000000000000000000000000000000000000000\"] || \"0\";\n\n  return (\n    <AnimatePresence>\n      {open && (\n        <Container\n          ref={containerRef}\n          animate={{ x: 0 }}\n          transition={{ duration: shouldReduceMotion ? 0 : 0.3 }}\n          initial={{ x: isMobile ? \"100%\" : \"24rem\" }}\n          exit={{ x: isMobile ? \"100%\" : \"24rem\" }}\n        >\n          <BackButton\n            aria-label={t(\"common.back\")}\n            animate={{ y: 0 }}\n            transition={{ duration: shouldReduceMotion ? 0 : 0.5 }}\n            initial={{ y: \"-5rem\" }}\n            exit={{ opacity: 0 }}\n            onClick={() => setTransactionsTabOpen(false)}\n          >\n            <Icon name=\"chevron-right\" iconSize={1.5} />\n          </BackButton>\n          <WalletHeader>\n            <NetworkInfoContainer>\n              <NetworkName>\n                {addressMapping[chainId] || t(\"wallet.unsupported\")}\n              </NetworkName>\n              <Balances>{formatUnits(balance).substring(0, 5)} ETH</Balances>\n            </NetworkInfoContainer>\n            <DesktopWalletInfoButton\n              onClick={setTransactionsTabOpen.bind(null, false)}\n            >\n              {walletInfoText}\n            </DesktopWalletInfoButton>\n            <MobileWalletInfoButton onClick={toggleWalletMobileMenu}>\n              {walletInfoText}\n            </MobileWalletInfoButton>\n            {showMobileMenu && (\n              <StyledWalletMobileMenu\n                walletUrl={walletUrl}\n                address={address}\n                onDisconnectButtonClick={onDisconnectWalletClicked}\n              />\n            )}\n          </WalletHeader>\n\n          <TransactionsContainer\n            ref={transactionsScrollRef}\n            $overflow={overflow}\n          >\n            <LegendContainer $isVisible={!!pendingTransactions.length}>\n              <Legend>\n                <LegendLine>\n                  {t(\"wallet.activeTransactions\").toUpperCase()}\n                </LegendLine>\n              </Legend>\n            </LegendContainer>\n            <TransactionContainer $isEmpty={!pendingTransactions.length}>\n              <AnimatePresence initial={false}>\n                {pendingTransactions.map((transaction) => (\n                  <AnimatedWalletTransaction\n                    key={`${transaction.hash}-${transaction.nonce}-${transaction.expiry}-pending`}\n                    transaction={transaction}\n                    tokens={tokens}\n                    chainId={chainId!}\n                  />\n                ))}\n              </AnimatePresence>\n            </TransactionContainer>\n            <LegendContainer $isVisible>\n              <Legend>\n                <LegendLine>\n                  {t(\"wallet.completedTransactions\").toUpperCase()}\n                </LegendLine>\n              </Legend>\n            </LegendContainer>\n            <TransactionContainer>\n              <AnimatePresence initial={false}>\n                {completedTransactions.slice(0, 10).map((transaction) => (\n                  <AnimatedWalletTransaction\n                    key={`${transaction.hash}-${transaction.nonce}-${transaction.expiry}`}\n                    transaction={transaction}\n                    tokens={tokens}\n                    chainId={chainId!}\n                  />\n                ))}\n              </AnimatePresence>\n              {!completedTransactions.length && (\n                <NoTransactions>\n                  <IconContainer>\n                    <Icon name=\"transaction\" />\n                  </IconContainer>\n                  {t(\"wallet.noCompletedTransactions\")}\n                </NoTransactions>\n              )}\n            </TransactionContainer>\n          </TransactionsContainer>\n          <BottomButtonContainer ref={buttonRef}>\n            <DisconnectButton\n              aria-label={t(\"wallet.disconnectWallet\")}\n              onClick={onDisconnectWalletClicked}\n            >\n              {t(\"wallet.disconnectWallet\")}\n            </DisconnectButton>\n            <MobileBackButton\n              aria-label={t(\"common.back\")}\n              onClick={() => setTransactionsTabOpen(false)}\n            >\n              {t(\"common.back\")}\n            </MobileBackButton>\n          </BottomButtonContainer>\n          {showMobileMenu && (\n            <BackdropFilter onClick={toggleWalletMobileMenu} />\n          )}\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default TransactionsTab;\n"]},"metadata":{},"sourceType":"module"}