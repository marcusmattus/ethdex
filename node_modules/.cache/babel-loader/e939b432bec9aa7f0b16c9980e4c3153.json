{"ast":null,"code":"'use strict'; // From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\n\nconst randomInteger = (minimum, maximum) => Math.floor(Math.random() * (maximum - minimum + 1) + minimum);\n\nconst createAbortError = () => {\n  const error = new Error('Delay aborted');\n  error.name = 'AbortError';\n  return error;\n};\n\nconst createDelay = ({\n  clearTimeout: defaultClear,\n  setTimeout: set,\n  willResolve\n}) => (ms, {\n  value,\n  signal\n} = {}) => {\n  if (signal && signal.aborted) {\n    return Promise.reject(createAbortError());\n  }\n\n  let timeoutId;\n  let settle;\n  let rejectFn;\n  const clear = defaultClear || clearTimeout;\n\n  const signalListener = () => {\n    clear(timeoutId);\n    rejectFn(createAbortError());\n  };\n\n  const cleanup = () => {\n    if (signal) {\n      signal.removeEventListener('abort', signalListener);\n    }\n  };\n\n  const delayPromise = new Promise((resolve, reject) => {\n    settle = () => {\n      cleanup();\n\n      if (willResolve) {\n        resolve(value);\n      } else {\n        reject(value);\n      }\n    };\n\n    rejectFn = reject;\n    timeoutId = (set || setTimeout)(settle, ms);\n  });\n\n  if (signal) {\n    signal.addEventListener('abort', signalListener, {\n      once: true\n    });\n  }\n\n  delayPromise.clear = () => {\n    clear(timeoutId);\n    timeoutId = null;\n    settle();\n  };\n\n  return delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n  const delay = createDelay({ ...clearAndSet,\n    willResolve: true\n  });\n  delay.reject = createDelay({ ...clearAndSet,\n    willResolve: false\n  });\n\n  delay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\n  return delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\nmodule.exports = delay; // TODO: Remove this for the next major release\n\nmodule.exports.default = delay;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/node_modules/delay/index.js"],"names":["randomInteger","minimum","maximum","Math","floor","random","createAbortError","error","Error","name","createDelay","clearTimeout","defaultClear","setTimeout","set","willResolve","ms","value","signal","aborted","Promise","reject","timeoutId","settle","rejectFn","clear","signalListener","cleanup","removeEventListener","delayPromise","resolve","addEventListener","once","createWithTimers","clearAndSet","delay","range","options","module","exports","default"],"mappings":"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","sourcesContent":["'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n"]},"metadata":{},"sourceType":"script"}