{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/TokenList/subcomponents/TokenImportButton/TokenImportButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport TokenLogo from \"../../../TokenLogo/TokenLogo\";\nimport { Container, TextContainer, Symbol, TokenName, ImportButton, UnsupportedTokenText } from \"./TokenImportButton.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenImportButton = ({\n  token,\n  onClick,\n  isUnsupported\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TokenLogo, {\n      tokenInfo: token,\n      size: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Symbol, {\n        children: token.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenName, {\n        children: token.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isUnsupported ? /*#__PURE__*/_jsxDEV(UnsupportedTokenText, {\n      children: t(\"balances.unsupportedToken\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ImportButton, {\n      onClick: () => onClick(token.address),\n      children: t(\"balances.addToTokenSet\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenImportButton, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TokenImportButton;\nexport default TokenImportButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenImportButton\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/TokenList/subcomponents/TokenImportButton/TokenImportButton.tsx"],"names":["useTranslation","TokenLogo","Container","TextContainer","Symbol","TokenName","ImportButton","UnsupportedTokenText","TokenImportButton","token","onClick","isUnsupported","t","symbol","name","address"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AAIA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,YALF,EAMEC,oBANF,QAOO,4BAPP;;;AAwBA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA,OAFyB;AAGzBC,EAAAA;AAHyB,CAAD,KAIC;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAES,KAAtB;AAA6B,MAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAA,kBAASA,KAAK,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBAAYJ,KAAK,CAACK;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAOGH,aAAa,gBACZ,QAAC,oBAAD;AAAA,gBACGC,CAAC,CAAC,2BAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAMF,OAAO,CAACD,KAAK,CAACM,OAAP,CAApC;AAAA,gBACGH,CAAC,CAAC,wBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1BD;;GAAMJ,iB;UAKUR,c;;;KALVQ,iB;AA4BN,eAAeA,iBAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport TokenLogo from \"../../../TokenLogo/TokenLogo\";\nimport {\n  Container,\n  TextContainer,\n  Symbol,\n  TokenName,\n  ImportButton,\n  UnsupportedTokenText,\n} from \"./TokenImportButton.styles\";\n\nexport type TokenImportRowProps = {\n  /**\n   * TokenInfo object\n   */\n  token: TokenInfo;\n  /**\n   * True if the token isn't currently supported by makers.\n   */\n  isUnsupported: boolean;\n  /**\n   * onClick event, either setSignerToken or setSenderToken\n   */\n  onClick: (val: string) => void;\n};\n\nconst TokenImportButton = ({\n  token,\n  onClick,\n  isUnsupported,\n}: TokenImportRowProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <TokenLogo tokenInfo={token} size=\"medium\" />\n\n      <TextContainer>\n        <Symbol>{token.symbol}</Symbol>\n        <TokenName>{token.name}</TokenName>\n      </TextContainer>\n      {isUnsupported ? (\n        <UnsupportedTokenText>\n          {t(\"balances.unsupportedToken\")}\n        </UnsupportedTokenText>\n      ) : (\n        <ImportButton onClick={() => onClick(token.address)}>\n          {t(\"balances.addToTokenSet\")}\n        </ImportButton>\n      )}\n    </Container>\n  );\n};\n\nexport default TokenImportButton;\n"]},"metadata":{},"sourceType":"module"}