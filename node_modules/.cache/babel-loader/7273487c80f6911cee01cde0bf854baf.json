{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/SwapWidget/subcomponents/SwapWidgetHeader/SwapWidgetHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { RFQ_EXPIRY_BUFFER_MS } from \"../../../../constants/configParams\";\nimport Timer from \"../../../Timer/Timer\";\nimport { Title } from \"../../../Typography/Typography\";\nimport { Button, Container, NewQuoteText, Quote, StyledIcon } from \"./SwapWidgetHeader.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwapWidgetHeader = ({\n  title,\n  isQuote,\n  onGasFreeTradeButtonClick,\n  protocol,\n  expiry\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const expiryTime = useMemo(() => {\n    return expiry ? parseInt(expiry) - RFQ_EXPIRY_BUFFER_MS / 1000 : undefined;\n  }, [expiry]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      type: \"h2\",\n      as: \"h1\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), protocol === \"last-look\" && isQuote && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onGasFreeTradeButtonClick,\n      children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n        name: \"star\",\n        iconSize: 0.875\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), t(\"orders.gasFreeTrade\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), protocol === \"request-for-quote\" && isQuote && /*#__PURE__*/_jsxDEV(Quote, {\n      children: [/*#__PURE__*/_jsxDEV(NewQuoteText, {\n        children: t(\"orders.newQuoteIn\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), expiryTime && /*#__PURE__*/_jsxDEV(Timer, {\n        expiryTime: expiryTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwapWidgetHeader, \"b7cst8/Zp8zffkvQY2kyqKcvqNo=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SwapWidgetHeader;\nexport default SwapWidgetHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapWidgetHeader\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/SwapWidget/subcomponents/SwapWidgetHeader/SwapWidgetHeader.tsx"],"names":["useMemo","useTranslation","RFQ_EXPIRY_BUFFER_MS","Timer","Title","Button","Container","NewQuoteText","Quote","StyledIcon","SwapWidgetHeader","title","isQuote","onGasFreeTradeButtonClick","protocol","expiry","t","expiryTime","parseInt","undefined"],"mappings":";;;AAAA,SAAaA,OAAb,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,oBAAT,QAAqC,oCAArC;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,KAAT,QAAsB,gCAAtB;AACA,SACEC,MADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,KAJF,EAKEC,UALF,QAMO,2BANP;;;AAgBA,MAAMC,gBAA2C,GAAG,CAAC;AACnDC,EAAAA,KADmD;AAEnDC,EAAAA,OAFmD;AAGnDC,EAAAA,yBAHmD;AAInDC,EAAAA,QAJmD;AAKnDC,EAAAA;AALmD,CAAD,KAM9C;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AAEA,QAAMgB,UAAU,GAAGjB,OAAO,CAAC,MAAM;AAC/B,WAAOe,MAAM,GAAGG,QAAQ,CAACH,MAAD,CAAR,GAAmBb,oBAAoB,GAAG,IAA7C,GAAoDiB,SAAjE;AACD,GAFyB,EAEvB,CAACJ,MAAD,CAFuB,CAA1B;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAKGG,QAAQ,KAAK,WAAb,IAA4BF,OAA5B,iBACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,yBAAjB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,QAAQ,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGG,CAAC,CAAC,qBAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAYGF,QAAQ,KAAK,mBAAb,IAAoCF,OAApC,iBACC,QAAC,KAAD;AAAA,8BACE,QAAC,YAAD;AAAA,kBAAeI,CAAC,CAAC,mBAAD;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,UAAU,iBAAI,QAAC,KAAD;AAAO,QAAA,UAAU,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlCD;;GAAMP,gB;UAOUT,c;;;KAPVS,gB;AAoCN,eAAeA,gBAAf","sourcesContent":["import { FC, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { RFQ_EXPIRY_BUFFER_MS } from \"../../../../constants/configParams\";\nimport { ProtocolType } from \"../../../../features/transactions/transactionsSlice\";\nimport Timer from \"../../../Timer/Timer\";\nimport { Title } from \"../../../Typography/Typography\";\nimport {\n  Button,\n  Container,\n  NewQuoteText,\n  Quote,\n  StyledIcon,\n} from \"./SwapWidgetHeader.styles\";\n\ninterface SwapWidgetHeaderProps {\n  title: string;\n  isQuote: boolean;\n  onGasFreeTradeButtonClick: () => void;\n  protocol?: ProtocolType;\n  expiry?: string;\n}\n\nconst SwapWidgetHeader: FC<SwapWidgetHeaderProps> = ({\n  title,\n  isQuote,\n  onGasFreeTradeButtonClick,\n  protocol,\n  expiry,\n}) => {\n  const { t } = useTranslation();\n\n  const expiryTime = useMemo(() => {\n    return expiry ? parseInt(expiry) - RFQ_EXPIRY_BUFFER_MS / 1000 : undefined;\n  }, [expiry]);\n\n  return (\n    <Container>\n      <Title type=\"h2\" as=\"h1\">\n        {title}\n      </Title>\n\n      {protocol === \"last-look\" && isQuote && (\n        <Button onClick={onGasFreeTradeButtonClick}>\n          <StyledIcon name=\"star\" iconSize={0.875} />\n          {t(\"orders.gasFreeTrade\")}\n        </Button>\n      )}\n\n      {protocol === \"request-for-quote\" && isQuote && (\n        <Quote>\n          <NewQuoteText>{t(\"orders.newQuoteIn\")}</NewQuoteText>\n          {expiryTime && <Timer expiryTime={expiryTime} />}\n        </Quote>\n      )}\n    </Container>\n  );\n};\n\nexport default SwapWidgetHeader;\n"]},"metadata":{},"sourceType":"module"}