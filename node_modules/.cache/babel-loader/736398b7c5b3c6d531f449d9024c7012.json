{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  baseToken: {\n    address: \"\",\n    decimals: 18\n  },\n  quoteToken: {\n    address: \"\",\n    decimals: 18\n  },\n  baseAmount: \"\",\n  quoteAmount: null,\n  side: \"sell\"\n};\nconst tradeTermsSlice = createSlice({\n  name: \"tradeTerms\",\n  initialState,\n  reducers: {\n    clear: () => initialState,\n    set: (_, action) => action.payload,\n    setQuoteAmount: (state, action) => {\n      state.quoteAmount = action.payload;\n    },\n    clearQuoteAmount: state => {\n      state.quoteAmount = null;\n    }\n  }\n});\nexport const selectTradeTerms = state => state.tradeTerms;\nexport const selectQuoteTokenAddress = state => state.tradeTerms.quoteToken.address;\nexport const {\n  set: setTradeTerms,\n  clear: clearTradeTerms,\n  setQuoteAmount: setTradeTermsQuoteAmount,\n  clearQuoteAmount: clearTradeTermsQuoteAmount\n} = tradeTermsSlice.actions;\nexport default tradeTermsSlice.reducer;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/features/tradeTerms/tradeTermsSlice.ts"],"names":["createSlice","initialState","baseToken","address","decimals","quoteToken","baseAmount","quoteAmount","side","tradeTermsSlice","name","reducers","clear","set","_","action","payload","setQuoteAmount","state","clearQuoteAmount","selectTradeTerms","tradeTerms","selectQuoteTokenAddress","setTradeTerms","clearTradeTerms","setTradeTermsQuoteAmount","clearTradeTermsQuoteAmount","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AA0BA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GADoB;AAE/BC,EAAAA,UAAU,EAAE;AAAEF,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAFmB;AAG/BE,EAAAA,UAAU,EAAE,EAHmB;AAI/BC,EAAAA,WAAW,EAAE,IAJkB;AAK/BC,EAAAA,IAAI,EAAE;AALyB,CAAjC;AAQA,MAAMC,eAAe,GAAGT,WAAW,CAAC;AAClCU,EAAAA,IAAI,EAAE,YAD4B;AAElCT,EAAAA,YAFkC;AAGlCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,MAAMX,YADL;AAERY,IAAAA,GAAG,EAAE,CAACC,CAAD,EAAIC,MAAJ,KAA0CA,MAAM,CAACC,OAF9C;AAGRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQH,MAAR,KAA0C;AACxDG,MAAAA,KAAK,CAACX,WAAN,GAAoBQ,MAAM,CAACC,OAA3B;AACD,KALO;AAMRG,IAAAA,gBAAgB,EAAGD,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACX,WAAN,GAAoB,IAApB;AACD;AARO;AAHwB,CAAD,CAAnC;AAeA,OAAO,MAAMa,gBAAgB,GAAIF,KAAD,IAAsBA,KAAK,CAACG,UAArD;AACP,OAAO,MAAMC,uBAAuB,GAAIJ,KAAD,IACrCA,KAAK,CAACG,UAAN,CAAiBhB,UAAjB,CAA4BF,OADvB;AAGP,OAAO,MAAM;AACXU,EAAAA,GAAG,EAAEU,aADM;AAEXX,EAAAA,KAAK,EAAEY,eAFI;AAGXP,EAAAA,cAAc,EAAEQ,wBAHL;AAIXN,EAAAA,gBAAgB,EAAEO;AAJP,IAKTjB,eAAe,CAACkB,OALb;AAOP,eAAelB,eAAe,CAACmB,OAA/B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\n\nexport type TradeTerms = {\n  /**\n   * The token whose quantity is known\n   */\n  baseToken: { address: string; decimals: number };\n  baseAmount: string;\n  /**\n   * The token whose quantity is unknown\n   */\n  quoteToken: { address: string; decimals: number };\n  /**\n   * The amount of quote token (once known).\n   */\n  quoteAmount: string | null;\n  /**\n   * Sell means sending a known amount of baseToken to receive an as yet unknown\n   * amount of quoteToken. Buy means sending an as yet unknown amount of\n   * quoteToken to receive a known amount of baseToken.\n   */\n  side: \"sell\" | \"buy\";\n};\n\nconst initialState: TradeTerms = {\n  baseToken: { address: \"\", decimals: 18 },\n  quoteToken: { address: \"\", decimals: 18 },\n  baseAmount: \"\",\n  quoteAmount: null,\n  side: \"sell\",\n};\n\nconst tradeTermsSlice = createSlice({\n  name: \"tradeTerms\",\n  initialState,\n  reducers: {\n    clear: () => initialState,\n    set: (_, action: PayloadAction<TradeTerms>) => action.payload,\n    setQuoteAmount: (state, action: PayloadAction<string>) => {\n      state.quoteAmount = action.payload;\n    },\n    clearQuoteAmount: (state) => {\n      state.quoteAmount = null;\n    },\n  },\n});\n\nexport const selectTradeTerms = (state: RootState) => state.tradeTerms;\nexport const selectQuoteTokenAddress = (state: RootState) =>\n  state.tradeTerms.quoteToken.address;\n\nexport const {\n  set: setTradeTerms,\n  clear: clearTradeTerms,\n  setQuoteAmount: setTradeTermsQuoteAmount,\n  clearQuoteAmount: clearTradeTermsQuoteAmount,\n} = tradeTermsSlice.actions;\n\nexport default tradeTermsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}