{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/TokenSelect/TokenSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { AmountInput, AmountAndDetailsContainer, ContainingButton, TokenSelectContainer, StyledSelectItem, StyledSelector, PlaceHolderBar, PlaceholderContainer, StyledLabel, StyledDownArrow, StyledSelectButtonContent, TokenLogoLeft, TokenLogoRight, MaxButton, InputAndMaxButtonWrapper } from \"./TokenSelect.styles\";\nimport TokenSelectFocusBorder from \"./subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenSelect = ({\n  readOnly,\n  includeAmountInput,\n  label,\n  selectedToken,\n  onChangeTokenClicked,\n  onMaxClicked,\n  amount,\n  onAmountChange,\n  isLoading = false,\n  isQuote = false,\n  showMaxButton = false\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(TokenSelectContainer, {\n    $isQuote: isQuote,\n    $isLoading: isLoading,\n    children: [/*#__PURE__*/_jsxDEV(ContainingButton, {\n      onClick: onChangeTokenClicked,\n      disabled: readOnly,\n      children: [/*#__PURE__*/_jsxDEV(TokenLogoLeft, {\n        size: \"large\",\n        tokenInfo: selectedToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSelector, {\n        children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledSelectItem, {\n          children: [/*#__PURE__*/_jsxDEV(StyledSelectButtonContent, {\n            children: selectedToken ? selectedToken.symbol : t(\"common.select\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledDownArrow, {\n            $invisible: readOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenSelectFocusBorder, {\n      position: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), includeAmountInput ? /*#__PURE__*/_jsxDEV(InputAndMaxButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(AmountAndDetailsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(AmountInput // @ts-ignore\n        , {\n          inputMode: \"decimal\",\n          tabIndex: readOnly ? -1 : 0,\n          autoComplete: \"off\",\n          pattern: \"^[0-9]*[.,]?[0-9]*$\",\n          minLength: 1,\n          maxLength: 79,\n          spellCheck: false,\n          value: amount,\n          disabled: readOnly,\n          onChange: onAmountChange,\n          placeholder: \"0.00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TokenSelectFocusBorder, {\n          position: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), onMaxClicked && showMaxButton && !readOnly && /*#__PURE__*/_jsxDEV(MaxButton, {\n        onClick: onMaxClicked,\n        children: t(\"common.max\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TokenLogoRight, {\n        size: \"medium\",\n        tokenInfo: selectedToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PlaceholderContainer, {\n      children: /*#__PURE__*/_jsxDEV(PlaceHolderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenSelect, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TokenSelect;\nexport default TokenSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenSelect\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/TokenSelect/TokenSelect.tsx"],"names":["useTranslation","AmountInput","AmountAndDetailsContainer","ContainingButton","TokenSelectContainer","StyledSelectItem","StyledSelector","PlaceHolderBar","PlaceholderContainer","StyledLabel","StyledDownArrow","StyledSelectButtonContent","TokenLogoLeft","TokenLogoRight","MaxButton","InputAndMaxButtonWrapper","TokenSelectFocusBorder","TokenSelect","readOnly","includeAmountInput","label","selectedToken","onChangeTokenClicked","onMaxClicked","amount","onAmountChange","isLoading","isQuote","showMaxButton","t","symbol"],"mappings":"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","sourcesContent":["import { FC, MouseEventHandler, FormEventHandler } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport {\n  AmountInput,\n  AmountAndDetailsContainer,\n  ContainingButton,\n  TokenSelectContainer,\n  StyledSelectItem,\n  StyledSelector,\n  PlaceHolderBar,\n  PlaceholderContainer,\n  StyledLabel,\n  StyledDownArrow,\n  StyledSelectButtonContent,\n  TokenLogoLeft,\n  TokenLogoRight,\n  MaxButton,\n  InputAndMaxButtonWrapper,\n} from \"./TokenSelect.styles\";\nimport TokenSelectFocusBorder from \"./subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder\";\n\nexport type TokenSelectProps = {\n  /**\n   * Whether or not the token selector is read only, e.g. when used to display\n   * a quote.\n   */\n  readOnly: boolean;\n  /**\n   * Whether or not to display an amount input with the token select, or to\n   * display a placeholder, e.g. when used to select received token where amount\n   * isn't known yet.\n   */\n  includeAmountInput: boolean;\n  /**\n   * Label - note that this is not shown if the field is readOnly.\n   */\n  label: string;\n  /**\n   * Metadata for currently selected token\n   */\n  selectedToken: TokenInfo | null;\n  /**\n   * Called when the user has clicked on the token dropdown to change token\n   */\n  onChangeTokenClicked: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Called when user clicks the 'use max' button. Presence of this prop is used\n   * to imply presence of use max button in DOM.\n   */\n  onMaxClicked?: MouseEventHandler<HTMLButtonElement>;\n  /**\n   * Currently selected amount. Not used if `includeAmountInput` is false.\n   */\n  amount?: string | null;\n  /**\n   * Called when the amount is changed. Input change event is passed.\n   */\n  onAmountChange?: FormEventHandler<HTMLInputElement>;\n  /**\n   * Used for showing loading state\n   */\n  isLoading?: boolean;\n  /**\n   * Show max button\n   */\n  showMaxButton?: boolean;\n  /**\n   * Used for showing quote style\n   */\n  isQuote?: boolean;\n};\n\nconst TokenSelect: FC<TokenSelectProps> = ({\n  readOnly,\n  includeAmountInput,\n  label,\n  selectedToken,\n  onChangeTokenClicked,\n  onMaxClicked,\n  amount,\n  onAmountChange,\n  isLoading = false,\n  isQuote = false,\n  showMaxButton = false,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <TokenSelectContainer $isQuote={isQuote} $isLoading={isLoading}>\n      <ContainingButton onClick={onChangeTokenClicked} disabled={readOnly}>\n        <TokenLogoLeft size=\"large\" tokenInfo={selectedToken} />\n        <StyledSelector>\n          <StyledLabel>{label}</StyledLabel>\n          <StyledSelectItem>\n            <StyledSelectButtonContent>\n              {selectedToken ? selectedToken.symbol : t(\"common.select\")}\n            </StyledSelectButtonContent>\n            <StyledDownArrow $invisible={readOnly} />\n          </StyledSelectItem>\n        </StyledSelector>\n      </ContainingButton>\n      <TokenSelectFocusBorder position=\"left\" />\n      {includeAmountInput ? (\n        <InputAndMaxButtonWrapper>\n          <AmountAndDetailsContainer>\n            <AmountInput\n              // @ts-ignore\n              inputMode=\"decimal\"\n              tabIndex={readOnly ? -1 : 0}\n              autoComplete=\"off\"\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              minLength={1}\n              maxLength={79}\n              spellCheck={false}\n              value={amount}\n              disabled={readOnly}\n              onChange={onAmountChange}\n              placeholder=\"0.00\"\n            />\n            <TokenSelectFocusBorder position=\"right\" />\n          </AmountAndDetailsContainer>\n          {onMaxClicked && showMaxButton && !readOnly && (\n            <MaxButton onClick={onMaxClicked}>{t(\"common.max\")}</MaxButton>\n          )}\n          <TokenLogoRight size=\"medium\" tokenInfo={selectedToken} />\n        </InputAndMaxButtonWrapper>\n      ) : (\n        <PlaceholderContainer>\n          <PlaceHolderBar />\n        </PlaceholderContainer>\n      )}\n    </TokenSelectContainer>\n  );\n};\n\nexport default TokenSelect;\n"]},"metadata":{},"sourceType":"module"}