{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/SwapWidget/subcomponents/SwapInputs/SwapInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport stringToSignificantDecimals from \"../../../../helpers/stringToSignificantDecimals\";\nimport TokenSelect from \"../../../TokenSelect/TokenSelect\";\nimport getSwapInputIcon from \"../../helpers/getSwapInputIcon\";\nimport { Container, SwapIconContainer } from \"./SwapInputs.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst floatRegExp = new RegExp(\"^([0-9])*[.,]?([0-9])*$\");\n\nconst SwapInputs = ({\n  tradeNotAllowed,\n  baseAmount,\n  quoteAmount,\n  side,\n  disabled,\n  readOnly,\n  onMaxButtonClick,\n  onChangeTokenClick,\n  isRequesting,\n  baseTokenInfo,\n  quoteTokenInfo,\n  onBaseAmountChange,\n  showMaxButton = false\n}) => {\n  _s();\n\n  let fromAmount, toAmount;\n  const isSell = side === \"sell\";\n\n  if (isSell) {\n    fromAmount = baseAmount;\n    toAmount = stringToSignificantDecimals(quoteAmount);\n  } else {\n    fromAmount = stringToSignificantDecimals(quoteAmount);\n    toAmount = baseAmount;\n  }\n\n  const isQuote = !!fromAmount && !!toAmount && readOnly;\n  const {\n    t\n  } = useTranslation(); // Note: it will only be possible for the user to change the base amount.\n\n  const handleTokenAmountChange = e => {\n    let value = e.currentTarget.value;\n\n    if (value === \"\" || floatRegExp.test(value)) {\n      if (value[value.length - 1] === \",\") value = value.slice(0, value.length - 1) + \".\";\n      value = value.replace(/^0+/, \"0\");\n      onBaseAmountChange(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    $disabled: disabled,\n    children: [/*#__PURE__*/_jsxDEV(TokenSelect, {\n      label: t(\"orders.from\"),\n      amount: fromAmount,\n      onAmountChange: e => handleTokenAmountChange(e),\n      onChangeTokenClicked: () => {\n        onChangeTokenClick(isSell ? \"base\" : \"quote\");\n      },\n      onMaxClicked: onMaxButtonClick,\n      readOnly: readOnly,\n      includeAmountInput: isSell || !!quoteAmount && !isRequesting,\n      selectedToken: isSell ? baseTokenInfo : quoteTokenInfo,\n      isLoading: !isSell && isRequesting,\n      isQuote: isQuote,\n      showMaxButton: showMaxButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwapIconContainer, {\n      children: getSwapInputIcon(tradeNotAllowed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenSelect, {\n      label: t(\"orders.to\"),\n      amount: toAmount,\n      onAmountChange: e => handleTokenAmountChange(e),\n      onChangeTokenClicked: () => {\n        onChangeTokenClick(!isSell ? \"base\" : \"quote\");\n      },\n      readOnly: readOnly,\n      includeAmountInput: !isSell || !!quoteAmount && !isRequesting,\n      selectedToken: !isSell ? baseTokenInfo : quoteTokenInfo,\n      isLoading: isSell && isRequesting,\n      isQuote: isQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwapInputs, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SwapInputs;\nexport default SwapInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapInputs\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/SwapWidget/subcomponents/SwapInputs/SwapInputs.tsx"],"names":["useTranslation","stringToSignificantDecimals","TokenSelect","getSwapInputIcon","Container","SwapIconContainer","floatRegExp","RegExp","SwapInputs","tradeNotAllowed","baseAmount","quoteAmount","side","disabled","readOnly","onMaxButtonClick","onChangeTokenClick","isRequesting","baseTokenInfo","quoteTokenInfo","onBaseAmountChange","showMaxButton","fromAmount","toAmount","isSell","isQuote","t","handleTokenAmountChange","e","value","currentTarget","test","length","slice","replace"],"mappings":"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","sourcesContent":["import { FC, MouseEvent, FormEvent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport stringToSignificantDecimals from \"../../../../helpers/stringToSignificantDecimals\";\nimport TokenSelect from \"../../../TokenSelect/TokenSelect\";\nimport getSwapInputIcon from \"../../helpers/getSwapInputIcon\";\nimport { Container, SwapIconContainer } from \"./SwapInputs.styles\";\n\nconst floatRegExp = new RegExp(\"^([0-9])*[.,]?([0-9])*$\");\n\nconst SwapInputs: FC<{\n  tradeNotAllowed: boolean;\n  baseAmount: string;\n  baseTokenInfo: TokenInfo | null;\n  quoteTokenInfo: TokenInfo | null;\n  quoteAmount: string;\n  side: \"buy\" | \"sell\";\n  disabled: boolean;\n  readOnly: boolean;\n  isRequesting: boolean;\n  onMaxButtonClick: (event: MouseEvent<HTMLButtonElement>) => void;\n  onChangeTokenClick: (baseOrQuote: \"base\" | \"quote\") => void;\n  onBaseAmountChange: (newValue: string) => void;\n  showMaxButton: boolean;\n}> = ({\n  tradeNotAllowed,\n  baseAmount,\n  quoteAmount,\n  side,\n  disabled,\n  readOnly,\n  onMaxButtonClick,\n  onChangeTokenClick,\n  isRequesting,\n  baseTokenInfo,\n  quoteTokenInfo,\n  onBaseAmountChange,\n  showMaxButton = false,\n}) => {\n  let fromAmount: string, toAmount: string;\n  const isSell = side === \"sell\";\n  if (isSell) {\n    fromAmount = baseAmount;\n    toAmount = stringToSignificantDecimals(quoteAmount);\n  } else {\n    fromAmount = stringToSignificantDecimals(quoteAmount);\n    toAmount = baseAmount;\n  }\n\n  const isQuote = !!fromAmount && !!toAmount && readOnly;\n  const { t } = useTranslation();\n\n  // Note: it will only be possible for the user to change the base amount.\n  const handleTokenAmountChange = (e: FormEvent<HTMLInputElement>) => {\n    let value = e.currentTarget.value;\n    if (value === \"\" || floatRegExp.test(value)) {\n      if (value[value.length - 1] === \",\")\n        value = value.slice(0, value.length - 1) + \".\";\n      value = value.replace(/^0+/, \"0\");\n      onBaseAmountChange(value);\n    }\n  };\n\n  return (\n    <Container $disabled={disabled}>\n      <TokenSelect\n        label={t(\"orders.from\")}\n        amount={fromAmount}\n        onAmountChange={(e) => handleTokenAmountChange(e)}\n        onChangeTokenClicked={() => {\n          onChangeTokenClick(isSell ? \"base\" : \"quote\");\n        }}\n        onMaxClicked={onMaxButtonClick}\n        readOnly={readOnly}\n        includeAmountInput={isSell || (!!quoteAmount && !isRequesting)}\n        selectedToken={isSell ? baseTokenInfo : quoteTokenInfo}\n        isLoading={!isSell && isRequesting}\n        isQuote={isQuote}\n        showMaxButton={showMaxButton}\n      />\n      <SwapIconContainer>{getSwapInputIcon(tradeNotAllowed)}</SwapIconContainer>\n      <TokenSelect\n        label={t(\"orders.to\")}\n        amount={toAmount}\n        onAmountChange={(e) => handleTokenAmountChange(e)}\n        onChangeTokenClicked={() => {\n          onChangeTokenClick(!isSell ? \"base\" : \"quote\");\n        }}\n        readOnly={readOnly}\n        includeAmountInput={!isSell || (!!quoteAmount && !isRequesting)}\n        selectedToken={!isSell ? baseTokenInfo : quoteTokenInfo}\n        isLoading={isSell && isRequesting}\n        isQuote={isQuote}\n      />\n    </Container>\n  );\n};\n\nexport default SwapInputs;\n"]},"metadata":{},"sourceType":"module"}