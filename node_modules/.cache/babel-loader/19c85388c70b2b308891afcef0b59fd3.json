{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/airswap-web/src/components/TokenList/subcomponents/InactiveTokensList/InactiveTokensList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { InactiveTitle, InactiveTitleContainer, InformationIcon, TokenContainer } from \"../../TokenList.styles\";\nimport TokenImportButton from \"../TokenImportButton/TokenImportButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InactiveTokensList = ({\n  supportedTokenAddresses,\n  inactiveTokens,\n  onTokenClick\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InactiveTitleContainer, {\n      children: /*#__PURE__*/_jsxDEV(InactiveTitle, {\n        children: [t(\"orders.expandedResults\"), /*#__PURE__*/_jsxDEV(InformationIcon, {\n          name: \"information-circle-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenContainer, {\n      children: inactiveTokens.map(token => /*#__PURE__*/_jsxDEV(TokenImportButton, {\n        token: token,\n        isUnsupported: supportedTokenAddresses.length !== 0 && !supportedTokenAddresses.includes(token.address),\n        onClick: () => onTokenClick(token.address)\n      }, `${token.address}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InactiveTokensList, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = InactiveTokensList;\nexport default InactiveTokensList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InactiveTokensList\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/components/TokenList/subcomponents/InactiveTokensList/InactiveTokensList.tsx"],"names":["useTranslation","InactiveTitle","InactiveTitleContainer","InformationIcon","TokenContainer","TokenImportButton","InactiveTokensList","supportedTokenAddresses","inactiveTokens","onTokenClick","t","map","token","length","includes","address"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AAIA,SACEC,aADF,EAEEC,sBAFF,EAGEC,eAHF,EAIEC,cAJF,QAKO,wBALP;AAMA,OAAOC,iBAAP,MAA8B,wCAA9B;;;;AAQA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,uBAD0B;AAE1BC,EAAAA,cAF0B;AAG1BC,EAAAA;AAH0B,CAAD,KAII;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AAEA,sBACE;AAAA,4BACE,QAAC,sBAAD;AAAA,6BACE,QAAC,aAAD;AAAA,mBACGU,CAAC,CAAC,wBAAD,CADJ,eAEE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,cAAD;AAAA,gBACGF,cAAc,CAACG,GAAf,CAAoBC,KAAD,iBAClB,QAAC,iBAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,aAAa,EACXL,uBAAuB,CAACM,MAAxB,KAAmC,CAAnC,IACA,CAACN,uBAAuB,CAACO,QAAxB,CAAiCF,KAAK,CAACG,OAAvC,CAJL;AAME,QAAA,OAAO,EAAE,MAAMN,YAAY,CAACG,KAAK,CAACG,OAAP;AAN7B,SAOQ,GAAEH,KAAK,CAACG,OAAQ,EAPxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAuBD,CA9BD;;GAAMT,kB;UAKUN,c;;;KALVM,kB;AAgCN,eAAeA,kBAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport {\n  InactiveTitle,\n  InactiveTitleContainer,\n  InformationIcon,\n  TokenContainer,\n} from \"../../TokenList.styles\";\nimport TokenImportButton from \"../TokenImportButton/TokenImportButton\";\n\ntype InactiveTokensListProps = {\n  inactiveTokens: TokenInfo[];\n  supportedTokenAddresses: string[];\n  onTokenClick: (tokenAddress: string) => void;\n};\n\nconst InactiveTokensList = ({\n  supportedTokenAddresses,\n  inactiveTokens,\n  onTokenClick,\n}: InactiveTokensListProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <InactiveTitleContainer>\n        <InactiveTitle>\n          {t(\"orders.expandedResults\")}\n          <InformationIcon name=\"information-circle-outline\" />\n        </InactiveTitle>\n      </InactiveTitleContainer>\n      <TokenContainer>\n        {inactiveTokens.map((token) => (\n          <TokenImportButton\n            token={token}\n            isUnsupported={\n              supportedTokenAddresses.length !== 0 &&\n              !supportedTokenAddresses.includes(token.address)\n            }\n            onClick={() => onTokenClick(token.address)}\n            key={`${token.address}`}\n          />\n        ))}\n      </TokenContainer>\n    </>\n  );\n};\n\nexport default InactiveTokensList;\n"]},"metadata":{},"sourceType":"module"}