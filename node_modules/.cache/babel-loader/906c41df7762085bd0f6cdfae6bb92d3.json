{"ast":null,"code":"import { StyledComponent as _StyledComponent } from \"styled-components\";\nimport { css as _css } from \"styled-components\";\nimport { ThemedStyledFunction as _ThemedStyledFunction } from \"styled-components\";\nimport { DefaultTheme as _DefaultTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nimport breakPoints from \"../../style/breakpoints\";\nconst elementMap = {\n  title1: \"h1\",\n  title2: \"h2\",\n  title3: \"h3\",\n  title4: \"h4\",\n  subtitle: \"h5\",\n  paragraph: \"p\",\n  infoHeading: \"h4\",\n  infoSubHeading: \"h4\",\n  formLabel: \"label\",\n  formInput: \"input\",\n  selectItem: \"div\",\n  link: \"a\",\n  nav: \"div\",\n  small: \"aside\",\n  subText: \"h5\"\n};\n/**\n * Creates a styled typography component for the key in `theme.typography`.\n * Element tag is defined above, and additional CSS can be added for properties\n * that are not common to all typography components.\n * @param key The key from `theme.typography` for typography params\n * @param additionalCSS Any additional CSS not included in `theme.typography.key`\n *                      to add, e.g. text-transform. Use `css` utility from\n *                      styled components to add it.\n * @returns A styled component with the correct typography styles appleid.\n */\n\nconst makeTypographyComponent = (key, additionalCSS) => {\n  const tag = elementMap[key];\n  const Component = _styled[tag]`\n    font-size: ${props => props.theme.typography[key].desktop.fontSize};\n    font-weight: ${props => props.theme.typography[key].desktop.fontWeight};\n    line-height: ${props => props.theme.typography[key].desktop.lineHeight};\n    ${additionalCSS ? additionalCSS : \"\"}\n    \n    ${props => {\n    var _props$theme$typograp, _props$theme$typograp2, _props$theme$typograp3;\n\n    return props.theme.typography[key].mobile ? `\n      @media ${breakPoints.phoneOnly} {\n        font-size: ${(_props$theme$typograp = props.theme.typography[key].mobile) === null || _props$theme$typograp === void 0 ? void 0 : _props$theme$typograp.fontSize};\n        font-weight: ${(_props$theme$typograp2 = props.theme.typography[key].mobile) === null || _props$theme$typograp2 === void 0 ? void 0 : _props$theme$typograp2.fontWeight};\n        line-height: ${(_props$theme$typograp3 = props.theme.typography[key].mobile) === null || _props$theme$typograp3 === void 0 ? void 0 : _props$theme$typograp3.lineHeight};\n      }` : \"\";\n  }}\n  `;\n  return Component;\n};\n\nexport const StyledH1 = makeTypographyComponent(\"title1\", _css`\n    color: ${props => props.theme.name === \"dark\" ? props.theme.colors.white : props.theme.colors.alwaysBlack};\n  `);\nexport const StyledH2 = makeTypographyComponent(\"title2\", _css`\n    color: ${props => props.theme.name === \"dark\" ? props.theme.colors.white : props.theme.colors.primary};\n  `);\nexport const StyledH3 = makeTypographyComponent(\"title3\");\nexport const StyledH4 = makeTypographyComponent(\"title4\");\nexport const StyledSubtitle = makeTypographyComponent(\"subtitle\", _css`\n    text-transform: uppercase;\n  `);\nexport const StyledSubText = makeTypographyComponent(\"subText\", _css`\n    color: ${props => props.theme.colors.darkSubText};\n  `);\nexport const StyledParagraph = makeTypographyComponent(\"paragraph\", _css`\n    color: ${props => props.theme.name === \"dark\" ? props.theme.colors.white : props.theme.colors.grey};\n  `);\nexport const StyledLink = makeTypographyComponent(\"link\", _css`\n    text-transform: uppercase;\n    text-decoration: underline;\n  `);\nexport const StyledNavigation = makeTypographyComponent(\"nav\");\nexport const StyledInfoHeading = makeTypographyComponent(\"infoHeading\");\nexport const StyledInfoSubHeading = makeTypographyComponent(\"infoSubHeading\", _css`\n    color: ${props => props.theme.colors.lightGrey};\n  `);\nexport const StyledFormLabel = makeTypographyComponent(\"formLabel\", _css`\n    color: ${({\n  theme\n}) => theme.name === \"dark\" ? theme.colors.lightGrey : theme.colors.darkGrey};\n  `);\nexport const StyledFormInput = makeTypographyComponent(\"formInput\", _css`\n    color: ${props => props.theme.name === \"dark\" ? props.theme.colors.white : props.theme.colors.primary};\n    background-color: transparent;\n    border: none;\n\n    &::placeholder {\n      color: ${props => props.theme.colors.placeholderGrey};\n    }\n  `);\nexport const StyledSelectItem = makeTypographyComponent(\"selectItem\");\nexport const StyledMetadata = makeTypographyComponent(\"small\", _css`\n    color: ${props => props.theme.colors.lightGrey};\n  `);","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/Typography/Typography.styles.tsx"],"names":["breakPoints","elementMap","title1","title2","title3","title4","subtitle","paragraph","infoHeading","infoSubHeading","formLabel","formInput","selectItem","link","nav","small","subText","makeTypographyComponent","key","additionalCSS","tag","Component","styled","props","theme","typography","desktop","fontSize","fontWeight","lineHeight","mobile","phoneOnly","StyledH1","css","name","colors","white","alwaysBlack","StyledH2","primary","StyledH3","StyledH4","StyledSubtitle","StyledSubText","darkSubText","StyledParagraph","grey","StyledLink","StyledNavigation","StyledInfoHeading","StyledInfoSubHeading","lightGrey","StyledFormLabel","darkGrey","StyledFormInput","placeholderGrey","StyledSelectItem","StyledMetadata"],"mappings":"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","sourcesContent":["import styled, {\n  DefaultTheme,\n  ThemedStyledFunction,\n  css,\n  StyledComponent,\n} from \"styled-components/macro\";\n\nimport breakPoints from \"../../style/breakpoints\";\n\nconst elementMap: Record<\n  keyof DefaultTheme[\"typography\"],\n  keyof JSX.IntrinsicElements\n> = {\n  title1: \"h1\",\n  title2: \"h2\",\n  title3: \"h3\",\n  title4: \"h4\",\n  subtitle: \"h5\",\n  paragraph: \"p\",\n  infoHeading: \"h4\",\n  infoSubHeading: \"h4\",\n  formLabel: \"label\",\n  formInput: \"input\",\n  selectItem: \"div\",\n  link: \"a\",\n  nav: \"div\",\n  small: \"aside\",\n  subText: \"h5\",\n};\n\n/**\n * Creates a styled typography component for the key in `theme.typography`.\n * Element tag is defined above, and additional CSS can be added for properties\n * that are not common to all typography components.\n * @param key The key from `theme.typography` for typography params\n * @param additionalCSS Any additional CSS not included in `theme.typography.key`\n *                      to add, e.g. text-transform. Use `css` utility from\n *                      styled components to add it.\n * @returns A styled component with the correct typography styles appleid.\n */\nconst makeTypographyComponent = (\n  key: keyof DefaultTheme[\"typography\"],\n  additionalCSS?: any\n): StyledComponent<keyof JSX.IntrinsicElements, DefaultTheme> => {\n  const tag = elementMap[key];\n  const Component = (styled[tag] as ThemedStyledFunction<\n    typeof tag,\n    DefaultTheme,\n    {},\n    never\n  >)`\n    font-size: ${(props) => props.theme.typography[key].desktop.fontSize};\n    font-weight: ${(props) => props.theme.typography[key].desktop.fontWeight};\n    line-height: ${(props) => props.theme.typography[key].desktop.lineHeight};\n    ${additionalCSS ? additionalCSS : \"\"}\n    \n    ${(props) =>\n      props.theme.typography[key].mobile\n        ? `\n      @media ${breakPoints.phoneOnly} {\n        font-size: ${props.theme.typography[key].mobile?.fontSize};\n        font-weight: ${props.theme.typography[key].mobile?.fontWeight};\n        line-height: ${props.theme.typography[key].mobile?.lineHeight};\n      }`\n        : \"\"}\n  `;\n  return Component;\n};\n\nexport const StyledH1 = makeTypographyComponent(\n  \"title1\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.alwaysBlack};\n  `\n);\nexport const StyledH2 = makeTypographyComponent(\n  \"title2\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n  `\n);\nexport const StyledH3 = makeTypographyComponent(\"title3\");\nexport const StyledH4 = makeTypographyComponent(\"title4\");\nexport const StyledSubtitle = makeTypographyComponent(\n  \"subtitle\",\n  css`\n    text-transform: uppercase;\n  `\n);\nexport const StyledSubText = makeTypographyComponent(\n  \"subText\",\n  css`\n    color: ${(props) => props.theme.colors.darkSubText};\n  `\n);\nexport const StyledParagraph = makeTypographyComponent(\n  \"paragraph\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.grey};\n  `\n);\n\nexport const StyledLink = makeTypographyComponent(\n  \"link\",\n  css`\n    text-transform: uppercase;\n    text-decoration: underline;\n  `\n) as StyledComponent<\"a\", DefaultTheme, {}>;\n\nexport const StyledNavigation = makeTypographyComponent(\"nav\");\nexport const StyledInfoHeading = makeTypographyComponent(\"infoHeading\");\nexport const StyledInfoSubHeading = makeTypographyComponent(\n  \"infoSubHeading\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\nexport const StyledFormLabel = makeTypographyComponent(\n  \"formLabel\",\n  css`\n    color: ${({ theme }) =>\n      theme.name === \"dark\" ? theme.colors.lightGrey : theme.colors.darkGrey};\n  `\n);\nexport const StyledFormInput = makeTypographyComponent(\n  \"formInput\",\n  css`\n    color: ${(props) =>\n      props.theme.name === \"dark\"\n        ? props.theme.colors.white\n        : props.theme.colors.primary};\n    background-color: transparent;\n    border: none;\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.placeholderGrey};\n    }\n  `\n);\nexport const StyledSelectItem = makeTypographyComponent(\"selectItem\");\nexport const StyledMetadata = makeTypographyComponent(\n  \"small\",\n  css`\n    color: ${(props) => props.theme.colors.lightGrey};\n  `\n);\n"]},"metadata":{},"sourceType":"module"}