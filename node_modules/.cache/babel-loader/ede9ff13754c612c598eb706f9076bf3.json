{"ast":null,"code":"import { ThemeType as _ThemeType } from \"styled-components\";\nimport { ThemeProvider as _ThemeProvider } from \"styled-components\";\n\nvar _jsxFileName = \"/Users/marcusmattus/ethdex/airswap-web/src/pages/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useEffect } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport i18n from \"i18next\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport Page from \"../../components/Page/Page\";\nimport PageLoader from \"../../components/PageLoader/PageLoader\";\nimport LastLookProvider from \"../../contexts/lastLook/LastLook\";\nimport { selectTheme } from \"../../features/userSettings/userSettingsSlice\";\nimport useAppRouteParams from \"../../hooks/useAppRouteParams\";\nimport useSystemTheme from \"../../hooks/useSystemTheme\";\nimport GlobalStyle from \"../../style/GlobalStyle\";\nimport { darkTheme, lightTheme } from \"../../style/themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cachedLibrary = {};\n\nfunction getLibrary(provider) {\n  if (!cachedLibrary[provider.chainId]) {\n    cachedLibrary[provider.chainId] = new Web3Provider(provider);\n    cachedLibrary[provider.chainId].pollingInterval = 12000;\n  }\n\n  return cachedLibrary[provider.chainId];\n}\n\nconst Home = () => {\n  _s();\n\n  const theme = useAppSelector(selectTheme);\n  const systemTheme = useSystemTheme();\n  const appRouteParams = useAppRouteParams();\n  useEffect(() => {\n    i18n.changeLanguage(appRouteParams.lang);\n  }, [appRouteParams.lang]);\n  const renderedTheme = theme === \"system\" ? systemTheme : theme;\n  return /*#__PURE__*/_jsxDEV(_ThemeProvider, {\n    theme: renderedTheme === \"dark\" ? darkTheme : lightTheme,\n    children: [/*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n      getLibrary: getLibrary,\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(LastLookProvider, {\n          children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"MAwouc0x52zo+5ylRWxy4hUE1Tw=\", false, function () {\n  return [useAppSelector, useSystemTheme, useAppRouteParams];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/pages/Home/Home.tsx"],"names":["React","Suspense","useEffect","Web3Provider","Web3ReactProvider","i18n","useAppSelector","Page","PageLoader","LastLookProvider","selectTheme","useAppRouteParams","useSystemTheme","GlobalStyle","darkTheme","lightTheme","cachedLibrary","getLibrary","provider","chainId","pollingInterval","Home","theme","systemTheme","appRouteParams","changeLanguage","lang","renderedTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAGA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,WAAT,QAA4B,+CAA5B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;;AAEA,IAAIC,aAA2C,GAAG,EAAlD;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAAiD;AAC/C,MAAI,CAACF,aAAa,CAACE,QAAQ,CAACC,OAAV,CAAlB,EAAsC;AACpCH,IAAAA,aAAa,CAACE,QAAQ,CAACC,OAAV,CAAb,GAAkC,IAAIhB,YAAJ,CAAiBe,QAAjB,CAAlC;AACAF,IAAAA,aAAa,CAACE,QAAQ,CAACC,OAAV,CAAb,CAAgCC,eAAhC,GAAkD,KAAlD;AACD;;AACD,SAAOJ,aAAa,CAACE,QAAQ,CAACC,OAAV,CAApB;AACD;;AAED,MAAME,IAAI,GAAG,MAAmB;AAAA;;AAC9B,QAAMC,KAAK,GAAGhB,cAAc,CAACI,WAAD,CAA5B;AACA,QAAMa,WAAW,GAAGX,cAAc,EAAlC;AACA,QAAMY,cAAc,GAAGb,iBAAiB,EAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,IAAI,CAACoB,cAAL,CAAoBD,cAAc,CAACE,IAAnC;AACD,GAFQ,EAEN,CAACF,cAAc,CAACE,IAAhB,CAFM,CAAT;AAIA,QAAMC,aAAwB,GAC5BL,KAAK,KAAK,QAAV,GAAqBC,WAArB,GAAoCD,KADtC;AAGA,sBACE,QAAC,cAAD;AAAe,IAAA,KAAK,EAAEK,aAAa,KAAK,MAAlB,GAA2Bb,SAA3B,GAAuCC,UAA7D;AAAA,4BACE,QAAC,iBAAD;AAAmB,MAAA,UAAU,EAAEE,UAA/B;AAAA,6BAEE,QAAC,QAAD;AAAU,QAAA,QAAQ,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAApB;AAAA,+BACE,QAAC,gBAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAzBD;;GAAMI,I;UACUf,c,EACMM,c,EACGD,iB;;;KAHnBU,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React, { Suspense, useEffect } from \"react\";\n\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nimport i18n from \"i18next\";\nimport { ThemeProvider, ThemeType } from \"styled-components/macro\";\n\nimport { useAppSelector } from \"../../app/hooks\";\nimport Page from \"../../components/Page/Page\";\nimport PageLoader from \"../../components/PageLoader/PageLoader\";\nimport LastLookProvider from \"../../contexts/lastLook/LastLook\";\nimport { selectTheme } from \"../../features/userSettings/userSettingsSlice\";\nimport useAppRouteParams from \"../../hooks/useAppRouteParams\";\nimport useSystemTheme from \"../../hooks/useSystemTheme\";\nimport GlobalStyle from \"../../style/GlobalStyle\";\nimport { darkTheme, lightTheme } from \"../../style/themes\";\n\nlet cachedLibrary: Record<string, Web3Provider> = {};\n\nfunction getLibrary(provider: any): Web3Provider {\n  if (!cachedLibrary[provider.chainId]) {\n    cachedLibrary[provider.chainId] = new Web3Provider(provider);\n    cachedLibrary[provider.chainId].pollingInterval = 12000;\n  }\n  return cachedLibrary[provider.chainId];\n}\n\nconst Home = (): JSX.Element => {\n  const theme = useAppSelector(selectTheme);\n  const systemTheme = useSystemTheme();\n  const appRouteParams = useAppRouteParams();\n\n  useEffect(() => {\n    i18n.changeLanguage(appRouteParams.lang);\n  }, [appRouteParams.lang]);\n\n  const renderedTheme: ThemeType =\n    theme === \"system\" ? systemTheme : (theme as ThemeType);\n\n  return (\n    <ThemeProvider theme={renderedTheme === \"dark\" ? darkTheme : lightTheme}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        {/* Suspense needed here for loading i18n resources */}\n        <Suspense fallback={<PageLoader />}>\n          <LastLookProvider>\n            <Page />\n          </LastLookProvider>\n        </Suspense>\n      </Web3ReactProvider>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}