{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/WalletButton/subcomponents/WalletAddress/WalletAddress.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport useAddressOrEnsName from \"../../../../hooks/useAddressOrEnsName\";\nimport { ConnectionStatusCircle, Button, WalletAddressText, StyledBorderedButton } from \"./WalletAddress.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletAddress = ({\n  address,\n  isUnsupportedNetwork = false,\n  setTransactionsTabOpen,\n  setShowWalletList,\n  glow\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const addressOrName = useAddressOrEnsName(address);\n\n  const renderContent = () => /*#__PURE__*/_jsxDEV(StyledBorderedButton, {\n    $glow: glow,\n    children: [/*#__PURE__*/_jsxDEV(ConnectionStatusCircle, {\n      $connected: !!address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletAddressText, {\n      children: isUnsupportedNetwork ? t(\"wallet.unsupportedNetwork\") : addressOrName ? addressOrName : t(\"wallet.notConnected\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      !!address ? setTransactionsTabOpen(true) : setShowWalletList(true);\n    },\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletAddress, \"bQXdiiPsH3az70iKnfKgy0iaktQ=\", false, function () {\n  return [useTranslation, useAddressOrEnsName];\n});\n\n_c = WalletAddress;\nexport default WalletAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletAddress\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/WalletButton/subcomponents/WalletAddress/WalletAddress.tsx"],"names":["useTranslation","useAddressOrEnsName","ConnectionStatusCircle","Button","WalletAddressText","StyledBorderedButton","WalletAddress","address","isUnsupportedNetwork","setTransactionsTabOpen","setShowWalletList","glow","t","addressOrName","renderContent"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AAEA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,SACEC,sBADF,EAEEC,MAFF,EAGEC,iBAHF,EAIEC,oBAJF,QAKO,wBALP;;;AAgBA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,oBAAoB,GAAG,KAFF;AAGrBC,EAAAA,sBAHqB;AAIrBC,EAAAA,iBAJqB;AAKrBC,EAAAA;AALqB,CAAD,KAMQ;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AACA,QAAMa,aAAa,GAAGZ,mBAAmB,CAACM,OAAD,CAAzC;;AAEA,QAAMO,aAAa,GAAG,mBACpB,QAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEH,IAA7B;AAAA,4BACE,QAAC,sBAAD;AAAwB,MAAA,UAAU,EAAE,CAAC,CAACJ;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA,gBACGC,oBAAoB,GACjBI,CAAC,CAAC,2BAAD,CADgB,GAEjBC,aAAa,GACbA,aADa,GAEbD,CAAC,CAAC,qBAAD;AALP;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,OAAC,CAACL,OAAF,GAAYE,sBAAsB,CAAC,IAAD,CAAlC,GAA2CC,iBAAiB,CAAC,IAAD,CAA5D;AACD,KAHH;AAAA,cAKGI,aAAa;AALhB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMR,a;UAOUN,c,EACQC,mB;;;KARlBK,a;AAkCN,eAAeA,aAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\n\nimport useAddressOrEnsName from \"../../../../hooks/useAddressOrEnsName\";\nimport {\n  ConnectionStatusCircle,\n  Button,\n  WalletAddressText,\n  StyledBorderedButton,\n} from \"./WalletAddress.styles\";\n\ntype WalletAddressPropsType = {\n  address: string | null;\n  isUnsupportedNetwork?: boolean;\n  showBlockies?: boolean;\n  glow?: boolean;\n  setTransactionsTabOpen: (x: boolean) => void;\n  setShowWalletList: (x: boolean) => void;\n};\n\nconst WalletAddress = ({\n  address,\n  isUnsupportedNetwork = false,\n  setTransactionsTabOpen,\n  setShowWalletList,\n  glow,\n}: WalletAddressPropsType) => {\n  const { t } = useTranslation();\n  const addressOrName = useAddressOrEnsName(address);\n\n  const renderContent = () => (\n    <StyledBorderedButton $glow={glow}>\n      <ConnectionStatusCircle $connected={!!address} />\n      <WalletAddressText>\n        {isUnsupportedNetwork\n          ? t(\"wallet.unsupportedNetwork\")\n          : addressOrName\n          ? addressOrName\n          : t(\"wallet.notConnected\")}\n      </WalletAddressText>\n    </StyledBorderedButton>\n  );\n\n  return (\n    <Button\n      onClick={() => {\n        !!address ? setTransactionsTabOpen(true) : setShowWalletList(true);\n      }}\n    >\n      {renderContent()}\n    </Button>\n  );\n};\n\nexport default WalletAddress;\n"]},"metadata":{},"sourceType":"module"}