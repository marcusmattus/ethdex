{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/SettingsButton/SettingsButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Icon from \"../Icon/Icon\";\nimport SettingsPopover from \"../SettingsPopover/SettingsPopover\";\nimport { Container, SettingsButtonContainer } from \"./SettingsButton.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SettingsButton = ({\n  settingsOpen,\n  transactionsTabOpen,\n  setSettingsOpen,\n  className\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const containerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const handleClick = useCallback(e => {\n    if (containerRef.current && containerRef.current.contains(e.target) || popoverRef.current && popoverRef.current.contains(e.target)) {\n      return;\n    }\n\n    setSettingsOpen(false);\n  }, [setSettingsOpen]);\n  const handleEscKey = useCallback(e => {\n    if (e.keyCode === 27) {\n      setSettingsOpen(false);\n    }\n  }, [setSettingsOpen]);\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    document.addEventListener(\"keydown\", handleEscKey, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleClick, handleEscKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: className,\n      ref: containerRef,\n      open: transactionsTabOpen,\n      children: /*#__PURE__*/_jsxDEV(SettingsButtonContainer, {\n        \"aria-label\": t(\"common.settings\"),\n        onClick: () => setSettingsOpen(!settingsOpen),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          iconSize: 1.5,\n          name: \"settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), settingsOpen && /*#__PURE__*/_jsxDEV(SettingsPopover, {\n      open: transactionsTabOpen,\n      popoverRef: popoverRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SettingsButton, \"RoSW8Nfo6oVnbp8Ex4kMAh1g9oE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SettingsButton;\nexport default SettingsButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsButton\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/SettingsButton/SettingsButton.tsx"],"names":["useCallback","useEffect","useRef","useTranslation","Icon","SettingsPopover","Container","SettingsButtonContainer","SettingsButton","settingsOpen","transactionsTabOpen","setSettingsOpen","className","t","containerRef","popoverRef","handleClick","e","current","contains","target","handleEscKey","keyCode","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,SAAT,EAAoBC,uBAApB,QAAmD,wBAAnD;;;;AASA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,YADsB;AAEtBC,EAAAA,mBAFsB;AAGtBC,EAAAA,eAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKG;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AAEA,QAAMW,YAAY,GAAGZ,MAAM,CAAiB,IAAjB,CAA3B;AACA,QAAMa,UAAU,GAAGb,MAAM,CAAiB,IAAjB,CAAzB;AAEA,QAAMc,WAAW,GAAGhB,WAAW,CAC5BiB,CAAD,IAAO;AACL,QACGH,YAAY,CAACI,OAAb,IAAwBJ,YAAY,CAACI,OAAb,CAAqBC,QAArB,CAA8BF,CAAC,CAACG,MAAhC,CAAzB,IACCL,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACG,OAAX,CAAmBC,QAAnB,CAA4BF,CAAC,CAACG,MAA9B,CAFzB,EAGE;AACA;AACD;;AACDT,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAT4B,EAU7B,CAACA,eAAD,CAV6B,CAA/B;AAaA,QAAMU,YAAY,GAAGrB,WAAW,CAC7BiB,CAAD,IAAO;AACL,QAAIA,CAAC,CAACK,OAAF,KAAc,EAAlB,EAAsB;AACpBX,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAL6B,EAM9B,CAACA,eAAD,CAN8B,CAAhC;AASAV,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,WAAvC;AACAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,YAArC,EAAmD,KAAnD;AAEA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,WAA1C;AACAO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,YAAxC,EAAsD,KAAtD;AACD,KAHD;AAID,GARQ,EAQN,CAACL,WAAD,EAAcK,YAAd,CARM,CAAT;AAUA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,SAAS,EAAET,SADb;AAEE,MAAA,GAAG,EAAEE,YAFP;AAGE,MAAA,IAAI,EAAEJ,mBAHR;AAAA,6BAKE,QAAC,uBAAD;AACE,sBAAYG,CAAC,CAAC,iBAAD,CADf;AAEE,QAAA,OAAO,EAAE,MAAMF,eAAe,CAAC,CAACF,YAAF,CAFhC;AAAA,+BAIE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,GAAhB;AAAqB,UAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,EAaGA,YAAY,iBACX,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEC,mBAAvB;AAA4C,MAAA,UAAU,EAAEK;AAAxD;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADF;AAmBD,CA9DD;;GAAMP,c;UAMUL,c;;;KANVK,c;AAgEN,eAAeA,cAAf","sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Icon from \"../Icon/Icon\";\nimport SettingsPopover from \"../SettingsPopover/SettingsPopover\";\nimport { Container, SettingsButtonContainer } from \"./SettingsButton.style\";\n\ntype SettingsButtonType = {\n  settingsOpen: boolean;\n  transactionsTabOpen: boolean;\n  setSettingsOpen: (x: boolean) => void;\n  className?: string;\n};\n\nconst SettingsButton = ({\n  settingsOpen,\n  transactionsTabOpen,\n  setSettingsOpen,\n  className,\n}: SettingsButtonType) => {\n  const { t } = useTranslation();\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (\n        (containerRef.current && containerRef.current.contains(e.target)) ||\n        (popoverRef.current && popoverRef.current.contains(e.target))\n      ) {\n        return;\n      }\n      setSettingsOpen(false);\n    },\n    [setSettingsOpen]\n  );\n\n  const handleEscKey = useCallback(\n    (e) => {\n      if (e.keyCode === 27) {\n        setSettingsOpen(false);\n      }\n    },\n    [setSettingsOpen]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    document.addEventListener(\"keydown\", handleEscKey, false);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n      document.removeEventListener(\"keydown\", handleEscKey, false);\n    };\n  }, [handleClick, handleEscKey]);\n\n  return (\n    <>\n      <Container\n        className={className}\n        ref={containerRef}\n        open={transactionsTabOpen}\n      >\n        <SettingsButtonContainer\n          aria-label={t(\"common.settings\")}\n          onClick={() => setSettingsOpen(!settingsOpen)}\n        >\n          <Icon iconSize={1.5} name=\"settings\" />\n        </SettingsButtonContainer>\n      </Container>\n      {settingsOpen && (\n        <SettingsPopover open={transactionsTabOpen} popoverRef={popoverRef} />\n      )}\n    </>\n  );\n};\n\nexport default SettingsButton;\n"]},"metadata":{},"sourceType":"module"}