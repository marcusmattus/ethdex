{"ast":null,"code":"\"use strict\";\n/* tslint:disable:max-classes-per-file */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpcRequest = exports.JsonRpcResponse = exports.JsonRpcError = exports.JsonRpcErrorCodes = void 0; // See https://www.jsonrpc.org/specification for the protocol details\n\nvar JsonRpcErrorCodes;\n\n(function (JsonRpcErrorCodes) {\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\"; // App specific\n\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_RESPONSE\"] = -32001] = \"INVALID_RESPONSE\";\n  JsonRpcErrorCodes[JsonRpcErrorCodes[\"REQUEST_TIMEOUT\"] = -32002] = \"REQUEST_TIMEOUT\";\n})(JsonRpcErrorCodes = exports.JsonRpcErrorCodes || (exports.JsonRpcErrorCodes = {}));\n\nclass JsonRpcError {}\n\nexports.JsonRpcError = JsonRpcError;\n\nclass JsonRpcResponse {}\n\nexports.JsonRpcResponse = JsonRpcResponse;\n\nclass JsonRpcRequest {}\n\nexports.JsonRpcRequest = JsonRpcRequest;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/node_modules/@airswap/jsonrpc-client-websocket/lib/jsonrpc.model.js"],"names":["Object","defineProperty","exports","value","JsonRpcRequest","JsonRpcResponse","JsonRpcError","JsonRpcErrorCodes"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,eAAR,GAA0BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,iBAAR,GAA4B,KAAK,CAA3G,C,CACA;;AACA,IAAIA,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;AAC1BA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,aAAD,CAAjB,GAAmC,CAAC,KAArC,CAAjB,GAA+D,aAA/D;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,iBAAD,CAAjB,GAAuC,CAAC,KAAzC,CAAjB,GAAmE,iBAAnE;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,kBAAD,CAAjB,GAAwC,CAAC,KAA1C,CAAjB,GAAoE,kBAApE;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,gBAAD,CAAjB,GAAsC,CAAC,KAAxC,CAAjB,GAAkE,gBAAlE;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,gBAAD,CAAjB,GAAsC,CAAC,KAAxC,CAAjB,GAAkE,gBAAlE,CAL0B,CAM1B;;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,kBAAD,CAAjB,GAAwC,CAAC,KAA1C,CAAjB,GAAoE,kBAApE;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,iBAAD,CAAjB,GAAuC,CAAC,KAAzC,CAAjB,GAAmE,iBAAnE;AACH,CATD,EASGA,iBAAiB,GAAGL,OAAO,CAACK,iBAAR,KAA8BL,OAAO,CAACK,iBAAR,GAA4B,EAA1D,CATvB;;AAUA,MAAMD,YAAN,CAAmB;;AAEnBJ,OAAO,CAACI,YAAR,GAAuBA,YAAvB;;AACA,MAAMD,eAAN,CAAsB;;AAEtBH,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AACA,MAAMD,cAAN,CAAqB;;AAErBF,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n/* tslint:disable:max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcRequest = exports.JsonRpcResponse = exports.JsonRpcError = exports.JsonRpcErrorCodes = void 0;\n// See https://www.jsonrpc.org/specification for the protocol details\nvar JsonRpcErrorCodes;\n(function (JsonRpcErrorCodes) {\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    // App specific\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"INVALID_RESPONSE\"] = -32001] = \"INVALID_RESPONSE\";\n    JsonRpcErrorCodes[JsonRpcErrorCodes[\"REQUEST_TIMEOUT\"] = -32002] = \"REQUEST_TIMEOUT\";\n})(JsonRpcErrorCodes = exports.JsonRpcErrorCodes || (exports.JsonRpcErrorCodes = {}));\nclass JsonRpcError {\n}\nexports.JsonRpcError = JsonRpcError;\nclass JsonRpcResponse {\n}\nexports.JsonRpcResponse = JsonRpcResponse;\nclass JsonRpcRequest {\n}\nexports.JsonRpcRequest = JsonRpcRequest;\n"]},"metadata":{},"sourceType":"script"}