{"ast":null,"code":"import { ThemeType as _ThemeType } from \"styled-components\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const THEME_LOCAL_STORAGE_KEY = \"airswap/theme\";\nconst initialState = {\n  theme: localStorage[THEME_LOCAL_STORAGE_KEY] || \"dark\",\n  tokens: {\n    tokenFrom: undefined,\n    tokenTo: undefined\n  }\n};\nconst userSettingsSlice = createSlice({\n  name: \"userSettings\",\n  initialState,\n  reducers: {\n    setTheme: (state, {\n      payload\n    }) => {\n      localStorage[THEME_LOCAL_STORAGE_KEY] = payload;\n      state.theme = payload;\n    },\n    setUserTokens: (state, action) => {\n      state.tokens = action.payload;\n    }\n  }\n});\nexport const selectTheme = state => state.userSettings.theme;\nexport const selectUserTokens = state => state.userSettings.tokens;\nexport const {\n  setTheme,\n  setUserTokens\n} = userSettingsSlice.actions;\nexport default userSettingsSlice.reducer;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/features/userSettings/userSettingsSlice.ts"],"names":["createSlice","THEME_LOCAL_STORAGE_KEY","initialState","theme","localStorage","tokens","tokenFrom","undefined","tokenTo","userSettingsSlice","name","reducers","setTheme","state","payload","setUserTokens","action","selectTheme","userSettings","selectUserTokens","actions","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAcA,OAAO,MAAMC,uBAAuB,GAAG,eAAhC;AAEP,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,KAAK,EAAEC,YAAY,CAACH,uBAAD,CAAZ,IAAyC,MADV;AAEtCI,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAEC,SADL;AAENC,IAAAA,OAAO,EAAED;AAFH;AAF8B,CAAxC;AAQA,MAAME,iBAAiB,GAAGT,WAAW,CAAC;AACpCU,EAAAA,IAAI,EAAE,cAD8B;AAEpCR,EAAAA,YAFoC;AAGpCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAChCV,MAAAA,YAAY,CAACH,uBAAD,CAAZ,GAAwCa,OAAxC;AACAD,MAAAA,KAAK,CAACV,KAAN,GAAcW,OAAd;AACD,KAJO;AAKRC,IAAAA,aAAa,EAAE,CACbF,KADa,EAEbG,MAFa,KAGV;AACHH,MAAAA,KAAK,CAACR,MAAN,GAAeW,MAAM,CAACF,OAAtB;AACD;AAVO;AAH0B,CAAD,CAArC;AAiBA,OAAO,MAAMG,WAAW,GAAIJ,KAAD,IAAsBA,KAAK,CAACK,YAAN,CAAmBf,KAA7D;AAEP,OAAO,MAAMgB,gBAAgB,GAAIN,KAAD,IAAsBA,KAAK,CAACK,YAAN,CAAmBb,MAAlE;AAEP,OAAO,MAAM;AAAEO,EAAAA,QAAF;AAAYG,EAAAA;AAAZ,IAA8BN,iBAAiB,CAACW,OAAtD;AAEP,eAAeX,iBAAiB,CAACY,OAAjC","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { ThemeType } from \"styled-components/macro\";\n\nimport { RootState } from \"../../app/store\";\n\nexport interface UserSettingsState {\n  theme: ThemeType | \"system\";\n  tokens: {\n    tokenFrom?: string;\n    tokenTo?: string;\n  };\n}\n\nexport const THEME_LOCAL_STORAGE_KEY = \"airswap/theme\";\n\nconst initialState: UserSettingsState = {\n  theme: localStorage[THEME_LOCAL_STORAGE_KEY] || \"dark\",\n  tokens: {\n    tokenFrom: undefined,\n    tokenTo: undefined,\n  },\n};\n\nconst userSettingsSlice = createSlice({\n  name: \"userSettings\",\n  initialState,\n  reducers: {\n    setTheme: (state, { payload }) => {\n      localStorage[THEME_LOCAL_STORAGE_KEY] = payload;\n      state.theme = payload;\n    },\n    setUserTokens: (\n      state,\n      action: PayloadAction<{ tokenFrom: string; tokenTo: string }>\n    ) => {\n      state.tokens = action.payload;\n    },\n  },\n});\n\nexport const selectTheme = (state: RootState) => state.userSettings.theme;\n\nexport const selectUserTokens = (state: RootState) => state.userSettings.tokens;\n\nexport const { setTheme, setUserTokens } = userSettingsSlice.actions;\n\nexport default userSettingsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}