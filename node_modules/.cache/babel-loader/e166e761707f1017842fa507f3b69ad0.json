{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/airswap-web/src/components/Toasts/TransactionToast.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { HiX } from \"react-icons/hi\";\nimport { MdBeenhere, MdError } from \"react-icons/md\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport { Container, HiXContainer, IconContainer, SwapAmounts, TextContainer } from \"./Toast.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionToast = ({\n  onClose,\n  error,\n  transaction,\n  type,\n  senderToken,\n  signerToken,\n  approvalToken\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(IconContainer, {\n      error: error,\n      children: error ? /*#__PURE__*/_jsxDEV(MdError, {\n        style: {\n          width: \"1.25rem\",\n          height: \"1.25rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MdBeenhere, {\n        style: {\n          width: \"1.25rem\",\n          height: \"1.25rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InfoHeading, {\n        children: type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\" ? error ? t(\"toast.swapFail\") : t(\"toast.swapComplete\") : error ? t(\"toast.approvalFail\") : t(\"toast.approvalComplete\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwapAmounts, {\n        children: (() => {\n          if (type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\") {\n            if (transaction && senderToken && signerToken) {\n              const tx = transaction.protocol === \"last-look\" ? transaction : transaction;\n              let translationKey = \"wallet.transaction\";\n\n              if (tx.protocol === \"last-look\") {\n                translationKey = \"wallet.lastLookTransaction\";\n              } // @ts-ignore dynamic translation key\n\n\n              return t(translationKey, {\n                senderAmount: parseFloat(Number(formatUnits(tx.order.senderAmount, senderToken.decimals)).toFixed(5)),\n                senderToken: senderToken.symbol,\n                signerAmount: parseFloat(Number(formatUnits(tx.order.signerAmount, signerToken.decimals)).toFixed(5)),\n                signerToken: signerToken.symbol\n              });\n            }\n          }\n\n          return t(\"toast.approve\", {\n            symbol: approvalToken === null || approvalToken === void 0 ? void 0 : approvalToken.symbol\n          });\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HiXContainer, {\n      children: /*#__PURE__*/_jsxDEV(HiX, {\n        style: {\n          width: \"1rem\",\n          height: \"1rem\",\n          cursor: \"pointer\"\n        },\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionToast, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TransactionToast;\nexport default TransactionToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionToast\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/components/Toasts/TransactionToast.tsx"],"names":["useTranslation","HiX","MdBeenhere","MdError","formatUnits","InfoHeading","Container","HiXContainer","IconContainer","SwapAmounts","TextContainer","TransactionToast","onClose","error","transaction","type","senderToken","signerToken","approvalToken","t","width","height","tx","protocol","translationKey","senderAmount","parseFloat","Number","order","decimals","toFixed","symbol","signerAmount","cursor"],"mappings":"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","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { HiX } from \"react-icons/hi\";\nimport { MdBeenhere, MdError } from \"react-icons/md\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { formatUnits } from \"ethers/lib/utils\";\n\nimport {\n  SubmittedLastLookOrder,\n  SubmittedRFQOrder,\n  SubmittedTransaction,\n  TransactionType,\n} from \"../../features/transactions/transactionsSlice\";\nimport { InfoHeading } from \"../Typography/Typography\";\nimport {\n  Container,\n  HiXContainer,\n  IconContainer,\n  SwapAmounts,\n  TextContainer,\n} from \"./Toast.styles\";\n\nexport type TransactionToastProps = {\n  /**\n   * Function to trigger closing of toast\n   */\n  onClose: () => void;\n  /**\n   * Error affects whether the icon colors show up as blue or red;\n   */\n  error: boolean;\n  /**\n   * The parent object of SubmittedOrder and SubmittedApproval\n   */\n  transaction: SubmittedTransaction;\n  /**\n   * Type of transaction the toast will display;\n   */\n  type: TransactionType;\n  /**\n   * Token Info of sender token\n   */\n  senderToken?: TokenInfo;\n  /**\n   * Token Info of signer token\n   */\n  signerToken?: TokenInfo;\n  /**\n   * Token Info of approval token\n   */\n  approvalToken?: TokenInfo;\n};\n\nconst TransactionToast = ({\n  onClose,\n  error,\n  transaction,\n  type,\n  senderToken,\n  signerToken,\n  approvalToken,\n}: TransactionToastProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <IconContainer error={error}>\n        {error ? (\n          <MdError style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\n        ) : (\n          <MdBeenhere style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\n        )}\n      </IconContainer>\n      <TextContainer>\n        <InfoHeading>\n          {type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\"\n            ? error\n              ? t(\"toast.swapFail\")\n              : t(\"toast.swapComplete\")\n            : error\n            ? t(\"toast.approvalFail\")\n            : t(\"toast.approvalComplete\")}\n        </InfoHeading>\n        <SwapAmounts>\n          {(() => {\n            if (type === \"Order\" || type === \"Deposit\" || type === \"Withdraw\") {\n              if (transaction && senderToken && signerToken) {\n                const tx =\n                  transaction.protocol === \"last-look\"\n                    ? (transaction as SubmittedLastLookOrder)\n                    : (transaction as SubmittedRFQOrder);\n                let translationKey = \"wallet.transaction\";\n                if (tx.protocol === \"last-look\") {\n                  translationKey = \"wallet.lastLookTransaction\";\n                }\n                // @ts-ignore dynamic translation key\n                return t(translationKey, {\n                  senderAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.senderAmount, senderToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  senderToken: senderToken.symbol,\n                  signerAmount: parseFloat(\n                    Number(\n                      formatUnits(tx.order.signerAmount, signerToken.decimals)\n                    ).toFixed(5)\n                  ),\n                  signerToken: signerToken.symbol,\n                });\n              }\n            }\n            return t(\"toast.approve\", { symbol: approvalToken?.symbol });\n          })()}\n        </SwapAmounts>\n      </TextContainer>\n\n      <HiXContainer>\n        <HiX\n          style={{\n            width: \"1rem\",\n            height: \"1rem\",\n            cursor: \"pointer\",\n          }}\n          onClick={onClose}\n        />\n      </HiXContainer>\n    </Container>\n  );\n};\n\nexport default TransactionToast;\n"]},"metadata":{},"sourceType":"module"}