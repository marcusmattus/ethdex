{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/Page/Page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { resetOrders } from \"../../features/orders/ordersSlice\";\nimport { Wallet } from \"../../features/wallet/Wallet\";\nimport useAppRouteParams from \"../../hooks/useAppRouteParams\";\nimport { AppRoutes } from \"../../routes\";\nimport HelmetContainer from \"../HelmetContainer/HelmetContainer\";\nimport SwapWidget from \"../SwapWidget/SwapWidget\";\nimport Toaster from \"../Toasts/Toaster\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport WidgetFrame from \"../WidgetFrame/WidgetFrame\";\nimport { InnerContainer, StyledPage, StyledSocialButtons } from \"./Page.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getInformationModalFromRoute(route) {\n  switch (route) {\n    case AppRoutes.join:\n      return AppRoutes.join;\n\n    default:\n      return undefined;\n  }\n}\n\nconst Page = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    active: web3ProviderIsActive\n  } = useWeb3React();\n  const appRouteParams = useAppRouteParams();\n  const [activeInformationModal, setActiveInformationModal] = useState(getInformationModalFromRoute(appRouteParams.route));\n  const [transactionsTabOpen, setTransactionsTabOpen] = useState(false);\n  const [showWalletList, setShowWalletList] = useState(false);\n  const [showMobileToolbar, setShowMobileToolbar] = useState(false);\n\n  const reset = () => {\n    setActiveInformationModal(undefined);\n    setShowMobileToolbar(false);\n    dispatch(resetOrders());\n  };\n\n  const handleLinkButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleAirswapButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleInformationModalCloseButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleCloseMobileToolbarButtonClick = () => {\n    setShowMobileToolbar(false);\n  };\n\n  const handleOpenMobileToolbarButtonClick = () => {\n    setShowMobileToolbar(true);\n  };\n\n  useEffect(() => {\n    if (showMobileToolbar) {\n      document.body.classList.add(\"scroll-locked\");\n    } else {\n      document.body.classList.remove(\"scroll-locked\");\n    }\n  }, [showMobileToolbar]);\n  useEffect(() => {\n    setActiveInformationModal(getInformationModalFromRoute(appRouteParams.route));\n\n    if (appRouteParams.route === undefined) {\n      reset();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [appRouteParams.route]);\n  return /*#__PURE__*/_jsxDEV(StyledPage, {\n    children: [/*#__PURE__*/_jsxDEV(HelmetContainer, {\n      title: t(\"app.title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InnerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Toaster, {\n        open: transactionsTabOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        isHiddenOnMobile: !showMobileToolbar,\n        onLinkButtonClick: handleLinkButtonClick,\n        onAirswapButtonClick: handleAirswapButtonClick,\n        onMobileCloseButtonClick: handleCloseMobileToolbarButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n        transactionsTabOpen: transactionsTabOpen,\n        setTransactionsTabOpen: setTransactionsTabOpen,\n        setShowWalletList: setShowWalletList,\n        onAirswapButtonClick: handleAirswapButtonClick,\n        onMobileMenuButtonClick: handleOpenMobileToolbarButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WidgetFrame, {\n        isOpen: transactionsTabOpen,\n        isConnected: web3ProviderIsActive,\n        children: /*#__PURE__*/_jsxDEV(SwapWidget, {\n          showWalletList: showWalletList,\n          activeInformationModal: activeInformationModal,\n          setShowWalletList: setShowWalletList,\n          onTrackTransactionClicked: () => setTransactionsTabOpen(true),\n          onInformationModalCloseButtonClick: handleInformationModalCloseButtonClick,\n          transactionsTabOpen: transactionsTabOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSocialButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Page, \"rF/k64RdvYuMdeM30SnHxPUnfSE=\", false, function () {\n  return [useAppDispatch, useHistory, useTranslation, useWeb3React, useAppRouteParams];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/Page/Page.tsx"],"names":["React","useEffect","useState","useTranslation","useHistory","useWeb3React","useAppDispatch","resetOrders","Wallet","useAppRouteParams","AppRoutes","HelmetContainer","SwapWidget","Toaster","Toolbar","WidgetFrame","InnerContainer","StyledPage","StyledSocialButtons","getInformationModalFromRoute","route","join","undefined","Page","dispatch","history","t","active","web3ProviderIsActive","appRouteParams","activeInformationModal","setActiveInformationModal","transactionsTabOpen","setTransactionsTabOpen","showWalletList","setShowWalletList","showMobileToolbar","setShowMobileToolbar","reset","handleLinkButtonClick","push","justifiedBaseUrl","handleAirswapButtonClick","handleInformationModalCloseButtonClick","handleCloseMobileToolbarButtonClick","handleOpenMobileToolbarButtonClick","document","body","classList","add","remove"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { resetOrders } from \"../../features/orders/ordersSlice\";\nimport { Wallet } from \"../../features/wallet/Wallet\";\nimport useAppRouteParams from \"../../hooks/useAppRouteParams\";\nimport { AppRoutes } from \"../../routes\";\nimport HelmetContainer from \"../HelmetContainer/HelmetContainer\";\nimport { InformationModalType } from \"../InformationModals/InformationModals\";\nimport SwapWidget from \"../SwapWidget/SwapWidget\";\nimport Toaster from \"../Toasts/Toaster\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport WidgetFrame from \"../WidgetFrame/WidgetFrame\";\nimport { InnerContainer, StyledPage, StyledSocialButtons } from \"./Page.styles\";\n\nfunction getInformationModalFromRoute(\n  route: AppRoutes | undefined\n): InformationModalType | undefined {\n  switch (route) {\n    case AppRoutes.join:\n      return AppRoutes.join;\n    default:\n      return undefined;\n  }\n}\n\nconst Page: FC = (): ReactElement => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { active: web3ProviderIsActive } = useWeb3React<Web3Provider>();\n\n  const appRouteParams = useAppRouteParams();\n  const [activeInformationModal, setActiveInformationModal] = useState<\n    InformationModalType | undefined\n  >(getInformationModalFromRoute(appRouteParams.route));\n  const [transactionsTabOpen, setTransactionsTabOpen] = useState(false);\n  const [showWalletList, setShowWalletList] = useState(false);\n  const [showMobileToolbar, setShowMobileToolbar] = useState(false);\n\n  const reset = () => {\n    setActiveInformationModal(undefined);\n    setShowMobileToolbar(false);\n    dispatch(resetOrders());\n  };\n\n  const handleLinkButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleAirswapButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleInformationModalCloseButtonClick = () => {\n    history.push(appRouteParams.justifiedBaseUrl);\n  };\n\n  const handleCloseMobileToolbarButtonClick = () => {\n    setShowMobileToolbar(false);\n  };\n\n  const handleOpenMobileToolbarButtonClick = () => {\n    setShowMobileToolbar(true);\n  };\n\n  useEffect(() => {\n    if (showMobileToolbar) {\n      document.body.classList.add(\"scroll-locked\");\n    } else {\n      document.body.classList.remove(\"scroll-locked\");\n    }\n  }, [showMobileToolbar]);\n\n  useEffect(() => {\n    setActiveInformationModal(\n      getInformationModalFromRoute(appRouteParams.route)\n    );\n\n    if (appRouteParams.route === undefined) {\n      reset();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appRouteParams.route]);\n\n  return (\n    <StyledPage>\n      <HelmetContainer title={t(\"app.title\")} />\n      <InnerContainer>\n        <Toaster open={transactionsTabOpen} />\n        <Toolbar\n          isHiddenOnMobile={!showMobileToolbar}\n          onLinkButtonClick={handleLinkButtonClick}\n          onAirswapButtonClick={handleAirswapButtonClick}\n          onMobileCloseButtonClick={handleCloseMobileToolbarButtonClick}\n        />\n        <Wallet\n          transactionsTabOpen={transactionsTabOpen}\n          setTransactionsTabOpen={setTransactionsTabOpen}\n          setShowWalletList={setShowWalletList}\n          onAirswapButtonClick={handleAirswapButtonClick}\n          onMobileMenuButtonClick={handleOpenMobileToolbarButtonClick}\n        />\n        <WidgetFrame\n          isOpen={transactionsTabOpen}\n          isConnected={web3ProviderIsActive}\n        >\n          <SwapWidget\n            showWalletList={showWalletList}\n            activeInformationModal={activeInformationModal}\n            setShowWalletList={setShowWalletList}\n            onTrackTransactionClicked={() => setTransactionsTabOpen(true)}\n            onInformationModalCloseButtonClick={\n              handleInformationModalCloseButtonClick\n            }\n            transactionsTabOpen={transactionsTabOpen}\n          />\n        </WidgetFrame>\n        <StyledSocialButtons />\n      </InnerContainer>\n    </StyledPage>\n  );\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}