{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/Toolbar/Toolbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport useMediaQuery from \"../../helpers/useMediaQuery\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { AppRoutes } from \"../../routes\";\nimport breakPoints from \"../../style/breakpoints\";\nimport { StyledAirswapButton, ToolbarButtonsContainer, ToolbarContainer } from \"./Toolbar.styles\";\nimport ToolbarButton from \"./subcomponents/ToolbarButton/ToolbarButton\";\nimport ToolbarMobileTopBar from \"./subcomponents/ToolbarMobileTopBar/ToolbarMobileTopBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const mobileMenuShowHideAnimationDuration = 0.5;\n\nconst Toolbar = ({\n  onLinkButtonClick,\n  onAirswapButtonClick,\n  onMobileCloseButtonClick,\n  isHiddenOnMobile\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const isTabletPortraitUp = useMediaQuery(breakPoints.tabletPortraitUp);\n  const containerRef = useRef(null);\n  const mobileTopBarRef = useRef(null);\n  const scrollContainerRef = useRef(null);\n  const [overflow, setOverflow] = useState(false);\n  useEffect(() => {\n    if (containerRef.current && mobileTopBarRef.current && scrollContainerRef.current) {\n      const {\n        scrollHeight,\n        offsetTop\n      } = scrollContainerRef.current;\n      setOverflow(scrollHeight + offsetTop > containerRef.current.offsetHeight);\n    }\n  }, [containerRef, mobileTopBarRef, scrollContainerRef, width, height]);\n\n  const onToolbarButtonClick = (e, type) => {\n    onMobileCloseButtonClick && onMobileCloseButtonClick();\n\n    if (!onLinkButtonClick) {\n      return;\n    } // On smaller devices we want the mobile menu to animate out first before routing\n\n\n    if (!isTabletPortraitUp) {\n      e.preventDefault();\n      setTimeout(() => onLinkButtonClick(type), mobileMenuShowHideAnimationDuration * 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToolbarContainer, {\n    ref: containerRef,\n    $overflow: overflow,\n    $isHiddenOnMobile: isHiddenOnMobile || isTabletPortraitUp,\n    children: [/*#__PURE__*/_jsxDEV(ToolbarMobileTopBar, {\n      toolbarRef: mobileTopBarRef,\n      onAirswapButtonClick: onAirswapButtonClick,\n      onCloseButtonClick: onMobileCloseButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledAirswapButton, {\n      onClick: onAirswapButtonClick,\n      ariaLabel: t(\"common.AirSwap\"),\n      icon: \"airswap\",\n      iconSize: 2.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToolbarButtonsContainer, {\n      ref: scrollContainerRef,\n      $overflow: overflow,\n      children: [/*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"swap-horizontal\",\n        text: \"OTC\",\n        href: \"https://trader.airswap.io/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"bars\",\n        text: t(\"common.stats\"),\n        href: \"https://dune.xyz/agrimony/AirSwap-v2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"vote\",\n        text: t(\"common.vote\"),\n        href: \"https://activate.codefi.network/staking/airswap/governance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"code\",\n        text: t(\"common.build\"),\n        href: \"https://github.com/airswap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"learn\",\n        text: t(\"common.learn\"),\n        href: \"https://about.airswap.io/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToolbarButton, {\n        iconName: \"contact-support\",\n        text: t(\"common.join\"),\n        onClick: e => {\n          onToolbarButtonClick(e, AppRoutes.join);\n        },\n        link: AppRoutes.join\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toolbar, \"DgbDW0f/8yuFUQGk5dvqLqmxFo0=\", false, function () {\n  return [useTranslation, useWindowSize, useMediaQuery];\n});\n\n_c = Toolbar;\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/Toolbar/Toolbar.tsx"],"names":["React","useEffect","useRef","useState","useTranslation","useMediaQuery","useWindowSize","AppRoutes","breakPoints","StyledAirswapButton","ToolbarButtonsContainer","ToolbarContainer","ToolbarButton","ToolbarMobileTopBar","mobileMenuShowHideAnimationDuration","Toolbar","onLinkButtonClick","onAirswapButtonClick","onMobileCloseButtonClick","isHiddenOnMobile","t","width","height","isTabletPortraitUp","tabletPortraitUp","containerRef","mobileTopBarRef","scrollContainerRef","overflow","setOverflow","current","scrollHeight","offsetTop","offsetHeight","onToolbarButtonClick","e","type","preventDefault","setTimeout","join"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport useMediaQuery from \"../../helpers/useMediaQuery\";\nimport useWindowSize from \"../../helpers/useWindowSize\";\nimport { AppRoutes } from \"../../routes\";\nimport breakPoints from \"../../style/breakpoints\";\nimport { InformationModalType } from \"../InformationModals/InformationModals\";\nimport {\n  StyledAirswapButton,\n  ToolbarButtonsContainer,\n  ToolbarContainer,\n} from \"./Toolbar.styles\";\nimport ToolbarButton from \"./subcomponents/ToolbarButton/ToolbarButton\";\nimport ToolbarMobileTopBar from \"./subcomponents/ToolbarMobileTopBar/ToolbarMobileTopBar\";\n\nexport type ToolbarProps = {\n  onLinkButtonClick?: (type: InformationModalType) => void;\n  onAirswapButtonClick?: () => void;\n  onMobileCloseButtonClick?: () => void;\n  isHiddenOnMobile?: boolean;\n};\n\nexport const mobileMenuShowHideAnimationDuration = 0.5;\n\nconst Toolbar: FC<ToolbarProps> = ({\n  onLinkButtonClick,\n  onAirswapButtonClick,\n  onMobileCloseButtonClick,\n  isHiddenOnMobile,\n}) => {\n  const { t } = useTranslation();\n  const { width, height } = useWindowSize();\n  const isTabletPortraitUp = useMediaQuery(breakPoints.tabletPortraitUp);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mobileTopBarRef = useRef<HTMLDivElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n\n  const [overflow, setOverflow] = useState(false);\n\n  useEffect(() => {\n    if (\n      containerRef.current &&\n      mobileTopBarRef.current &&\n      scrollContainerRef.current\n    ) {\n      const { scrollHeight, offsetTop } = scrollContainerRef.current;\n      setOverflow(scrollHeight + offsetTop > containerRef.current.offsetHeight);\n    }\n  }, [containerRef, mobileTopBarRef, scrollContainerRef, width, height]);\n\n  const onToolbarButtonClick = (\n    e: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>,\n    type: InformationModalType\n  ) => {\n    onMobileCloseButtonClick && onMobileCloseButtonClick();\n    if (!onLinkButtonClick) {\n      return;\n    }\n\n    // On smaller devices we want the mobile menu to animate out first before routing\n    if (!isTabletPortraitUp) {\n      e.preventDefault();\n      setTimeout(\n        () => onLinkButtonClick(type),\n        mobileMenuShowHideAnimationDuration * 1000\n      );\n    }\n  };\n\n  return (\n    <ToolbarContainer\n      ref={containerRef}\n      $overflow={overflow}\n      $isHiddenOnMobile={isHiddenOnMobile || isTabletPortraitUp}\n    >\n      <ToolbarMobileTopBar\n        toolbarRef={mobileTopBarRef}\n        onAirswapButtonClick={onAirswapButtonClick}\n        onCloseButtonClick={onMobileCloseButtonClick}\n      />\n      <StyledAirswapButton\n        onClick={onAirswapButtonClick}\n        ariaLabel={t(\"common.AirSwap\")}\n        icon=\"airswap\"\n        iconSize={2.5}\n      />\n      <ToolbarButtonsContainer ref={scrollContainerRef} $overflow={overflow}>\n        <ToolbarButton\n          iconName=\"swap-horizontal\"\n          text=\"OTC\"\n          href=\"https://trader.airswap.io/\"\n        />\n        <ToolbarButton\n          iconName=\"bars\"\n          text={t(\"common.stats\")}\n          href=\"https://dune.xyz/agrimony/AirSwap-v2\"\n        />\n        <ToolbarButton\n          iconName=\"vote\"\n          text={t(\"common.vote\")}\n          href=\"https://activate.codefi.network/staking/airswap/governance\"\n        />\n        <ToolbarButton\n          iconName=\"code\"\n          text={t(\"common.build\")}\n          href=\"https://github.com/airswap\"\n        />\n        <ToolbarButton\n          iconName=\"learn\"\n          text={t(\"common.learn\")}\n          href=\"https://about.airswap.io/\"\n        />\n        <ToolbarButton\n          iconName=\"contact-support\"\n          text={t(\"common.join\")}\n          onClick={(e) => {\n            onToolbarButtonClick(e, AppRoutes.join);\n          }}\n          link={AppRoutes.join}\n        />\n      </ToolbarButtonsContainer>\n    </ToolbarContainer>\n  );\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}