{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Source: https://github.com/antonioru/beautiful-react-hooks/blob/master/src/useMediaQuery.ts\nimport { useEffect, useState } from \"react\";\n/**\n * Accepts a media query string then uses the\n * [window.matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia) API to determine if it\n * matches with the current document.<br />\n * It also monitor the document changes to detect when it matches or stops matching the media query.<br />\n * Returns the validity state of the given media query.\n *\n */\n\nconst useMediaQuery = mediaQuery => {\n  _s();\n\n  const [isVerified, setIsVerified] = useState(!!window.matchMedia(mediaQuery).matches);\n  useEffect(() => {\n    const mediaQueryList = window.matchMedia(mediaQuery);\n\n    const documentChangeHandler = () => setIsVerified(!!mediaQueryList.matches);\n\n    try {\n      mediaQueryList.addEventListener(\"change\", documentChangeHandler);\n    } catch (e) {\n      // Safari isn't supporting mediaQueryList.addEventListener\n      mediaQueryList.addListener(documentChangeHandler);\n    }\n\n    documentChangeHandler();\n    return () => {\n      try {\n        mediaQueryList.removeEventListener(\"change\", documentChangeHandler);\n      } catch (e) {\n        // Safari isn't supporting mediaQueryList.removeEventListener\n        mediaQueryList.removeListener(documentChangeHandler);\n      }\n    };\n  }, [mediaQuery]);\n  return isVerified;\n};\n\n_s(useMediaQuery, \"GPfcSGXlSWWXg+rsbza6P+Bvn8A=\");\n\nexport default useMediaQuery;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/helpers/useMediaQuery.ts"],"names":["useEffect","useState","useMediaQuery","mediaQuery","isVerified","setIsVerified","window","matchMedia","matches","mediaQueryList","documentChangeHandler","addEventListener","e","addListener","removeEventListener","removeListener"],"mappings":";;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAIC,UAAD,IAAiC;AAAA;;AACrD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAC1C,CAAC,CAACK,MAAM,CAACC,UAAP,CAAkBJ,UAAlB,EAA8BK,OADU,CAA5C;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,cAAc,GAAGH,MAAM,CAACC,UAAP,CAAkBJ,UAAlB,CAAvB;;AACA,UAAMO,qBAAqB,GAAG,MAAML,aAAa,CAAC,CAAC,CAACI,cAAc,CAACD,OAAlB,CAAjD;;AAEA,QAAI;AACFC,MAAAA,cAAc,CAACE,gBAAf,CAAgC,QAAhC,EAA0CD,qBAA1C;AACD,KAFD,CAEE,OAAOE,CAAP,EAAU;AACV;AACAH,MAAAA,cAAc,CAACI,WAAf,CAA2BH,qBAA3B;AACD;;AAEDA,IAAAA,qBAAqB;AACrB,WAAO,MAAM;AACX,UAAI;AACFD,QAAAA,cAAc,CAACK,mBAAf,CAAmC,QAAnC,EAA6CJ,qBAA7C;AACD,OAFD,CAEE,OAAOE,CAAP,EAAU;AACV;AACAH,QAAAA,cAAc,CAACM,cAAf,CAA8BL,qBAA9B;AACD;AACF,KAPD;AAQD,GApBQ,EAoBN,CAACP,UAAD,CApBM,CAAT;AAsBA,SAAOC,UAAP;AACD,CA5BD;;GAAMF,a;;AA8BN,eAAeA,aAAf","sourcesContent":["// Source: https://github.com/antonioru/beautiful-react-hooks/blob/master/src/useMediaQuery.ts\nimport { useEffect, useState } from \"react\";\n\n/**\n * Accepts a media query string then uses the\n * [window.matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia) API to determine if it\n * matches with the current document.<br />\n * It also monitor the document changes to detect when it matches or stops matching the media query.<br />\n * Returns the validity state of the given media query.\n *\n */\nconst useMediaQuery = (mediaQuery: string): boolean => {\n  const [isVerified, setIsVerified] = useState(\n    !!window.matchMedia(mediaQuery).matches\n  );\n\n  useEffect(() => {\n    const mediaQueryList = window.matchMedia(mediaQuery);\n    const documentChangeHandler = () => setIsVerified(!!mediaQueryList.matches);\n\n    try {\n      mediaQueryList.addEventListener(\"change\", documentChangeHandler);\n    } catch (e) {\n      // Safari isn't supporting mediaQueryList.addEventListener\n      mediaQueryList.addListener(documentChangeHandler);\n    }\n\n    documentChangeHandler();\n    return () => {\n      try {\n        mediaQueryList.removeEventListener(\"change\", documentChangeHandler);\n      } catch (e) {\n        // Safari isn't supporting mediaQueryList.removeEventListener\n        mediaQueryList.removeListener(documentChangeHandler);\n      }\n    };\n  }, [mediaQuery]);\n\n  return isVerified;\n};\n\nexport default useMediaQuery;\n"]},"metadata":{},"sourceType":"module"}