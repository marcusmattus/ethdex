{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpcWebsocket = exports.WebsocketReadyStates = void 0;\n\nconst getParameterNames = require(\"get-parameter-names\");\n\nconst deferred_promise_1 = require(\"./deferred-promise\");\n\nconst jsonrpc_model_1 = require(\"./jsonrpc.model\");\n\nvar WebsocketReadyStates;\n\n(function (WebsocketReadyStates) {\n  WebsocketReadyStates[WebsocketReadyStates[\"CONNECTING\"] = 0] = \"CONNECTING\";\n  WebsocketReadyStates[WebsocketReadyStates[\"OPEN\"] = 1] = \"OPEN\";\n  WebsocketReadyStates[WebsocketReadyStates[\"CLOSING\"] = 2] = \"CLOSING\";\n  WebsocketReadyStates[WebsocketReadyStates[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebsocketReadyStates = exports.WebsocketReadyStates || (exports.WebsocketReadyStates = {}));\n\nlet websocketFactory;\n\nclass JsonRpcWebsocket {\n  constructor(url, requestTimeoutMs, onError) {\n    this.url = url;\n    this.requestTimeoutMs = requestTimeoutMs;\n    this.onError = onError;\n    this.jsonRpcVersion = '2.0';\n    this.requestId = 0;\n    this.pendingRequests = {};\n    this.rpcMethods = {};\n  }\n\n  get state() {\n    return this.websocket ? this.websocket.readyState : WebsocketReadyStates.CLOSED;\n  }\n\n  static setWebSocketFactory(factoryFn) {\n    websocketFactory = factoryFn;\n  }\n\n  async open() {\n    if (this.websocket) {\n      await this.close();\n    }\n\n    return this.createWebsocket();\n  }\n\n  close() {\n    if (this.websocket === undefined) {\n      return Promise.resolve(globalThis.CloseEvent ? new CloseEvent('No websocket was opened', {\n        wasClean: false,\n        code: 1005\n      }) : true);\n    }\n\n    this.websocket.close(1000); // 1000 = normal closure\n\n    this.websocket = undefined;\n    return this.closeDeferredPromise.asPromise();\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  on(methodName, callback) {\n    this.rpcMethods[methodName.toLowerCase()] = callback; // case-insensitive!\n  }\n\n  off(methodName) {\n    delete this.rpcMethods[methodName.toLowerCase()]; // case-insensitive!\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n\n  call(method, params) {\n    if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n      return Promise.reject({\n        code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR,\n        message: 'The websocket is not opened'\n      });\n    }\n\n    const request = {\n      id: this.getRequestId(),\n      jsonrpc: this.jsonRpcVersion,\n      method,\n      params\n    };\n\n    try {\n      this.websocket.send(JSON.stringify(request));\n    } catch (e) {\n      // istanbul ignore next\n      return Promise.reject({\n        code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR,\n        message: `Internal error. ${e}`\n      });\n    }\n\n    return this.createPendingRequest(request);\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n\n  notify(method, params) {\n    if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n      throw new Error('The websocket is not opened');\n    }\n\n    const request = {\n      jsonrpc: this.jsonRpcVersion,\n      method,\n      params\n    };\n\n    try {\n      this.websocket.send(JSON.stringify(request));\n    } catch (e) {\n      // istanbul ignore next\n      throw Error(e);\n    }\n  }\n\n  createWebsocket() {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent for close event codes\n    // this.websocket = new WebSocket(this.url, ['jsonrpc-2.0']);\n    if (websocketFactory) {\n      this.websocket = websocketFactory(this.url);\n    } else {\n      this.websocket = new WebSocket(this.url);\n    }\n\n    const openDeferredPromise = new deferred_promise_1.DeferredPromise();\n    this.closeDeferredPromise = new deferred_promise_1.DeferredPromise();\n\n    this.websocket.onopen = event => {\n      openDeferredPromise.resolve(event);\n    };\n\n    this.websocket.onerror = err => {\n      openDeferredPromise.reject(err);\n    };\n\n    this.websocket.onclose = event => {\n      this.websocket = undefined;\n\n      if (event.code !== 1000) {\n        // 1000 = normal closure\n        const error = {\n          code: event.code,\n          data: event,\n          message: event.reason\n        };\n        this.callOnError(error);\n      }\n\n      this.closeDeferredPromise.resolve(event);\n    };\n\n    this.websocket.onmessage = message => this.handleMessage(message.data);\n\n    return openDeferredPromise.asPromise();\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  respondOk(id, result) {\n    this.respond(id, result);\n  }\n\n  respondError(id, error) {\n    this.respond(id, undefined, error);\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  respond(id, result, error) {\n    // istanbul ignore if\n    if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n      throw new Error('The websocket is not opened');\n    } // istanbul ignore if\n\n\n    if (!!result && !!error) {\n      throw new Error('Invalid response. Either result or error must be set, but not both');\n    }\n\n    const response = {\n      jsonrpc: this.jsonRpcVersion,\n      error: error,\n      id: id,\n      result: result\n    };\n\n    try {\n      this.websocket.send(JSON.stringify(response));\n    } catch (e) {\n      // istanbul ignore next\n      throw Error(e);\n    }\n  }\n\n  handleMessage(msg) {\n    let data = null;\n\n    try {\n      data = JSON.parse(msg);\n    } catch (e)\n    /* istanbul ignore next */\n    {\n      this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.PARSE_ERROR, `Invalid JSON was received. ${e}`);\n      return;\n    }\n\n    const isResponse = !!data && this.hasProperty(data, 'id') && (this.hasProperty(data, 'result') || this.hasProperty(data, 'error'));\n    const isRequest = !!data && this.hasProperty(data, 'method');\n    const requestId = isRequest && data.id ? data.id : undefined;\n\n    if (!data.jsonrpc || data.jsonrpc !== this.jsonRpcVersion) {\n      this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_REQUEST, `Invalid JSON RPC protocol version. Expecting ${this.jsonRpcVersion}, but got ${data.jsonrpc}`, requestId);\n      return;\n    }\n\n    if (isResponse) {\n      this.handleResponse(data);\n    } else if (isRequest) {\n      this.handleRequest(data);\n    } else {\n      this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_REQUEST, `Received unknown data: ${JSON.stringify(data)}`, requestId);\n    }\n  }\n\n  handleRequest(request) {\n    const method = this.rpcMethods[request.method.toLowerCase()]; // case-insensitive!\n\n    if (!method) {\n      this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.METHOD_NOT_FOUND, `Method '${request.method}' was not found`, request.id);\n      return;\n    }\n\n    let requestParams = [];\n\n    try {\n      requestParams = this.getRequestParams(method, request);\n    } catch (error) {\n      this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_PARAMS, error.message, request.id);\n      return;\n    }\n\n    try {\n      const result = method(...requestParams);\n\n      if (request.id) {\n        this.respondOk(request.id, result);\n      }\n    } catch (e) {\n      if (request.id) {\n        this.respondError(request.id, e);\n      }\n    }\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  getRequestParams(method, request) {\n    let requestParams = [];\n\n    if (request.params) {\n      if (request.params instanceof Array) {\n        if (method.length !== request.params.length) {\n          throw new Error(`Invalid parameters. Method '${request.method}' expects ${method.length} parameters, but got ${request.params.length}`);\n        }\n\n        requestParams = request.params;\n      } else if (request.params instanceof Object) {\n        const parameterNames = getParameterNames(method);\n\n        if (method.length !== Object.keys(request.params).length) {\n          throw new Error(`Invalid parameters. Method '${request.method}' expects parameters [${parameterNames}], but got [${Object.keys(request.params)}]`);\n        }\n\n        parameterNames.forEach(paramName => {\n          const paramValue = request.params[paramName];\n\n          if (paramValue === undefined) {\n            throw new Error(`Invalid parameters. Method '${request.method}' expects parameters [${parameterNames}], but got [${Object.keys(request.params)}]`);\n          }\n\n          requestParams.push(paramValue);\n        });\n      } else {\n        throw new Error(`Invalid parameters. Expected array or object, but got ${typeof request.params}`);\n      }\n    }\n\n    return requestParams;\n  }\n\n  handleResponse(response) {\n    const activeRequest = this.pendingRequests[response.id];\n\n    if (activeRequest === undefined) {\n      this.callOnError({\n        code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR,\n        message: `Received a response with id ${response.id}, which does not match any requests made by this client`\n      });\n      return;\n    }\n\n    clearTimeout(activeRequest.timeout);\n\n    if (this.hasProperty(response, 'result') && this.hasProperty(response, 'error')) {\n      const errorResponse = {\n        error: {\n          code: jsonrpc_model_1.JsonRpcErrorCodes.INVALID_RESPONSE,\n          message: `Invalid response. Either result or error must be set, but not both. ${JSON.stringify(response)}`\n        },\n        id: activeRequest.request.id,\n        jsonrpc: this.jsonRpcVersion\n      };\n      activeRequest.response.reject(errorResponse);\n      return;\n    }\n\n    if (this.hasProperty(response, 'error')) {\n      activeRequest.response.reject(response);\n    } else {\n      activeRequest.response.resolve(response);\n    }\n  }\n\n  handleError(code, message, requestId) {\n    const error = {\n      code,\n      message\n    };\n    this.callOnError(error);\n\n    if (requestId) {\n      this.respondError(requestId, error);\n    }\n  }\n\n  createPendingRequest(request) {\n    const response = new deferred_promise_1.DeferredPromise();\n    this.pendingRequests[request.id] = {\n      request,\n      response,\n      timeout: this.setupRequestTimeout(request.id)\n    };\n    return response.asPromise();\n  }\n\n  setupRequestTimeout(requestId) {\n    return setTimeout(() => {\n      const activeRequest = this.pendingRequests[requestId]; // istanbul ignore if\n\n      if (activeRequest === undefined) {\n        return;\n      }\n\n      const response = {\n        error: {\n          code: jsonrpc_model_1.JsonRpcErrorCodes.REQUEST_TIMEOUT,\n          message: `Request ${activeRequest.request.id} exceeded the maximum time of ${this.requestTimeoutMs}ms and was aborted`\n        },\n        id: activeRequest.request.id,\n        jsonrpc: this.jsonRpcVersion\n      };\n      delete this.pendingRequests[requestId];\n      activeRequest.response.reject(response);\n    }, this.requestTimeoutMs);\n  }\n\n  callOnError(error) {\n    if (this.onError !== undefined) {\n      this.onError(error);\n    }\n  }\n\n  getRequestId() {\n    return ++this.requestId;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  hasProperty(object, propertyName) {\n    return !!Object.prototype.hasOwnProperty.call(object, propertyName);\n  }\n\n}\n\nexports.JsonRpcWebsocket = JsonRpcWebsocket;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/node_modules/@airswap/jsonrpc-client-websocket/lib/jsonrpc-websocket.js"],"names":["Object","defineProperty","exports","value","JsonRpcWebsocket","WebsocketReadyStates","getParameterNames","require","deferred_promise_1","jsonrpc_model_1","websocketFactory","constructor","url","requestTimeoutMs","onError","jsonRpcVersion","requestId","pendingRequests","rpcMethods","state","websocket","readyState","CLOSED","setWebSocketFactory","factoryFn","open","close","createWebsocket","undefined","Promise","resolve","globalThis","CloseEvent","wasClean","code","closeDeferredPromise","asPromise","on","methodName","callback","toLowerCase","off","call","method","params","OPEN","reject","JsonRpcErrorCodes","INTERNAL_ERROR","message","request","id","getRequestId","jsonrpc","send","JSON","stringify","e","createPendingRequest","notify","Error","WebSocket","openDeferredPromise","DeferredPromise","onopen","event","onerror","err","onclose","error","data","reason","callOnError","onmessage","handleMessage","respondOk","result","respond","respondError","response","msg","parse","handleError","PARSE_ERROR","isResponse","hasProperty","isRequest","INVALID_REQUEST","handleResponse","handleRequest","METHOD_NOT_FOUND","requestParams","getRequestParams","INVALID_PARAMS","Array","length","parameterNames","keys","forEach","paramName","paramValue","push","activeRequest","clearTimeout","timeout","errorResponse","INVALID_RESPONSE","setupRequestTimeout","setTimeout","REQUEST_TIMEOUT","object","propertyName","prototype","hasOwnProperty"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcWebsocket = exports.WebsocketReadyStates = void 0;\nconst getParameterNames = require(\"get-parameter-names\");\nconst deferred_promise_1 = require(\"./deferred-promise\");\nconst jsonrpc_model_1 = require(\"./jsonrpc.model\");\nvar WebsocketReadyStates;\n(function (WebsocketReadyStates) {\n    WebsocketReadyStates[WebsocketReadyStates[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    WebsocketReadyStates[WebsocketReadyStates[\"OPEN\"] = 1] = \"OPEN\";\n    WebsocketReadyStates[WebsocketReadyStates[\"CLOSING\"] = 2] = \"CLOSING\";\n    WebsocketReadyStates[WebsocketReadyStates[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebsocketReadyStates = exports.WebsocketReadyStates || (exports.WebsocketReadyStates = {}));\nlet websocketFactory;\nclass JsonRpcWebsocket {\n    constructor(url, requestTimeoutMs, onError) {\n        this.url = url;\n        this.requestTimeoutMs = requestTimeoutMs;\n        this.onError = onError;\n        this.jsonRpcVersion = '2.0';\n        this.requestId = 0;\n        this.pendingRequests = {};\n        this.rpcMethods = {};\n    }\n    get state() {\n        return this.websocket ? this.websocket.readyState : WebsocketReadyStates.CLOSED;\n    }\n    static setWebSocketFactory(factoryFn) {\n        websocketFactory = factoryFn;\n    }\n    async open() {\n        if (this.websocket) {\n            await this.close();\n        }\n        return this.createWebsocket();\n    }\n    close() {\n        if (this.websocket === undefined) {\n            return Promise.resolve(globalThis.CloseEvent ? new CloseEvent('No websocket was opened', { wasClean: false, code: 1005 }) : true);\n        }\n        this.websocket.close(1000); // 1000 = normal closure\n        this.websocket = undefined;\n        return this.closeDeferredPromise.asPromise();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(methodName, callback) {\n        this.rpcMethods[methodName.toLowerCase()] = callback; // case-insensitive!\n    }\n    off(methodName) {\n        delete this.rpcMethods[methodName.toLowerCase()]; // case-insensitive!\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    call(method, params) {\n        if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n            return Promise.reject({ code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR, message: 'The websocket is not opened' });\n        }\n        const request = {\n            id: this.getRequestId(),\n            jsonrpc: this.jsonRpcVersion,\n            method,\n            params,\n        };\n        try {\n            this.websocket.send(JSON.stringify(request));\n        }\n        catch (e) {\n            // istanbul ignore next\n            return Promise.reject({ code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR, message: `Internal error. ${e}` });\n        }\n        return this.createPendingRequest(request);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    notify(method, params) {\n        if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n            throw new Error('The websocket is not opened');\n        }\n        const request = {\n            jsonrpc: this.jsonRpcVersion,\n            method,\n            params,\n        };\n        try {\n            this.websocket.send(JSON.stringify(request));\n        }\n        catch (e) {\n            // istanbul ignore next\n            throw Error(e);\n        }\n    }\n    createWebsocket() {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent for close event codes\n        // this.websocket = new WebSocket(this.url, ['jsonrpc-2.0']);\n        if (websocketFactory) {\n            this.websocket = websocketFactory(this.url);\n        }\n        else {\n            this.websocket = new WebSocket(this.url);\n        }\n        const openDeferredPromise = new deferred_promise_1.DeferredPromise();\n        this.closeDeferredPromise = new deferred_promise_1.DeferredPromise();\n        this.websocket.onopen = (event) => {\n            openDeferredPromise.resolve(event);\n        };\n        this.websocket.onerror = (err) => {\n            openDeferredPromise.reject(err);\n        };\n        this.websocket.onclose = (event) => {\n            this.websocket = undefined;\n            if (event.code !== 1000) {\n                // 1000 = normal closure\n                const error = {\n                    code: event.code,\n                    data: event,\n                    message: event.reason,\n                };\n                this.callOnError(error);\n            }\n            this.closeDeferredPromise.resolve(event);\n        };\n        this.websocket.onmessage = (message) => this.handleMessage(message.data);\n        return openDeferredPromise.asPromise();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    respondOk(id, result) {\n        this.respond(id, result);\n    }\n    respondError(id, error) {\n        this.respond(id, undefined, error);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    respond(id, result, error) {\n        // istanbul ignore if\n        if (!this.websocket || this.state !== WebsocketReadyStates.OPEN) {\n            throw new Error('The websocket is not opened');\n        }\n        // istanbul ignore if\n        if (!!result && !!error) {\n            throw new Error('Invalid response. Either result or error must be set, but not both');\n        }\n        const response = {\n            jsonrpc: this.jsonRpcVersion,\n            error: error,\n            id: id,\n            result: result,\n        };\n        try {\n            this.websocket.send(JSON.stringify(response));\n        }\n        catch (e) {\n            // istanbul ignore next\n            throw Error(e);\n        }\n    }\n    handleMessage(msg) {\n        let data = null;\n        try {\n            data = JSON.parse(msg);\n        }\n        catch (e) /* istanbul ignore next */ {\n            this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.PARSE_ERROR, `Invalid JSON was received. ${e}`);\n            return;\n        }\n        const isResponse = !!data && this.hasProperty(data, 'id') && (this.hasProperty(data, 'result') || this.hasProperty(data, 'error'));\n        const isRequest = !!data && this.hasProperty(data, 'method');\n        const requestId = isRequest && data.id ? data.id : undefined;\n        if (!data.jsonrpc || data.jsonrpc !== this.jsonRpcVersion) {\n            this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_REQUEST, `Invalid JSON RPC protocol version. Expecting ${this.jsonRpcVersion}, but got ${data.jsonrpc}`, requestId);\n            return;\n        }\n        if (isResponse) {\n            this.handleResponse(data);\n        }\n        else if (isRequest) {\n            this.handleRequest(data);\n        }\n        else {\n            this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_REQUEST, `Received unknown data: ${JSON.stringify(data)}`, requestId);\n        }\n    }\n    handleRequest(request) {\n        const method = this.rpcMethods[request.method.toLowerCase()]; // case-insensitive!\n        if (!method) {\n            this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.METHOD_NOT_FOUND, `Method '${request.method}' was not found`, request.id);\n            return;\n        }\n        let requestParams = [];\n        try {\n            requestParams = this.getRequestParams(method, request);\n        }\n        catch (error) {\n            this.handleError(jsonrpc_model_1.JsonRpcErrorCodes.INVALID_PARAMS, error.message, request.id);\n            return;\n        }\n        try {\n            const result = method(...requestParams);\n            if (request.id) {\n                this.respondOk(request.id, result);\n            }\n        }\n        catch (e) {\n            if (request.id) {\n                this.respondError(request.id, e);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getRequestParams(method, request) {\n        let requestParams = [];\n        if (request.params) {\n            if (request.params instanceof Array) {\n                if (method.length !== request.params.length) {\n                    throw new Error(`Invalid parameters. Method '${request.method}' expects ${method.length} parameters, but got ${request.params.length}`);\n                }\n                requestParams = request.params;\n            }\n            else if (request.params instanceof Object) {\n                const parameterNames = getParameterNames(method);\n                if (method.length !== Object.keys(request.params).length) {\n                    throw new Error(`Invalid parameters. Method '${request.method}' expects parameters [${parameterNames}], but got [${Object.keys(request.params)}]`);\n                }\n                parameterNames.forEach((paramName) => {\n                    const paramValue = request.params[paramName];\n                    if (paramValue === undefined) {\n                        throw new Error(`Invalid parameters. Method '${request.method}' expects parameters [${parameterNames}], but got [${Object.keys(request.params)}]`);\n                    }\n                    requestParams.push(paramValue);\n                });\n            }\n            else {\n                throw new Error(`Invalid parameters. Expected array or object, but got ${typeof request.params}`);\n            }\n        }\n        return requestParams;\n    }\n    handleResponse(response) {\n        const activeRequest = this.pendingRequests[response.id];\n        if (activeRequest === undefined) {\n            this.callOnError({\n                code: jsonrpc_model_1.JsonRpcErrorCodes.INTERNAL_ERROR,\n                message: `Received a response with id ${response.id}, which does not match any requests made by this client`,\n            });\n            return;\n        }\n        clearTimeout(activeRequest.timeout);\n        if (this.hasProperty(response, 'result') && this.hasProperty(response, 'error')) {\n            const errorResponse = {\n                error: {\n                    code: jsonrpc_model_1.JsonRpcErrorCodes.INVALID_RESPONSE,\n                    message: `Invalid response. Either result or error must be set, but not both. ${JSON.stringify(response)}`,\n                },\n                id: activeRequest.request.id,\n                jsonrpc: this.jsonRpcVersion,\n            };\n            activeRequest.response.reject(errorResponse);\n            return;\n        }\n        if (this.hasProperty(response, 'error')) {\n            activeRequest.response.reject(response);\n        }\n        else {\n            activeRequest.response.resolve(response);\n        }\n    }\n    handleError(code, message, requestId) {\n        const error = { code, message };\n        this.callOnError(error);\n        if (requestId) {\n            this.respondError(requestId, error);\n        }\n    }\n    createPendingRequest(request) {\n        const response = new deferred_promise_1.DeferredPromise();\n        this.pendingRequests[request.id] = {\n            request,\n            response,\n            timeout: this.setupRequestTimeout(request.id),\n        };\n        return response.asPromise();\n    }\n    setupRequestTimeout(requestId) {\n        return setTimeout(() => {\n            const activeRequest = this.pendingRequests[requestId];\n            // istanbul ignore if\n            if (activeRequest === undefined) {\n                return;\n            }\n            const response = {\n                error: {\n                    code: jsonrpc_model_1.JsonRpcErrorCodes.REQUEST_TIMEOUT,\n                    message: `Request ${activeRequest.request.id} exceeded the maximum time of ${this.requestTimeoutMs}ms and was aborted`,\n                },\n                id: activeRequest.request.id,\n                jsonrpc: this.jsonRpcVersion,\n            };\n            delete this.pendingRequests[requestId];\n            activeRequest.response.reject(response);\n        }, this.requestTimeoutMs);\n    }\n    callOnError(error) {\n        if (this.onError !== undefined) {\n            this.onError(error);\n        }\n    }\n    getRequestId() {\n        return ++this.requestId;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    hasProperty(object, propertyName) {\n        return !!Object.prototype.hasOwnProperty.call(object, propertyName);\n    }\n}\nexports.JsonRpcWebsocket = JsonRpcWebsocket;\n"]},"metadata":{},"sourceType":"script"}