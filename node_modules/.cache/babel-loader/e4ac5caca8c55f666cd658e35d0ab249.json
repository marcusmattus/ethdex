{"ast":null,"code":"import { initReactI18next } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpBackend from \"i18next-http-backend\";\ni18n // load translation using http -> see /public/locales\n.use(HttpBackend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  fallbackLng: \"en\",\n  load: \"languageOnly\",\n  debug: process.env.NODE_ENV !== \"production\",\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  react: {\n    useSuspense: true\n  },\n  backend: {\n    loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/translation.json\"\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/i18n/i18n.ts"],"names":["initReactI18next","i18n","LanguageDetector","HttpBackend","use","init","fallbackLng","load","debug","process","env","NODE_ENV","interpolation","escapeValue","react","useSuspense","backend","loadPath","PUBLIC_URL"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEAF,IAAI,CACF;AADE,CAEDG,GAFH,CAEOD,WAFP,EAGE;AACA;AAJF,CAKGC,GALH,CAKOF,gBALP,EAME;AANF,CAOGE,GAPH,CAOOJ,gBAPP,EASE;AACA;AAVF,CAWGK,IAXH,CAWQ;AACJC,EAAAA,WAAW,EAAE,IADT;AAEJC,EAAAA,IAAI,EAAE,cAFF;AAGJC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAH5B;AAIJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GAJX;AAOJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GAPH;AAUJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAER,OAAO,CAACC,GAAR,CAAYQ,UAAZ,GAAyB;AAD5B;AAVL,CAXR;AA0BA,eAAejB,IAAf","sourcesContent":["import { initReactI18next } from \"react-i18next\";\n\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpBackend from \"i18next-http-backend\";\n\ni18n\n  // load translation using http -> see /public/locales\n  .use(HttpBackend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    load: \"languageOnly\",\n    debug: process.env.NODE_ENV !== \"production\",\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    react: {\n      useSuspense: true,\n    },\n    backend: {\n      loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/translation.json\",\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}