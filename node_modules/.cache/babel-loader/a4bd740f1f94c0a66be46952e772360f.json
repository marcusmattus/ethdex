{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { balancesReducer, allowancesReducer } from \"../features/balances/balancesSlice\";\nimport gasCostReducer from \"../features/gasCost/gasCostSlice\";\nimport metadataReducer from \"../features/metadata/metadataSlice\";\nimport { subscribeToSavedTokenChangesForLocalStoragePersisting } from \"../features/metadata/metadataSubscriber\";\nimport ordersReducer from \"../features/orders/ordersSlice\";\nimport pricingReducer from \"../features/pricing/pricingSlice\";\nimport registryReducer from \"../features/registry/registrySlice\";\nimport tradeTermsReducer from \"../features/tradeTerms/tradeTermsSlice\";\nimport transactionsReducer from \"../features/transactions/transactionsSlice\";\nimport userSettingsReducer from \"../features/userSettings/userSettingsSlice\";\nimport walletReducer from \"../features/wallet/walletSlice\";\nexport const store = configureStore({\n  reducer: {\n    allowances: allowancesReducer,\n    transactions: transactionsReducer,\n    balances: balancesReducer,\n    metadata: metadataReducer,\n    tradeTerms: tradeTermsReducer,\n    orders: ordersReducer,\n    pricing: pricingReducer,\n    gasCost: gasCostReducer,\n    wallet: walletReducer,\n    registry: registryReducer,\n    userSettings: userSettingsReducer\n  }\n});\nsubscribeToSavedTokenChangesForLocalStoragePersisting();","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/app/store.ts"],"names":["configureStore","balancesReducer","allowancesReducer","gasCostReducer","metadataReducer","subscribeToSavedTokenChangesForLocalStoragePersisting","ordersReducer","pricingReducer","registryReducer","tradeTermsReducer","transactionsReducer","userSettingsReducer","walletReducer","store","reducer","allowances","transactions","balances","metadata","tradeTerms","orders","pricing","gasCost","wallet","registry","userSettings"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AAEA,SACEC,eADF,EAEEC,iBAFF,QAGO,oCAHP;AAIA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,qDAAT,QAAsE,yCAAtE;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,OAAO,MAAMC,KAAK,GAAGb,cAAc,CAAC;AAClCc,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAEb,iBADL;AAEPc,IAAAA,YAAY,EAAEN,mBAFP;AAGPO,IAAAA,QAAQ,EAAEhB,eAHH;AAIPiB,IAAAA,QAAQ,EAAEd,eAJH;AAKPe,IAAAA,UAAU,EAAEV,iBALL;AAMPW,IAAAA,MAAM,EAAEd,aAND;AAOPe,IAAAA,OAAO,EAAEd,cAPF;AAQPe,IAAAA,OAAO,EAAEnB,cARF;AASPoB,IAAAA,MAAM,EAAEX,aATD;AAUPY,IAAAA,QAAQ,EAAEhB,eAVH;AAWPiB,IAAAA,YAAY,EAAEd;AAXP;AADyB,CAAD,CAA5B;AAgBPN,qDAAqD","sourcesContent":["import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nimport {\n  balancesReducer,\n  allowancesReducer,\n} from \"../features/balances/balancesSlice\";\nimport gasCostReducer from \"../features/gasCost/gasCostSlice\";\nimport metadataReducer from \"../features/metadata/metadataSlice\";\nimport { subscribeToSavedTokenChangesForLocalStoragePersisting } from \"../features/metadata/metadataSubscriber\";\nimport ordersReducer from \"../features/orders/ordersSlice\";\nimport pricingReducer from \"../features/pricing/pricingSlice\";\nimport registryReducer from \"../features/registry/registrySlice\";\nimport tradeTermsReducer from \"../features/tradeTerms/tradeTermsSlice\";\nimport transactionsReducer from \"../features/transactions/transactionsSlice\";\nimport userSettingsReducer from \"../features/userSettings/userSettingsSlice\";\nimport walletReducer from \"../features/wallet/walletSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    allowances: allowancesReducer,\n    transactions: transactionsReducer,\n    balances: balancesReducer,\n    metadata: metadataReducer,\n    tradeTerms: tradeTermsReducer,\n    orders: ordersReducer,\n    pricing: pricingReducer,\n    gasCost: gasCostReducer,\n    wallet: walletReducer,\n    registry: registryReducer,\n    userSettings: userSettingsReducer,\n  },\n});\n\nsubscribeToSavedTokenChangesForLocalStoragePersisting();\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"]},"metadata":{},"sourceType":"module"}