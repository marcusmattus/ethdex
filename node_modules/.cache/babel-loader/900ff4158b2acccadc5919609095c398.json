{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  connected: false,\n  address: null,\n  chainId: null,\n  providerName: null\n};\nconst walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    setWalletConnected: (state, action) => {\n      state.connected = true;\n      state.address = action.payload.address;\n      state.chainId = action.payload.chainId;\n    },\n    setWalletDisconnected: () => initialState,\n    setActiveProvider: (state, action) => {\n      state.providerName = action.payload;\n    }\n  }\n});\nexport const selectWallet = state => state.wallet;\nexport const {\n  setWalletConnected,\n  setWalletDisconnected,\n  setActiveProvider\n} = walletSlice.actions;\nexport default walletSlice.reducer;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/airswap-web/src/features/wallet/walletSlice.ts"],"names":["createSlice","initialState","connected","address","chainId","providerName","walletSlice","name","reducers","setWalletConnected","state","action","payload","setWalletDisconnected","setActiveProvider","selectWallet","wallet","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAWA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,SAAS,EAAE,KADqB;AAEhCC,EAAAA,OAAO,EAAE,IAFuB;AAGhCC,EAAAA,OAAO,EAAE,IAHuB;AAIhCC,EAAAA,YAAY,EAAE;AAJkB,CAAlC;AAOA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,EAAE,CAClBC,KADkB,EAElBC,MAFkB,KAGf;AACHD,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACAQ,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAP,CAAeT,OAA/B;AACAO,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeR,OAA/B;AACD,KARO;AASRS,IAAAA,qBAAqB,EAAE,MAAMZ,YATrB;AAURa,IAAAA,iBAAiB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA0C;AAC3DD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD;AAZO;AAHoB,CAAD,CAA/B;AAmBA,OAAO,MAAMG,YAAY,GAAIL,KAAD,IAAsBA,KAAK,CAACM,MAAjD;AAEP,OAAO,MAAM;AACXP,EAAAA,kBADW;AAEXI,EAAAA,qBAFW;AAGXC,EAAAA;AAHW,IAITR,WAAW,CAACW,OAJT;AAMP,eAAeX,WAAW,CAACY,OAA3B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\n\nexport interface WalletState {\n  connected: boolean;\n  address: string | null;\n  chainId: number | null;\n  providerName: string | null;\n}\n\nconst initialState: WalletState = {\n  connected: false,\n  address: null,\n  chainId: null,\n  providerName: null,\n};\n\nconst walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    setWalletConnected: (\n      state,\n      action: PayloadAction<{ address: string; chainId: number }>\n    ) => {\n      state.connected = true;\n      state.address = action.payload.address;\n      state.chainId = action.payload.chainId;\n    },\n    setWalletDisconnected: () => initialState,\n    setActiveProvider: (state, action: PayloadAction<string>) => {\n      state.providerName = action.payload;\n    },\n  },\n});\n\nexport const selectWallet = (state: RootState) => state.wallet;\n\nexport const {\n  setWalletConnected,\n  setWalletDisconnected,\n  setActiveProvider,\n} = walletSlice.actions;\n\nexport default walletSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}