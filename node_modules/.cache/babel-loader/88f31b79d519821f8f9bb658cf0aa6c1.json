{"ast":null,"code":"import { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\nimport convertHexToRGBA from \"../../../../helpers/transformHexToRgba\";\n\nconst Border = _styled.div.withConfig({\n  displayName: \"TokenSelectFocusBorderstyles__Border\",\n  componentId: \"sc-1elb0kr-0\"\n})([\"transition:opacity ease-out 0.3s;display:block;position:absolute;opacity:0;\"]);\n\nexport const BorderRight = _styled(Border).withConfig({\n  displayName: \"TokenSelectFocusBorderstyles__BorderRight\",\n  componentId: \"sc-1elb0kr-1\"\n})([\"top:0;right:\", \";left:\", \";width:1px;height:100%;background:\", \";\"], props => props.position === \"right\" ? 0 : \"auto\", props => props.position === \"left\" ? 0 : \"auto\", props => props.theme.colors.primary);\nexport const BorderHorizontal = _styled(Border).withConfig({\n  displayName: \"TokenSelectFocusBorderstyles__BorderHorizontal\",\n  componentId: \"sc-1elb0kr-2\"\n})([\"width:50%;height:1px;background:linear-gradient( \", \",\", \" 0%,\", \" 100% );\"], props => props.position === \"left\" ? \"to left\" : \"to right\", props => convertHexToRGBA(props.theme.colors.primary, 0), props => convertHexToRGBA(props.theme.colors.primary, 1));\nexport const BorderTop = _styled(BorderHorizontal).withConfig({\n  displayName: \"TokenSelectFocusBorderstyles__BorderTop\",\n  componentId: \"sc-1elb0kr-3\"\n})([\"top:0;right:\", \";left:\", \";\"], props => props.position === \"right\" ? 0 : \"auto\", props => props.position === \"left\" ? 0 : \"auto\");\nexport const BorderBottom = _styled(BorderHorizontal).withConfig({\n  displayName: \"TokenSelectFocusBorderstyles__BorderBottom\",\n  componentId: \"sc-1elb0kr-4\"\n})([\"bottom:0;right:\", \";left:\", \";\"], props => props.position === \"right\" ? 0 : \"auto\", props => props.position === \"left\" ? 0 : \"auto\");\nexport const GlobalStyle = _createGlobalStyle`\n  input, button {\n    &:focus, &:hover {\n      & ~ ${Border} {\n        opacity: 1;\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/TokenSelect/subcomponents/TokenSelectFocusBorder/TokenSelectFocusBorder.styles.tsx"],"names":["convertHexToRGBA","Border","styled","div","BorderRight","props","position","theme","colors","primary","BorderHorizontal","BorderTop","BorderBottom","GlobalStyle","createGlobalStyle"],"mappings":";;AAEA,OAAOA,gBAAP,MAA6B,wCAA7B;;AAMA,MAAMC,MAAM,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,mFAAZ;;AAOA,OAAO,MAAMC,WAAW,GAAGF,OAAM,CAACD,MAAD,CAAT;AAAA;AAAA;AAAA,0EAEZI,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,OAAnB,GAA6B,CAA7B,GAAiC,MAFhC,EAGbD,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,MAAnB,GAA4B,CAA5B,GAAgC,MAH9B,EAMPD,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,OANtB,CAAjB;AASP,OAAO,MAAMC,gBAAgB,GAAGR,OAAM,CAACD,MAAD,CAAT;AAAA;AAAA;AAAA,mFAItBI,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,MAAnB,GAA4B,SAA5B,GAAwC,UAJ7B,EAKtBD,KAAD,IAAWL,gBAAgB,CAACK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,OAApB,EAA6B,CAA7B,CALJ,EAMtBJ,KAAD,IAAWL,gBAAgB,CAACK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,OAApB,EAA6B,CAA7B,CANJ,CAAtB;AAUP,OAAO,MAAME,SAAS,GAAGT,OAAM,CAACQ,gBAAD,CAAT;AAAA;AAAA;AAAA,oCAEVL,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,OAAnB,GAA6B,CAA7B,GAAiC,MAFlC,EAGXD,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,MAAnB,GAA4B,CAA5B,GAAgC,MAHhC,CAAf;AAMP,OAAO,MAAMM,YAAY,GAAGV,OAAM,CAACQ,gBAAD,CAAT;AAAA;AAAA;AAAA,uCAEbL,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,OAAnB,GAA6B,CAA7B,GAAiC,MAF/B,EAGdD,KAAD,IAAYA,KAAK,CAACC,QAAN,KAAmB,MAAnB,GAA4B,CAA5B,GAAgC,MAH7B,CAAlB;AAMP,OAAO,MAAMO,WAAW,GAAGC,kBAAkB;AAC7C;AACA;AACA,YAAYb,MAAO;AACnB;AACA;AACA;AACA;AACA,CARO","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components/macro\";\n\nimport convertHexToRGBA from \"../../../../helpers/transformHexToRgba\";\n\ntype BorderType = {\n  position: \"left\" | \"right\";\n};\n\nconst Border = styled.div<BorderType>`\n  transition: opacity ease-out 0.3s;\n  display: block;\n  position: absolute;\n  opacity: 0;\n`;\n\nexport const BorderRight = styled(Border)`\n  top: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n  width: 1px;\n  height: 100%;\n  background: ${(props) => props.theme.colors.primary};\n`;\n\nexport const BorderHorizontal = styled(Border)`\n  width: 50%;\n  height: 1px;\n  background: linear-gradient(\n    ${(props) => (props.position === \"left\" ? \"to left\" : \"to right\")},\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 0)} 0%,\n    ${(props) => convertHexToRGBA(props.theme.colors.primary, 1)} 100%\n  );\n`;\n\nexport const BorderTop = styled(BorderHorizontal)`\n  top: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n`;\n\nexport const BorderBottom = styled(BorderHorizontal)`\n  bottom: 0;\n  right: ${(props) => (props.position === \"right\" ? 0 : \"auto\")};\n  left: ${(props) => (props.position === \"left\" ? 0 : \"auto\")};\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  input, button {\n    &:focus, &:hover {\n      & ~ ${Border} {\n        opacity: 1;\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}