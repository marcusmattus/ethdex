{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/Toolbar/subcomponents/ToolbarButton/ToolbarButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useAppRouteParams from \"../../../../hooks/useAppRouteParams\";\nimport Icon from \"../../../Icon/Icon\";\nimport { Text, ToolBarAnchorContainer, ToolbarButtonContainer, ToolBarLinkContainer } from \"./ToolbarButton.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToolbarButton = ({\n  text,\n  iconName,\n  href,\n  link,\n  onClick\n}) => {\n  _s();\n\n  const appRouteParams = useAppRouteParams();\n\n  const renderInner = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: iconName,\n        iconSize: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  if (link) {\n    return /*#__PURE__*/_jsxDEV(ToolBarLinkContainer, {\n      onClick: onClick,\n      to: `${appRouteParams.justifiedBaseUrl}/${link}`,\n      children: renderInner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (href) {\n    return /*#__PURE__*/_jsxDEV(ToolBarAnchorContainer, {\n      onClick: onClick,\n      href: href,\n      target: \"_blank\",\n      children: renderInner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ToolbarButtonContainer, {\n    onClick: onClick,\n    children: renderInner()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToolbarButton, \"oCV11Uz/7WzJ3TjT6yTjXvg8ExY=\", false, function () {\n  return [useAppRouteParams];\n});\n\n_c = ToolbarButton;\nexport default ToolbarButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolbarButton\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/Toolbar/subcomponents/ToolbarButton/ToolbarButton.tsx"],"names":["React","useAppRouteParams","Icon","Text","ToolBarAnchorContainer","ToolbarButtonContainer","ToolBarLinkContainer","ToolbarButton","text","iconName","href","link","onClick","appRouteParams","renderInner","justifiedBaseUrl"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,iBAAP,MAA8B,qCAA9B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SACEC,IADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,oBAJF,QAKO,wBALP;;;;AAiBA,MAAMC,aAAqC,GAAG,CAAC;AAC7CC,EAAAA,IAD6C;AAE7CC,EAAAA,QAF6C;AAG7CC,EAAAA,IAH6C;AAI7CC,EAAAA,IAJ6C;AAK7CC,EAAAA;AAL6C,CAAD,KAMxC;AAAA;;AACJ,QAAMC,cAAc,GAAGZ,iBAAiB,EAAxC;;AAEA,QAAMa,WAAW,GAAG,MAAM;AACxB,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,QAAZ;AAAsB,QAAA,QAAQ,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GAPD;;AASA,MAAIG,IAAJ,EAAU;AACR,wBACE,QAAC,oBAAD;AACE,MAAA,OAAO,EAAEC,OADX;AAEE,MAAA,EAAE,EAAG,GAAEC,cAAc,CAACE,gBAAiB,IAAGJ,IAAK,EAFjD;AAAA,gBAIGG,WAAW;AAJd;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAIJ,IAAJ,EAAU;AACR,wBACE,QAAC,sBAAD;AAAwB,MAAA,OAAO,EAAEE,OAAjC;AAA0C,MAAA,IAAI,EAAEF,IAAhD;AAAsD,MAAA,MAAM,EAAC,QAA7D;AAAA,gBACGI,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,sBAAD;AAAwB,IAAA,OAAO,EAAEF,OAAjC;AAAA,cACGE,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CD;;GAAMP,a;UAOmBN,iB;;;KAPnBM,a;AA4CN,eAAeA,aAAf","sourcesContent":["import React, { FC } from \"react\";\n\nimport useAppRouteParams from \"../../../../hooks/useAppRouteParams\";\nimport { AppRoutes } from \"../../../../routes\";\nimport Icon from \"../../../Icon/Icon\";\nimport {\n  Text,\n  ToolBarAnchorContainer,\n  ToolbarButtonContainer,\n  ToolBarLinkContainer,\n} from \"./ToolbarButton.styles\";\n\ntype ToolbarButtonProps = {\n  text: string;\n  iconName: string;\n  href?: string;\n  link?: AppRoutes;\n  onClick?: (\n    e: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>\n  ) => void;\n};\n\nconst ToolbarButton: FC<ToolbarButtonProps> = ({\n  text,\n  iconName,\n  href,\n  link,\n  onClick,\n}) => {\n  const appRouteParams = useAppRouteParams();\n\n  const renderInner = () => {\n    return (\n      <>\n        <Icon name={iconName} iconSize={1.5} />\n        <Text>{text}</Text>\n      </>\n    );\n  };\n\n  if (link) {\n    return (\n      <ToolBarLinkContainer\n        onClick={onClick}\n        to={`${appRouteParams.justifiedBaseUrl}/${link}`}\n      >\n        {renderInner()}\n      </ToolBarLinkContainer>\n    );\n  }\n\n  if (href) {\n    return (\n      <ToolBarAnchorContainer onClick={onClick} href={href} target=\"_blank\">\n        {renderInner()}\n      </ToolBarAnchorContainer>\n    );\n  }\n\n  return (\n    <ToolbarButtonContainer onClick={onClick}>\n      {renderInner()}\n    </ToolbarButtonContainer>\n  );\n};\n\nexport default ToolbarButton;\n"]},"metadata":{},"sourceType":"module"}