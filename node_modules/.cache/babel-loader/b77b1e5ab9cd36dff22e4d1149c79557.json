{"ast":null,"code":"var _jsxFileName = \"/Users/marcusmattus/ethdex/src/components/TransactionsTab/subcomponents/AnimatedWalletTransaction/AnimatedWalletTransaction.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useReducedMotion } from \"framer-motion\";\nimport { useTheme } from \"styled-components\";\nimport WalletTransaction from \"../WalletTransaction/WalletTransaction\";\nimport { walletTransactionHeight } from \"../WalletTransaction/WalletTransaction.styles\";\nimport { Container } from \"./AnimatedWalletTransaction.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimatedWalletTransaction = ({\n  transaction,\n  tokens,\n  chainId\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const [isMounted, setIsMounted] = useState(false);\n  const themeHasChanged = useMemo(() => isMounted, [theme.name]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Prevents all older (half hour) transactions animating simultaneously when user changes wallet\n\n  const transactionTooOld = useMemo(() => (new Date().getTime() - transaction.timestamp) / 1000 > 1800, [transaction]);\n  const heightAnimationDuration = shouldReduceMotion || transactionTooOld ? 0 : 0.3; // Border transition doesn't clear after animation ends, so when changing theme\n  // the border color animates, which looks weird.\n\n  const borderAnimationDuration = themeHasChanged ? 0 : 2;\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    animate: {\n      height: walletTransactionHeight\n    },\n    initial: !transactionTooOld && {\n      height: \"0rem\"\n    },\n    exit: {\n      height: \"0rem\",\n      transition: {\n        duration: heightAnimationDuration\n      }\n    },\n    transition: {\n      duration: heightAnimationDuration\n    },\n    children: /*#__PURE__*/_jsxDEV(WalletTransaction, {\n      animate: {\n        borderColor: theme.colors.borderGrey\n      },\n      initial: !transactionTooOld && {\n        borderColor: theme.colors.white\n      },\n      transition: {\n        delay: heightAnimationDuration,\n        duration: borderAnimationDuration\n      },\n      transaction: transaction,\n      tokens: tokens,\n      chainId: chainId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnimatedWalletTransaction, \"Bto0D8NfyT/yWVJzXtqSTcMd7MI=\", false, function () {\n  return [useTheme, useReducedMotion];\n});\n\n_c = AnimatedWalletTransaction;\nexport default AnimatedWalletTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedWalletTransaction\");","map":{"version":3,"sources":["/Users/marcusmattus/ethdex/src/components/TransactionsTab/subcomponents/AnimatedWalletTransaction/AnimatedWalletTransaction.tsx"],"names":["useEffect","useMemo","useState","useReducedMotion","useTheme","WalletTransaction","walletTransactionHeight","Container","AnimatedWalletTransaction","transaction","tokens","chainId","theme","shouldReduceMotion","isMounted","setIsMounted","themeHasChanged","name","transactionTooOld","Date","getTime","timestamp","heightAnimationDuration","borderAnimationDuration","height","transition","duration","borderColor","colors","borderGrey","white","delay"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AAIA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAGA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,SAASC,uBAAT,QAAwC,+CAAxC;AACA,SAASC,SAAT,QAA0B,oCAA1B;;;AAiBA,MAAMC,yBAAyB,GAAG,CAAC;AACjCC,EAAAA,WADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA;AAHiC,CAAD,KAII;AAAA;;AACpC,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,kBAAkB,GAAGV,gBAAgB,EAA3C;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMc,eAAe,GAAGf,OAAO,CAAC,MAAMa,SAAP,EAAkB,CAACF,KAAK,CAACK,IAAP,CAAlB,CAA/B,CANoC,CAM4B;AAEhE;;AACA,QAAMC,iBAAiB,GAAGjB,OAAO,CAC/B,MAAM,CAAC,IAAIkB,IAAJ,GAAWC,OAAX,KAAuBX,WAAW,CAACY,SAApC,IAAiD,IAAjD,GAAwD,IAD/B,EAE/B,CAACZ,WAAD,CAF+B,CAAjC;AAKA,QAAMa,uBAAuB,GAC3BT,kBAAkB,IAAIK,iBAAtB,GAA0C,CAA1C,GAA8C,GADhD,CAdoC,CAiBpC;AACA;;AACA,QAAMK,uBAAuB,GAAGP,eAAe,GAAG,CAAH,GAAO,CAAtD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAE;AAAES,MAAAA,MAAM,EAAElB;AAAV,KADX;AAEE,IAAA,OAAO,EAAE,CAACY,iBAAD,IAAsB;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAFjC;AAGE,IAAA,IAAI,EAAE;AACJA,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAEJ;AADA;AAFR,KAHR;AASE,IAAA,UAAU,EAAE;AACVI,MAAAA,QAAQ,EAAEJ;AADA,KATd;AAAA,2BAaE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAE;AAAEK,QAAAA,WAAW,EAAEf,KAAK,CAACgB,MAAN,CAAaC;AAA5B,OADX;AAEE,MAAA,OAAO,EAAE,CAACX,iBAAD,IAAsB;AAAES,QAAAA,WAAW,EAAEf,KAAK,CAACgB,MAAN,CAAaE;AAA5B,OAFjC;AAGE,MAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAET,uBADG;AAEVI,QAAAA,QAAQ,EAAEH;AAFA,OAHd;AAOE,MAAA,WAAW,EAAEd,WAPf;AAQE,MAAA,MAAM,EAAEC,MARV;AASE,MAAA,OAAO,EAAEC;AATX;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxDD;;GAAMH,yB;UAKUJ,Q,EACaD,gB;;;KANvBK,yB;AA0DN,eAAeA,yBAAf","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\n\nimport { TokenInfo } from \"@airswap/types\";\n\nimport { useReducedMotion } from \"framer-motion\";\nimport { useTheme } from \"styled-components\";\n\nimport { SubmittedTransaction } from \"../../../../features/transactions/transactionsSlice\";\nimport WalletTransaction from \"../WalletTransaction/WalletTransaction\";\nimport { walletTransactionHeight } from \"../WalletTransaction/WalletTransaction.styles\";\nimport { Container } from \"./AnimatedWalletTransaction.styles\";\n\ninterface AnimatedWalletTransactionProps {\n  /**\n   * The parent object of SubmittedOrder and SubmittedApproval\n   */\n  transaction: SubmittedTransaction;\n  /**\n   * All token metadata\n   */\n  tokens: TokenInfo[];\n  /**\n   * chainId of current Ethereum net\n   */\n  chainId: number;\n}\n\nconst AnimatedWalletTransaction = ({\n  transaction,\n  tokens,\n  chainId,\n}: AnimatedWalletTransactionProps) => {\n  const theme = useTheme();\n  const shouldReduceMotion = useReducedMotion();\n\n  const [isMounted, setIsMounted] = useState(false);\n\n  const themeHasChanged = useMemo(() => isMounted, [theme.name]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Prevents all older (half hour) transactions animating simultaneously when user changes wallet\n  const transactionTooOld = useMemo(\n    () => (new Date().getTime() - transaction.timestamp) / 1000 > 1800,\n    [transaction]\n  );\n\n  const heightAnimationDuration =\n    shouldReduceMotion || transactionTooOld ? 0 : 0.3;\n\n  // Border transition doesn't clear after animation ends, so when changing theme\n  // the border color animates, which looks weird.\n  const borderAnimationDuration = themeHasChanged ? 0 : 2;\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  return (\n    <Container\n      animate={{ height: walletTransactionHeight }}\n      initial={!transactionTooOld && { height: \"0rem\" }}\n      exit={{\n        height: \"0rem\",\n        transition: {\n          duration: heightAnimationDuration,\n        },\n      }}\n      transition={{\n        duration: heightAnimationDuration,\n      }}\n    >\n      <WalletTransaction\n        animate={{ borderColor: theme.colors.borderGrey }}\n        initial={!transactionTooOld && { borderColor: theme.colors.white }}\n        transition={{\n          delay: heightAnimationDuration,\n          duration: borderAnimationDuration,\n        }}\n        transaction={transaction}\n        tokens={tokens}\n        chainId={chainId}\n      />\n    </Container>\n  );\n};\n\nexport default AnimatedWalletTransaction;\n"]},"metadata":{},"sourceType":"module"}