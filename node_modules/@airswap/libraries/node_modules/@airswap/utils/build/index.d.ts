/// <reference types="node" />
import { ethers } from 'ethers';
import * as url from 'url';
import { Quote, Order, Levels, Formula } from '@airswap/types';
export * from './src/hashes';
export * from './src/orders';
export * from './src/quotes';
export declare function calculateCost(amount: string, pricing: Formula | Levels): string;
export declare function calculateCostFromLevels(amount: string, levels: Levels): string;
export declare function getBestByLowestSenderAmount(objects: Array<Quote> | Array<Order>): any;
export declare function getBestByLowestSignerAmount(objects: Array<Quote> | Array<Order>): any;
export declare function getBestByHighestSignerAmount(objects: Array<Quote> | Array<Order>): any;
export declare function getBestByHighestSenderAmount(objects: Array<Quote> | Array<Order>): any;
export declare function toDecimalString(value: string | ethers.BigNumber, decimals: string | number): string;
export declare function toAtomicString(value: string | ethers.BigNumber, decimals: string | number): string;
export declare function getTimestamp(): string;
export declare function parseUrl(locator: string): url.UrlWithStringQuery;
export declare function getEtherscanURL(chainId: number, hash: string): string;
export declare function flattenObject(obj: any, propName?: string, result?: {}): {
    [id: string]: string;
};
export declare function lowerCaseAddresses(obj: any): any;
