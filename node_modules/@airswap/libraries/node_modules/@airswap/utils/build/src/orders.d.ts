import { ethers } from 'ethers';
import { UnsignedLightOrder, LightOrder, LightSignature } from '@airswap/types';
export declare function numberToBytes32(number: number): string;
export declare function isValidLightOrder(order: LightOrder): boolean;
export declare function createLightOrder({ expiry, nonce, signerWallet, signerToken, signerAmount, protocolFee, senderWallet, senderToken, senderAmount, }: any): UnsignedLightOrder;
export declare function createLightSignature(unsignedOrder: UnsignedLightOrder, signer: ethers.VoidSigner | string, swapContract: string, chainId: number): Promise<LightSignature>;
export declare function getSignerFromLightSignature(order: UnsignedLightOrder, swapContract: string, chainId: number, v: string, r: string, s: string): string;
export declare function lightOrderToParams(order: LightOrder): Array<string>;
export declare function orderPropsToStrings(obj: any): LightOrder;
