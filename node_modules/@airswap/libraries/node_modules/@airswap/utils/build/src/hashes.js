"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrderHash = exports.hashDomain = exports.hashOrder = exports.hashParty = exports.PARTY_TYPEHASH = exports.ORDER_TYPEHASH = exports.LIGHT_EIP712_DOMAIN_TYPEHASH = exports.EIP712_DOMAIN_TYPEHASH = void 0;
var util = __importStar(require("ethereumjs-util"));
var ethers_1 = require("ethers");
var constants_1 = require("@airswap/constants");
var types_1 = require("@airswap/types");
function stringify(types, primaryType) {
    var str = primaryType + "(";
    var keys = Object.keys(types[primaryType]);
    for (var i = 0; i < keys.length; i++) {
        str += types[primaryType][i].type + " " + types[primaryType][i].name;
        if (i !== keys.length - 1) {
            str += ',';
        }
    }
    return str + ")";
}
exports.EIP712_DOMAIN_TYPEHASH = util.keccak256(stringify(types_1.EIP712, 'EIP712Domain'));
exports.LIGHT_EIP712_DOMAIN_TYPEHASH = util.keccak256(stringify(types_1.EIP712Light, 'EIP712Domain'));
exports.ORDER_TYPEHASH = util.keccak256(stringify(types_1.EIP712, 'Order') + stringify(types_1.EIP712, 'Party'));
exports.PARTY_TYPEHASH = util.keccak256(stringify(types_1.EIP712, 'Party'));
function hashParty(party) {
    return util.keccak256(ethers_1.ethers.utils.defaultAbiCoder.encode(['bytes32', 'bytes4', 'address', 'address', 'uint256', 'uint256'], [
        exports.PARTY_TYPEHASH,
        party.kind,
        party.wallet,
        party.token,
        party.amount,
        party.id,
    ]));
}
exports.hashParty = hashParty;
function hashOrder(order) {
    return util.keccak256(ethers_1.ethers.utils.defaultAbiCoder.encode(['bytes32', 'uint256', 'uint256', 'bytes32', 'bytes32', 'bytes32'], [
        exports.ORDER_TYPEHASH,
        order.nonce,
        order.expiry,
        hashParty(order.signer),
        hashParty(order.sender),
        hashParty(order.affiliate),
    ]));
}
exports.hashOrder = hashOrder;
function hashDomain(swapContract) {
    return util.keccak256(ethers_1.ethers.utils.defaultAbiCoder.encode(['bytes32', 'bytes32', 'bytes32', 'address'], [
        exports.EIP712_DOMAIN_TYPEHASH,
        util.keccak256(constants_1.DOMAIN_NAME),
        util.keccak256(constants_1.DOMAIN_VERSION),
        swapContract,
    ]));
}
exports.hashDomain = hashDomain;
function getOrderHash(order, swapContract) {
    return util.keccak256(Buffer.concat([
        Buffer.from('1901', 'hex'),
        hashDomain(swapContract),
        hashOrder(order),
    ]));
}
exports.getOrderHash = getOrderHash;
//# sourceMappingURL=hashes.js.map